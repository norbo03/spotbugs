package edu.umd.cs.findbugs.detect.publicidentifiers;

import static edu.umd.cs.findbugs.detect.publicidentifiers.PublicIdentifiers.PUBLIC_IDENTIFIERS;

/**
 * Utility class to load the public identifiers from V to Z
 */
class LoadPublicIdentifiersVZ {
    public static void load() {
        PUBLIC_IDENTIFIERS.add("ValidatedInfo");
        PUBLIC_IDENTIFIERS.add("ValidatePipe");
        PUBLIC_IDENTIFIERS.add("ValidationContext");
        PUBLIC_IDENTIFIERS.add("ValidationManager");
        PUBLIC_IDENTIFIERS.add("ValidationState");
        PUBLIC_IDENTIFIERS.add("Validator");
        PUBLIC_IDENTIFIERS.add("ValidatorException");
        PUBLIC_IDENTIFIERS.add("ValidatorHandler");
        PUBLIC_IDENTIFIERS.add("VaList");
        PUBLIC_IDENTIFIERS.add("VaList$Builder");
        PUBLIC_IDENTIFIERS.add("Value");
        PUBLIC_IDENTIFIERS.add("ValueBased");
        PUBLIC_IDENTIFIERS.add("ValueConversionException");
        PUBLIC_IDENTIFIERS.add("ValueConversions");
        PUBLIC_IDENTIFIERS.add("ValueConverter");
        PUBLIC_IDENTIFIERS.add("ValueExp");
        PUBLIC_IDENTIFIERS.add("ValueKind");
        PUBLIC_IDENTIFIERS.add("ValueKindFactory");
        PUBLIC_IDENTIFIERS.add("ValueLayout");
        PUBLIC_IDENTIFIERS.add("ValueLayout$OfAddress");
        PUBLIC_IDENTIFIERS.add("ValueLayout$OfBoolean");
        PUBLIC_IDENTIFIERS.add("ValueLayout$OfByte");
        PUBLIC_IDENTIFIERS.add("ValueLayout$OfChar");
        PUBLIC_IDENTIFIERS.add("ValueLayout$OfDouble");
        PUBLIC_IDENTIFIERS.add("ValueLayout$OfFloat");
        PUBLIC_IDENTIFIERS.add("ValueLayout$OfInt");
        PUBLIC_IDENTIFIERS.add("ValueLayout$OfLong");
        PUBLIC_IDENTIFIERS.add("ValueLayout$OfShort");
        PUBLIC_IDENTIFIERS.add("ValueObject");
        PUBLIC_IDENTIFIERS.add("ValueStore");
        PUBLIC_IDENTIFIERS.add("ValueTaglet");
        PUBLIC_IDENTIFIERS.add("ValueTree");
        PUBLIC_IDENTIFIERS.add("VarHandle");
        PUBLIC_IDENTIFIERS.add("Variability");
        PUBLIC_IDENTIFIERS.add("Variable");
        PUBLIC_IDENTIFIERS.add("VariableElement");
        PUBLIC_IDENTIFIERS.add("VariableGridLayout");
        PUBLIC_IDENTIFIERS.add("VariableHeightLayoutCache");
        PUBLIC_IDENTIFIERS.add("VariableLengthInstruction");
        PUBLIC_IDENTIFIERS.add("VariableSafeAbsRef");
        PUBLIC_IDENTIFIERS.add("VariableStack");
        PUBLIC_IDENTIFIERS.add("VariableTree");
        PUBLIC_IDENTIFIERS.add("VarInsnNode");
        PUBLIC_IDENTIFIERS.add("VarSnippet");
        PUBLIC_IDENTIFIERS.add("Vector");
        PUBLIC_IDENTIFIERS.add("VectorMask");
        PUBLIC_IDENTIFIERS.add("VectorOperators");
        PUBLIC_IDENTIFIERS.add("VectorOperators$Associative");
        PUBLIC_IDENTIFIERS.add("VectorOperators$Binary");
        PUBLIC_IDENTIFIERS.add("VectorOperators$Comparison");
        PUBLIC_IDENTIFIERS.add("VectorOperators$Conversion");
        PUBLIC_IDENTIFIERS.add("VectorOperators$Operator");
        PUBLIC_IDENTIFIERS.add("VectorOperators$Ternary");
        PUBLIC_IDENTIFIERS.add("VectorOperators$Test");
        PUBLIC_IDENTIFIERS.add("VectorOperators$Unary");
        PUBLIC_IDENTIFIERS.add("VectorShuffle");
        PUBLIC_IDENTIFIERS.add("VectorSpecies");
        PUBLIC_IDENTIFIERS.add("VectorSupport");
        PUBLIC_IDENTIFIERS.add("VectorSupport$BinaryOperation");
        PUBLIC_IDENTIFIERS.add("VectorSupport$CompressExpandOperation");
        PUBLIC_IDENTIFIERS.add("VectorSupport$FromBitsCoercedOperation");
        PUBLIC_IDENTIFIERS.add("VectorSupport$IndexOperation");
        PUBLIC_IDENTIFIERS.add("VectorSupport$LoadOperation");
        PUBLIC_IDENTIFIERS.add("VectorSupport$LoadVectorMaskedOperation");
        PUBLIC_IDENTIFIERS.add("VectorSupport$LoadVectorOperationWithMap");
        PUBLIC_IDENTIFIERS.add("VectorSupport$ReductionOperation");
        PUBLIC_IDENTIFIERS.add("VectorSupport$ShuffleIotaOperation");
        PUBLIC_IDENTIFIERS.add("VectorSupport$ShuffleToVectorOperation");
        PUBLIC_IDENTIFIERS.add("VectorSupport$StoreVectorMaskedOperation");
        PUBLIC_IDENTIFIERS.add("VectorSupport$StoreVectorOperation");
        PUBLIC_IDENTIFIERS.add("VectorSupport$StoreVectorOperationWithMap");
        PUBLIC_IDENTIFIERS.add("VectorSupport$TernaryOperation");
        PUBLIC_IDENTIFIERS.add("VectorSupport$UnaryOperation");
        PUBLIC_IDENTIFIERS.add("VectorSupport$VecExtractOp");
        PUBLIC_IDENTIFIERS.add("VectorSupport$VecInsertOp");
        PUBLIC_IDENTIFIERS.add("VectorSupport$Vector");
        PUBLIC_IDENTIFIERS.add("VectorSupport$VectorBlendOp");
        PUBLIC_IDENTIFIERS.add("VectorSupport$VectorBroadcastIntOp");
        PUBLIC_IDENTIFIERS.add("VectorSupport$VectorCompareOp");
        PUBLIC_IDENTIFIERS.add("VectorSupport$VectorConvertOp");
        PUBLIC_IDENTIFIERS.add("VectorSupport$VectorMask");
        PUBLIC_IDENTIFIERS.add("VectorSupport$VectorMaskOp");
        PUBLIC_IDENTIFIERS.add("VectorSupport$VectorPayload");
        PUBLIC_IDENTIFIERS.add("VectorSupport$VectorRearrangeOp");
        PUBLIC_IDENTIFIERS.add("VectorSupport$VectorShuffle");
        PUBLIC_IDENTIFIERS.add("VectorSupport$VectorSpecies");
        PUBLIC_IDENTIFIERS.add("VerifiedReference");
        PUBLIC_IDENTIFIERS.add("VerifyAccess");
        PUBLIC_IDENTIFIERS.add("VerifyError");
        PUBLIC_IDENTIFIERS.add("VerifyType");
        PUBLIC_IDENTIFIERS.add("Version");
        PUBLIC_IDENTIFIERS.add("VersionHelper");
        PUBLIC_IDENTIFIERS.add("VersionTree");
        PUBLIC_IDENTIFIERS.add("VetoableChangeListener");
        PUBLIC_IDENTIFIERS.add("VetoableChangeListenerProxy");
        PUBLIC_IDENTIFIERS.add("VetoableChangeSupport");
        PUBLIC_IDENTIFIERS.add("VFrame");
        PUBLIC_IDENTIFIERS.add("View");
        PUBLIC_IDENTIFIERS.add("ViewCSS");
        PUBLIC_IDENTIFIERS.add("ViewFactory");
        PUBLIC_IDENTIFIERS.add("ViewMenu");
        PUBLIC_IDENTIFIERS.add("ViewportLayout");
        PUBLIC_IDENTIFIERS.add("ViewportUI");
        PUBLIC_IDENTIFIERS.add("VirtualBaseConstructor");
        PUBLIC_IDENTIFIERS.add("VirtualCallData");
        PUBLIC_IDENTIFIERS.add("VirtualCallTypeData");
        PUBLIC_IDENTIFIERS.add("VirtualConstructor");
        PUBLIC_IDENTIFIERS.add("VirtualMachine");
        PUBLIC_IDENTIFIERS.add("VirtualMachineDescriptor");
        PUBLIC_IDENTIFIERS.add("VirtualMachineError");
        PUBLIC_IDENTIFIERS.add("VirtualMachineImpl");
        PUBLIC_IDENTIFIERS.add("VirtualMachineManager");
        PUBLIC_IDENTIFIERS.add("VirtualMachineManagerImpl");
        PUBLIC_IDENTIFIERS.add("VirtualMachineManagerService");
        PUBLIC_IDENTIFIERS.add("VirtualObject$LayoutVerifier");
        PUBLIC_IDENTIFIERS.add("virtual_parse_stack");
        PUBLIC_IDENTIFIERS.add("VirtualSpace");
        PUBLIC_IDENTIFIERS.add("VirtualThreadEndEvent");
        PUBLIC_IDENTIFIERS.add("VirtualThreadPinnedEvent");
        PUBLIC_IDENTIFIERS.add("VirtualThreadStartEvent");
        PUBLIC_IDENTIFIERS.add("VirtualThreadSubmitFailedEvent");
        PUBLIC_IDENTIFIERS.add("Visibility");
        PUBLIC_IDENTIFIERS.add("VisibleMemberCache");
        PUBLIC_IDENTIFIERS.add("VisibleMemberTable");
        PUBLIC_IDENTIFIERS.add("Visitor");
        PUBLIC_IDENTIFIERS.add("Visual");
        PUBLIC_IDENTIFIERS.add("VM");
        PUBLIC_IDENTIFIERS.add("VM$BufferPool");
        PUBLIC_IDENTIFIERS.add("VMCannotBeModifiedException");
        PUBLIC_IDENTIFIERS.add("VMConstant");
        PUBLIC_IDENTIFIERS.add("VMDeathEvent");
        PUBLIC_IDENTIFIERS.add("VMDeathRequest");
        PUBLIC_IDENTIFIERS.add("VMDisconnectedException");
        PUBLIC_IDENTIFIERS.add("VMDisconnectEvent");
        PUBLIC_IDENTIFIERS.add("VmEvent");
        PUBLIC_IDENTIFIERS.add("VMFlagsPanel");
        PUBLIC_IDENTIFIERS.add("VmIdentifier");
        PUBLIC_IDENTIFIERS.add("VMInternalFrame");
        PUBLIC_IDENTIFIERS.add("VmListener");
        PUBLIC_IDENTIFIERS.add("VMManagement");
        PUBLIC_IDENTIFIERS.add("VMMismatchException");
        PUBLIC_IDENTIFIERS.add("VMModifiers");
        PUBLIC_IDENTIFIERS.add("VMNotConnectedException");
        PUBLIC_IDENTIFIERS.add("VMObject");
        PUBLIC_IDENTIFIERS.add("VMObjectFactory");
        PUBLIC_IDENTIFIERS.add("VMOopHandle");
        PUBLIC_IDENTIFIERS.add("VMOption");
        PUBLIC_IDENTIFIERS.add("VMOptionCompositeData");
        PUBLIC_IDENTIFIERS.add("VMOutOfMemoryException");
        PUBLIC_IDENTIFIERS.add("VMPanel");
        PUBLIC_IDENTIFIERS.add("VMReg");
        PUBLIC_IDENTIFIERS.add("VMRegImpl");
        PUBLIC_IDENTIFIERS.add("VMStartEvent");
        PUBLIC_IDENTIFIERS.add("VMStartException");
        PUBLIC_IDENTIFIERS.add("VmStatusChangeEvent");
        PUBLIC_IDENTIFIERS.add("VMSupport");
        PUBLIC_IDENTIFIERS.add("vmSymbols");
        PUBLIC_IDENTIFIERS.add("VMVersionInfoPanel");
        PUBLIC_IDENTIFIERS.add("VMVersionMismatchException");
        PUBLIC_IDENTIFIERS.add("VoiceStatus");
        PUBLIC_IDENTIFIERS.add("VoidDescriptor");
        PUBLIC_IDENTIFIERS.add("VoidType");
        PUBLIC_IDENTIFIERS.add("VoidTypeImpl");
        PUBLIC_IDENTIFIERS.add("VoidValue");
        PUBLIC_IDENTIFIERS.add("VoidValueImpl");
        PUBLIC_IDENTIFIERS.add("VolatileCallSite");
        PUBLIC_IDENTIFIERS.add("VolatileImage");
        PUBLIC_IDENTIFIERS.add("VolatileSurfaceManager");
        PUBLIC_IDENTIFIERS.add("VSyncedBSManager");
        PUBLIC_IDENTIFIERS.add("VtableBlob");
        PUBLIC_IDENTIFIERS.add("VtblAccess");
        PUBLIC_IDENTIFIERS.add("WalkerFactory");
        PUBLIC_IDENTIFIERS.add("WalkingIterator");
        PUBLIC_IDENTIFIERS.add("WalkingIteratorSorted");
        PUBLIC_IDENTIFIERS.add("Warner");
        PUBLIC_IDENTIFIERS.add("Watchable");
        PUBLIC_IDENTIFIERS.add("WatcherThread");
        PUBLIC_IDENTIFIERS.add("WatchEvent");
        PUBLIC_IDENTIFIERS.add("WatchEvent$Kind");
        PUBLIC_IDENTIFIERS.add("WatchEvent$Modifier");
        PUBLIC_IDENTIFIERS.add("WatchKey");
        PUBLIC_IDENTIFIERS.add("WatchpointEvent");
        PUBLIC_IDENTIFIERS.add("WatchpointRequest");
        PUBLIC_IDENTIFIERS.add("WatchService");
        PUBLIC_IDENTIFIERS.add("wav");
        PUBLIC_IDENTIFIERS.add("WBMPImageReader");
        PUBLIC_IDENTIFIERS.add("WBMPImageReaderSpi");
        PUBLIC_IDENTIFIERS.add("WBMPImageWriter");
        PUBLIC_IDENTIFIERS.add("WBMPImageWriterSpi");
        PUBLIC_IDENTIFIERS.add("WBMPMetadata");
        PUBLIC_IDENTIFIERS.add("WBMPMetadataFormat");
        PUBLIC_IDENTIFIERS.add("WeakClassHashMap");
        PUBLIC_IDENTIFIERS.add("WeakHashMap");
        PUBLIC_IDENTIFIERS.add("WeakReference");
        PUBLIC_IDENTIFIERS.add("WebRowSet");
        PUBLIC_IDENTIFIERS.add("WebRowSetImpl");
        PUBLIC_IDENTIFIERS.add("WebRowSetXmlReader");
        PUBLIC_IDENTIFIERS.add("WebRowSetXmlWriter");
        PUBLIC_IDENTIFIERS.add("WebSocket");
        PUBLIC_IDENTIFIERS.add("WebSocket$Builder");
        PUBLIC_IDENTIFIERS.add("WebSocket$Listener");
        PUBLIC_IDENTIFIERS.add("WebSocketRequest");
        PUBLIC_IDENTIFIERS.add("WhileLoopTree");
        PUBLIC_IDENTIFIERS.add("WhitespaceStrippingElementMatcher");
        PUBLIC_IDENTIFIERS.add("Widget");
        PUBLIC_IDENTIFIERS.add("Wildcard");
        PUBLIC_IDENTIFIERS.add("WildcardTree");
        PUBLIC_IDENTIFIERS.add("WildcardType");
        PUBLIC_IDENTIFIERS.add("WildcardTypeImpl");
        PUBLIC_IDENTIFIERS.add("Win32AARCH64JavaThreadPDAccess");
        PUBLIC_IDENTIFIERS.add("Win32AMD64JavaThreadPDAccess");
        PUBLIC_IDENTIFIERS.add("Win32VtblAccess");
        PUBLIC_IDENTIFIERS.add("Win32X86JavaThreadPDAccess");
        PUBLIC_IDENTIFIERS.add("WindbgAARCH64ThreadFactory");
        PUBLIC_IDENTIFIERS.add("WindbgAMD64ThreadFactory");
        PUBLIC_IDENTIFIERS.add("WindbgDebugger");
        PUBLIC_IDENTIFIERS.add("WindbgDebuggerLocal");
        PUBLIC_IDENTIFIERS.add("WindbgThreadFactory");
        PUBLIC_IDENTIFIERS.add("WindbgX86ThreadFactory");
        PUBLIC_IDENTIFIERS.add("Window");
        PUBLIC_IDENTIFIERS.add("Window$AccessibleAWTWindow");
        PUBLIC_IDENTIFIERS.add("WindowAdapter");
        PUBLIC_IDENTIFIERS.add("WindowConstants");
        PUBLIC_IDENTIFIERS.add("WindowEvent");
        PUBLIC_IDENTIFIERS.add("WindowFocusListener");
        PUBLIC_IDENTIFIERS.add("WindowIDProvider");
        PUBLIC_IDENTIFIERS.add("WindowListener");
        PUBLIC_IDENTIFIERS.add("WindowPeer");
        PUBLIC_IDENTIFIERS.add("WindowPropertyGetter");
        PUBLIC_IDENTIFIERS.add("WindowsAMD64CFrame");
        PUBLIC_IDENTIFIERS.add("WindowsKeybindings");
        PUBLIC_IDENTIFIERS.add("WindowsNTSubsystem");
        PUBLIC_IDENTIFIERS.add("WindowsPlacesBar");
        PUBLIC_IDENTIFIERS.add("WindowStateListener");
        PUBLIC_IDENTIFIERS.add("WindowsX86CFrame");
        PUBLIC_IDENTIFIERS.add("WindowUpdateFrame");
        PUBLIC_IDENTIFIERS.add("WinVaList");
        PUBLIC_IDENTIFIERS.add("WinVaList$Builder");
        PUBLIC_IDENTIFIERS.add("WizardDlg");
        PUBLIC_IDENTIFIERS.add("WorkArounds");
        PUBLIC_IDENTIFIERS.add("Worker");
        PUBLIC_IDENTIFIERS.add("WorkerThread");
        PUBLIC_IDENTIFIERS.add("Wrap$CompoundWrap");
        PUBLIC_IDENTIFIERS.add("WrappedPlainView");
        PUBLIC_IDENTIFIERS.add("WrappedRuntimeException");
        PUBLIC_IDENTIFIERS.add("WrappedSAXException");
        PUBLIC_IDENTIFIERS.add("Wrapper");
        PUBLIC_IDENTIFIERS.add("WrapperInstance");
        PUBLIC_IDENTIFIERS.add("WrappingJavaFileManager");
        PUBLIC_IDENTIFIERS.add("WritableByteChannel");
        PUBLIC_IDENTIFIERS.add("WritableRaster");
        PUBLIC_IDENTIFIERS.add("WritableRasterNative");
        PUBLIC_IDENTIFIERS.add("WritableRenderedImage");
        PUBLIC_IDENTIFIERS.add("WriteAbortedException");
        PUBLIC_IDENTIFIERS.add("WritePendingException");
        PUBLIC_IDENTIFIERS.add("Writer");
        PUBLIC_IDENTIFIERS.add("WriterFactory");
        PUBLIC_IDENTIFIERS.add("WriterFactoryImpl");
        PUBLIC_IDENTIFIERS.add("WriterOutputStream");
        PUBLIC_IDENTIFIERS.add("WriterUtility");
        PUBLIC_IDENTIFIERS.add("WrongMethodTypeException");
        PUBLIC_IDENTIFIERS.add("WrongNumberArgsException");
        PUBLIC_IDENTIFIERS.add("WrongParserException");
        PUBLIC_IDENTIFIERS.add("WrongTypeException");
        PUBLIC_IDENTIFIERS.add("X11ComponentPeer");
        PUBLIC_IDENTIFIERS.add("X11CustomCursor");
        PUBLIC_IDENTIFIERS.add("X11Dingbats");
        PUBLIC_IDENTIFIERS.add("X11GB18030_0");
        PUBLIC_IDENTIFIERS.add("X11GB18030_1");
        PUBLIC_IDENTIFIERS.add("X11GB2312");
        PUBLIC_IDENTIFIERS.add("X11GBK");
        PUBLIC_IDENTIFIERS.add("X11GraphicsConfig");
        PUBLIC_IDENTIFIERS.add("X11InputMethod");
        PUBLIC_IDENTIFIERS.add("X11InputMethodBase");
        PUBLIC_IDENTIFIERS.add("X11InputMethodDescriptor");
        PUBLIC_IDENTIFIERS.add("X11Johab");
        PUBLIC_IDENTIFIERS.add("X11KSC5601");
        PUBLIC_IDENTIFIERS.add("X11PMBlitBgLoops");
        PUBLIC_IDENTIFIERS.add("X11PMBlitLoops");
        PUBLIC_IDENTIFIERS.add("X11Renderer");
        PUBLIC_IDENTIFIERS.add("X11Renderer$X11TracingRenderer");
        PUBLIC_IDENTIFIERS.add("X11SunUnicode_0");
        PUBLIC_IDENTIFIERS.add("X11SurfaceData");
        PUBLIC_IDENTIFIERS.add("X11SurfaceData$LazyPipe");
        PUBLIC_IDENTIFIERS.add("X11SurfaceDataProxy");
        PUBLIC_IDENTIFIERS.add("X11SurfaceDataProxy$Bitmask");
        PUBLIC_IDENTIFIERS.add("X11SurfaceDataProxy$Opaque");
        PUBLIC_IDENTIFIERS.add("X11TextRenderer");
        PUBLIC_IDENTIFIERS.add("X11TextRenderer$Tracer");
        PUBLIC_IDENTIFIERS.add("X11VolatileSurfaceManager");
        PUBLIC_IDENTIFIERS.add("X400Address");
        PUBLIC_IDENTIFIERS.add("X500Name");
        PUBLIC_IDENTIFIERS.add("X509Certificate");
        PUBLIC_IDENTIFIERS.add("X509CertificatePair");
        PUBLIC_IDENTIFIERS.add("X509CertificateResolver");
        PUBLIC_IDENTIFIERS.add("X509CertImpl");
        PUBLIC_IDENTIFIERS.add("X509CertInfo");
        PUBLIC_IDENTIFIERS.add("X509CertPath");
        PUBLIC_IDENTIFIERS.add("X509CertSelector");
        PUBLIC_IDENTIFIERS.add("X509CRL");
        PUBLIC_IDENTIFIERS.add("X509CRLEntry");
        PUBLIC_IDENTIFIERS.add("X509CRLEntryImpl");
        PUBLIC_IDENTIFIERS.add("X509CRLImpl");
        PUBLIC_IDENTIFIERS.add("X509CRLImpl$TBSCertList");
        PUBLIC_IDENTIFIERS.add("X509CRLSelector");
        PUBLIC_IDENTIFIERS.add("X509Data");
        PUBLIC_IDENTIFIERS.add("X509DigestResolver");
        PUBLIC_IDENTIFIERS.add("X509EncodedKeySpec");
        PUBLIC_IDENTIFIERS.add("X509ExtendedKeyManager");
        PUBLIC_IDENTIFIERS.add("X509ExtendedTrustManager");
        PUBLIC_IDENTIFIERS.add("X509Extension");
        PUBLIC_IDENTIFIERS.add("X509Factory");
        PUBLIC_IDENTIFIERS.add("X509IssuerSerial");
        PUBLIC_IDENTIFIERS.add("X509IssuerSerialResolver");
        PUBLIC_IDENTIFIERS.add("X509Key");
        PUBLIC_IDENTIFIERS.add("X509KeyManager");
        PUBLIC_IDENTIFIERS.add("X509SKIResolver");
        PUBLIC_IDENTIFIERS.add("X509SubjectNameResolver");
        PUBLIC_IDENTIFIERS.add("X509TrustManager");
        PUBLIC_IDENTIFIERS.add("X86_64Architecture");
        PUBLIC_IDENTIFIERS.add("X86_64Architecture$Regs");
        PUBLIC_IDENTIFIERS.add("X86_64Architecture$StorageType");
        PUBLIC_IDENTIFIERS.add("X86CurrentFrameGuess");
        PUBLIC_IDENTIFIERS.add("X86Frame");
        PUBLIC_IDENTIFIERS.add("X86JavaCallWrapper");
        PUBLIC_IDENTIFIERS.add("X86RegisterMap");
        PUBLIC_IDENTIFIERS.add("X86ThreadContext");
        PUBLIC_IDENTIFIERS.add("XAbstractMenuItem");
        PUBLIC_IDENTIFIERS.add("XAConnection");
        PUBLIC_IDENTIFIERS.add("XAConnectionBuilder");
        PUBLIC_IDENTIFIERS.add("XADataSource");
        PUBLIC_IDENTIFIERS.add("XAException");
        PUBLIC_IDENTIFIERS.add("x_aiff");
        PUBLIC_IDENTIFIERS.add("XalanXPathFactory");
        PUBLIC_IDENTIFIERS.add("XAnyEvent");
        PUBLIC_IDENTIFIERS.add("XAResource");
        PUBLIC_IDENTIFIERS.add("XBaseMenuWindow");
        PUBLIC_IDENTIFIERS.add("XBaseWindow");
        PUBLIC_IDENTIFIERS.add("XbmImageDecoder");
        PUBLIC_IDENTIFIERS.add("XBoolean");
        PUBLIC_IDENTIFIERS.add("XBooleanStatic");
        PUBLIC_IDENTIFIERS.add("XButtonEvent");
        PUBLIC_IDENTIFIERS.add("XButtonPeer");
        PUBLIC_IDENTIFIERS.add("XcbRequestCounter");
        PUBLIC_IDENTIFIERS.add("XCirculateEvent");
        PUBLIC_IDENTIFIERS.add("XCirculateRequestEvent");
        PUBLIC_IDENTIFIERS.add("XClientMessageEvent");
        PUBLIC_IDENTIFIERS.add("XColor");
        PUBLIC_IDENTIFIERS.add("XColormapEvent");
        PUBLIC_IDENTIFIERS.add("XComponentPeer");
        PUBLIC_IDENTIFIERS.add("XConfigureEvent");
        PUBLIC_IDENTIFIERS.add("XConfigureRequestEvent");
        PUBLIC_IDENTIFIERS.add("XCreateWindowEvent");
        PUBLIC_IDENTIFIERS.add("XCreateWindowParams");
        PUBLIC_IDENTIFIERS.add("XCrossingEvent");
        PUBLIC_IDENTIFIERS.add("XCustomCursor");
        PUBLIC_IDENTIFIERS.add("XDataTransferer");
        PUBLIC_IDENTIFIERS.add("XDataViewer");
        PUBLIC_IDENTIFIERS.add("XDesktopPeer");
        PUBLIC_IDENTIFIERS.add("XDestroyWindowEvent");
        PUBLIC_IDENTIFIERS.add("XDHKeyAgreement");
        PUBLIC_IDENTIFIERS.add("XDHKeyFactory");
        PUBLIC_IDENTIFIERS.add("XDHKeyPairGenerator");
        PUBLIC_IDENTIFIERS.add("XDragSourceProtocol$TargetWindowInfo");
        PUBLIC_IDENTIFIERS.add("XECKey");
        PUBLIC_IDENTIFIERS.add("XECOperations");
        PUBLIC_IDENTIFIERS.add("XECParameters");
        PUBLIC_IDENTIFIERS.add("XECPrivateKey");
        PUBLIC_IDENTIFIERS.add("XECPrivateKeySpec");
        PUBLIC_IDENTIFIERS.add("XECPublicKey");
        PUBLIC_IDENTIFIERS.add("XECPublicKeySpec");
        PUBLIC_IDENTIFIERS.add("XEmbedCanvasPeer");
        PUBLIC_IDENTIFIERS.add("XEmbedChildProxy");
        PUBLIC_IDENTIFIERS.add("XEmbedChildProxyPeer");
        PUBLIC_IDENTIFIERS.add("XEmbedClientHelper");
        PUBLIC_IDENTIFIERS.add("XEmbeddedFrame");
        PUBLIC_IDENTIFIERS.add("XEmbeddedFramePeer");
        PUBLIC_IDENTIFIERS.add("XEmbeddingContainer");
        PUBLIC_IDENTIFIERS.add("XEmbedHelper");
        PUBLIC_IDENTIFIERS.add("XEmbedServerTester");
        PUBLIC_IDENTIFIERS.add("XErrorEvent");
        PUBLIC_IDENTIFIERS.add("XErrorHandler");
        PUBLIC_IDENTIFIERS.add("XErrorHandler$IgnoreBadWindowHandler");
        PUBLIC_IDENTIFIERS.add("XErrorHandler$VerifyChangePropertyHandler");
        PUBLIC_IDENTIFIERS.add("XErrorHandler$XBaseErrorHandler");
        PUBLIC_IDENTIFIERS.add("XEvent");
        PUBLIC_IDENTIFIERS.add("XEventDispatcher");
        PUBLIC_IDENTIFIERS.add("XException");
        PUBLIC_IDENTIFIERS.add("XExposeEvent");
        PUBLIC_IDENTIFIERS.add("XExtData");
        PUBLIC_IDENTIFIERS.add("XFocusChangeEvent");
        PUBLIC_IDENTIFIERS.add("XFocusProxyWindow");
        PUBLIC_IDENTIFIERS.add("XGraphicsExposeEvent");
        PUBLIC_IDENTIFIERS.add("XGravityEvent");
        PUBLIC_IDENTIFIERS.add("XHTMLSerializer");
        PUBLIC_IDENTIFIERS.add("XIconSize");
        PUBLIC_IDENTIFIERS.add("XIconWindow");
        PUBLIC_IDENTIFIERS.add("Xid");
        PUBLIC_IDENTIFIERS.add("XIDGenerator");
        PUBLIC_IDENTIFIERS.add("XInclude11TextReader");
        PUBLIC_IDENTIFIERS.add("XIncludeAwareParserConfiguration");
        PUBLIC_IDENTIFIERS.add("XIncludeHandler");
        PUBLIC_IDENTIFIERS.add("XIncludeHandler$Notation");
        PUBLIC_IDENTIFIERS.add("XIncludeHandler$UnparsedEntity");
        PUBLIC_IDENTIFIERS.add("XIncludeMessageFormatter");
        PUBLIC_IDENTIFIERS.add("XIncludeNamespaceSupport");
        PUBLIC_IDENTIFIERS.add("XIncludeParserConfiguration");
        PUBLIC_IDENTIFIERS.add("XIncludeTextReader");
        PUBLIC_IDENTIFIERS.add("XInputMethod");
        PUBLIC_IDENTIFIERS.add("XkbAccessXNotifyEvent");
        PUBLIC_IDENTIFIERS.add("XkbActionMessageEvent");
        PUBLIC_IDENTIFIERS.add("XkbAnyEvent");
        PUBLIC_IDENTIFIERS.add("XkbBellNotifyEvent");
        PUBLIC_IDENTIFIERS.add("XkbCompatMapNotifyEvent");
        PUBLIC_IDENTIFIERS.add("XkbControlsNotifyEvent");
        PUBLIC_IDENTIFIERS.add("XkbEvent");
        PUBLIC_IDENTIFIERS.add("XkbExtensionDeviceNotifyEvent");
        PUBLIC_IDENTIFIERS.add("XkbIndicatorNotifyEvent");
        PUBLIC_IDENTIFIERS.add("XkbMapNotifyEvent");
        PUBLIC_IDENTIFIERS.add("XkbNamesNotifyEvent");
        PUBLIC_IDENTIFIERS.add("XkbNewKeyboardNotifyEvent");
        PUBLIC_IDENTIFIERS.add("XkbStateNotifyEvent");
        PUBLIC_IDENTIFIERS.add("XKeyboardFocusManagerPeer");
        PUBLIC_IDENTIFIERS.add("XKeyEvent");
        PUBLIC_IDENTIFIERS.add("XKeymapEvent");
        PUBLIC_IDENTIFIERS.add("XKeysym");
        PUBLIC_IDENTIFIERS.add("XKeySymConstants");
        PUBLIC_IDENTIFIERS.add("XLayerProtocol");
        PUBLIC_IDENTIFIERS.add("XlibUtil");
        PUBLIC_IDENTIFIERS.add("XLightweightFramePeer");
        PUBLIC_IDENTIFIERS.add("XMapEvent");
        PUBLIC_IDENTIFIERS.add("XMappingEvent");
        PUBLIC_IDENTIFIERS.add("XMapRequestEvent");
        PUBLIC_IDENTIFIERS.add("XMBean");
        PUBLIC_IDENTIFIERS.add("XMBeanAttributes");
        PUBLIC_IDENTIFIERS.add("XMBeanInfo");
        PUBLIC_IDENTIFIERS.add("XMBeanNotifications");
        PUBLIC_IDENTIFIERS.add("XMBeanOperations");
        PUBLIC_IDENTIFIERS.add("XMenuBarPeer");
        PUBLIC_IDENTIFIERS.add("XMenuItemPeer");
        PUBLIC_IDENTIFIERS.add("XMenuPeer");
        PUBLIC_IDENTIFIERS.add("XMenuWindow");
        PUBLIC_IDENTIFIERS.add("XML11Char");
        PUBLIC_IDENTIFIERS.add("XML11Configurable");
        PUBLIC_IDENTIFIERS.add("XML11Configuration");
        PUBLIC_IDENTIFIERS.add("XML11DocumentScannerImpl");
        PUBLIC_IDENTIFIERS.add("XML11DTDConfiguration");
        PUBLIC_IDENTIFIERS.add("XML11DTDDVFactoryImpl");
        PUBLIC_IDENTIFIERS.add("XML11DTDProcessor");
        PUBLIC_IDENTIFIERS.add("XML11DTDScannerImpl");
        PUBLIC_IDENTIFIERS.add("XML11DTDValidator");
        PUBLIC_IDENTIFIERS.add("XML11EntityScanner");
        PUBLIC_IDENTIFIERS.add("XML11IDDatatypeValidator");
        PUBLIC_IDENTIFIERS.add("XML11IDREFDatatypeValidator");
        PUBLIC_IDENTIFIERS.add("XML11NamespaceBinder");
        PUBLIC_IDENTIFIERS.add("XML11NMTOKENDatatypeValidator");
        PUBLIC_IDENTIFIERS.add("XML11NonValidatingConfiguration");
        PUBLIC_IDENTIFIERS.add("XML11NSDocumentScannerImpl");
        PUBLIC_IDENTIFIERS.add("XML11NSDTDValidator");
        PUBLIC_IDENTIFIERS.add("XML11Serializer");
        PUBLIC_IDENTIFIERS.add("XMLAttributeDecl");
        PUBLIC_IDENTIFIERS.add("XMLAttributes");
        PUBLIC_IDENTIFIERS.add("XMLAttributesImpl");
        PUBLIC_IDENTIFIERS.add("XMLAttributesIteratorImpl");
        PUBLIC_IDENTIFIERS.add("XMLBufferListener");
        PUBLIC_IDENTIFIERS.add("XMLChar");
        PUBLIC_IDENTIFIERS.add("XMLCharacterRecognizer");
        PUBLIC_IDENTIFIERS.add("XMLComponent");
        PUBLIC_IDENTIFIERS.add("XMLComponentManager");
        PUBLIC_IDENTIFIERS.add("XMLConfigurationException");
        PUBLIC_IDENTIFIERS.add("XMLContentSpec");
        PUBLIC_IDENTIFIERS.add("XMLContentSpec$Provider");
        PUBLIC_IDENTIFIERS.add("XMLCryptoContext");
        PUBLIC_IDENTIFIERS.add("XMLDecoder");
        PUBLIC_IDENTIFIERS.add("XMLDocumentFilter");
        PUBLIC_IDENTIFIERS.add("XMLDocumentFilterImpl");
        PUBLIC_IDENTIFIERS.add("XMLDocumentFragmentHandler");
        PUBLIC_IDENTIFIERS.add("XMLDocumentFragmentScannerImpl");
        PUBLIC_IDENTIFIERS.add("XMLDocumentFragmentScannerImpl$Driver");
        PUBLIC_IDENTIFIERS.add("XMLDocumentFragmentScannerImpl$ElementStack");
        PUBLIC_IDENTIFIERS.add("XMLDocumentFragmentScannerImpl$ElementStack2");
        PUBLIC_IDENTIFIERS.add("XMLDocumentFragmentScannerImpl$FragmentContentDriver");
        PUBLIC_IDENTIFIERS.add("XMLDocumentHandler");
        PUBLIC_IDENTIFIERS.add("XMLDocumentParser");
        PUBLIC_IDENTIFIERS.add("XMLDocumentScanner");
        PUBLIC_IDENTIFIERS.add("XMLDocumentScannerImpl");
        PUBLIC_IDENTIFIERS.add("XMLDocumentScannerImpl$ContentDriver");
        PUBLIC_IDENTIFIERS.add("XMLDocumentSource");
        PUBLIC_IDENTIFIERS.add("XMLDOMWriterImpl");
        PUBLIC_IDENTIFIERS.add("XMLDTDContentModelFilter");
        PUBLIC_IDENTIFIERS.add("XMLDTDContentModelHandler");
        PUBLIC_IDENTIFIERS.add("XMLDTDContentModelSource");
        PUBLIC_IDENTIFIERS.add("XMLDTDDescription");
        PUBLIC_IDENTIFIERS.add("XMLDTDFilter");
        PUBLIC_IDENTIFIERS.add("XMLDTDHandler");
        PUBLIC_IDENTIFIERS.add("XMLDTDLoader");
        PUBLIC_IDENTIFIERS.add("XMLDTDProcessor");
        PUBLIC_IDENTIFIERS.add("XMLDTDScanner");
        PUBLIC_IDENTIFIERS.add("XMLDTDScannerImpl");
        PUBLIC_IDENTIFIERS.add("XMLDTDSource");
        PUBLIC_IDENTIFIERS.add("XMLDTDValidator");
        PUBLIC_IDENTIFIERS.add("XMLDTDValidatorFilter");
        PUBLIC_IDENTIFIERS.add("XMLElementDecl");
        PUBLIC_IDENTIFIERS.add("XMLEncoder");
        PUBLIC_IDENTIFIERS.add("XMLEntityDecl");
        PUBLIC_IDENTIFIERS.add("XMLEntityDescription");
        PUBLIC_IDENTIFIERS.add("XMLEntityDescriptionImpl");
        PUBLIC_IDENTIFIERS.add("XMLEntityHandler");
        PUBLIC_IDENTIFIERS.add("XMLEntityManager");
        PUBLIC_IDENTIFIERS.add("XMLEntityReader");
        PUBLIC_IDENTIFIERS.add("XMLEntityResolver");
        PUBLIC_IDENTIFIERS.add("XMLEntityScanner");
        PUBLIC_IDENTIFIERS.add("XMLEntityStorage");
        PUBLIC_IDENTIFIERS.add("XmlErrorHandler");
        PUBLIC_IDENTIFIERS.add("XMLErrorHandler");
        PUBLIC_IDENTIFIERS.add("XMLErrorReporter");
        PUBLIC_IDENTIFIERS.add("XMLErrorResources");
        PUBLIC_IDENTIFIERS.add("XMLErrorResources_de");
        PUBLIC_IDENTIFIERS.add("XMLErrorResources_en");
        PUBLIC_IDENTIFIERS.add("XMLErrorResources_ja");
        PUBLIC_IDENTIFIERS.add("XMLErrorResources_zh_CN");
        PUBLIC_IDENTIFIERS.add("XMLEvent");
        PUBLIC_IDENTIFIERS.add("XMLEventAllocator");
        PUBLIC_IDENTIFIERS.add("XMLEventAllocatorImpl");
        PUBLIC_IDENTIFIERS.add("XMLEventConsumer");
        PUBLIC_IDENTIFIERS.add("XMLEventFactory");
        PUBLIC_IDENTIFIERS.add("XMLEventFactoryImpl");
        PUBLIC_IDENTIFIERS.add("XMLEventReader");
        PUBLIC_IDENTIFIERS.add("XMLEventReaderImpl");
        PUBLIC_IDENTIFIERS.add("XMLEventWriter");
        PUBLIC_IDENTIFIERS.add("XMLEventWriterImpl");
        PUBLIC_IDENTIFIERS.add("XMLFilter");
        PUBLIC_IDENTIFIERS.add("XMLFilterImpl");
        PUBLIC_IDENTIFIERS.add("XMLFormatter");
        PUBLIC_IDENTIFIERS.add("XMLGrammarCachingConfiguration");
        PUBLIC_IDENTIFIERS.add("XMLGrammarDescription");
        PUBLIC_IDENTIFIERS.add("XMLGrammarLoader");
        PUBLIC_IDENTIFIERS.add("XMLGrammarParser");
        PUBLIC_IDENTIFIERS.add("XMLGrammarPool");
        PUBLIC_IDENTIFIERS.add("XMLGrammarPoolImpl");
        PUBLIC_IDENTIFIERS.add("XMLGrammarPreparser");
        PUBLIC_IDENTIFIERS.add("XMLGregorianCalendar");
        PUBLIC_IDENTIFIERS.add("XMLGregorianCalendarImpl");
        PUBLIC_IDENTIFIERS.add("XmlInput");
        PUBLIC_IDENTIFIERS.add("XMLInputFactory");
        PUBLIC_IDENTIFIERS.add("XMLInputFactoryImpl");
        PUBLIC_IDENTIFIERS.add("XMLInputSource");
        PUBLIC_IDENTIFIERS.add("XMLLocator");
        PUBLIC_IDENTIFIERS.add("XMLMessageFormatter");
        PUBLIC_IDENTIFIERS.add("XMLMessageFormatter_de");
        PUBLIC_IDENTIFIERS.add("XMLMessageFormatter_ja");
        PUBLIC_IDENTIFIERS.add("XMLMessageFormatter_zh_CN");
        PUBLIC_IDENTIFIERS.add("XMLMessages");
        PUBLIC_IDENTIFIERS.add("XMLNamespaceBinder");
        PUBLIC_IDENTIFIERS.add("XMLNotationDecl");
        PUBLIC_IDENTIFIERS.add("XMLNSDocumentScannerImpl");
        PUBLIC_IDENTIFIERS.add("XMLNSDTDValidator");
        PUBLIC_IDENTIFIERS.add("XMLObject");
        PUBLIC_IDENTIFIERS.add("XMLOutputFactory");
        PUBLIC_IDENTIFIERS.add("XMLOutputFactoryImpl");
        PUBLIC_IDENTIFIERS.add("XMLOutputSource");
        PUBLIC_IDENTIFIERS.add("XMLParseException");
        PUBLIC_IDENTIFIERS.add("XMLParser");
        PUBLIC_IDENTIFIERS.add("XMLParserConfiguration");
        PUBLIC_IDENTIFIERS.add("XMLParserException");
        PUBLIC_IDENTIFIERS.add("XMLParserImpl");
        PUBLIC_IDENTIFIERS.add("XMLPullParserConfiguration");
        PUBLIC_IDENTIFIERS.add("XmlReader");
        PUBLIC_IDENTIFIERS.add("XMLReader");
        PUBLIC_IDENTIFIERS.add("XMLReaderAdapter");
        PUBLIC_IDENTIFIERS.add("XmlReaderContentHandler");
        PUBLIC_IDENTIFIERS.add("XMLReaderManager");
        PUBLIC_IDENTIFIERS.add("XMLReporter");
        PUBLIC_IDENTIFIERS.add("XmlResolver");
        PUBLIC_IDENTIFIERS.add("XMLResolver");
        PUBLIC_IDENTIFIERS.add("XMLResourceIdentifier");
        PUBLIC_IDENTIFIERS.add("XMLResourceIdentifierImpl");
        PUBLIC_IDENTIFIERS.add("XMLScanner");
        PUBLIC_IDENTIFIERS.add("XMLSchemaDescription");
        PUBLIC_IDENTIFIERS.add("XMLSchemaException");
        PUBLIC_IDENTIFIERS.add("XMLSchemaLoader");
        PUBLIC_IDENTIFIERS.add("XMLSchemaLoader$LocationArray");
        PUBLIC_IDENTIFIERS.add("XMLSchemaValidator");
        PUBLIC_IDENTIFIERS.add("XMLSchemaValidator$KeyRefValueStore");
        PUBLIC_IDENTIFIERS.add("XMLSchemaValidator$KeyValueStore");
        PUBLIC_IDENTIFIERS.add("XMLSchemaValidator$UniqueValueStore");
        PUBLIC_IDENTIFIERS.add("XMLSchemaValidator$ValueStoreBase");
        PUBLIC_IDENTIFIERS.add("XMLSchemaValidator$ValueStoreCache");
        PUBLIC_IDENTIFIERS.add("XMLSchemaValidator$XPathMatcherStack");
        PUBLIC_IDENTIFIERS.add("XMLSecurityException");
        PUBLIC_IDENTIFIERS.add("XMLSerializer");
        PUBLIC_IDENTIFIERS.add("XMLSignature");
        PUBLIC_IDENTIFIERS.add("XMLSignature$SignatureValue");
        PUBLIC_IDENTIFIERS.add("XMLSignatureException");
        PUBLIC_IDENTIFIERS.add("XMLSignatureFactory");
        PUBLIC_IDENTIFIERS.add("XMLSignatureInput");
        PUBLIC_IDENTIFIERS.add("XMLSignatureInputDebugger");
        PUBLIC_IDENTIFIERS.add("XMLSignContext");
        PUBLIC_IDENTIFIERS.add("XMLSimpleType");
        PUBLIC_IDENTIFIERS.add("XMLStreamConstants");
        PUBLIC_IDENTIFIERS.add("XMLStreamException");
        PUBLIC_IDENTIFIERS.add("XMLStreamFilterImpl");
        PUBLIC_IDENTIFIERS.add("XMLStreamReader");
        PUBLIC_IDENTIFIERS.add("XMLStreamReaderImpl");
        PUBLIC_IDENTIFIERS.add("XMLStreamWriter");
        PUBLIC_IDENTIFIERS.add("XMLStreamWriterBase");
        PUBLIC_IDENTIFIERS.add("XMLStreamWriterImpl");
        PUBLIC_IDENTIFIERS.add("XMLStreamWriterImpl$Element");
        PUBLIC_IDENTIFIERS.add("XMLStreamWriterImpl$ElementStack");
        PUBLIC_IDENTIFIERS.add("XMLString");
        PUBLIC_IDENTIFIERS.add("XMLStringBuffer");
        PUBLIC_IDENTIFIERS.add("XMLStringDefault");
        PUBLIC_IDENTIFIERS.add("XMLStringFactory");
        PUBLIC_IDENTIFIERS.add("XMLStringFactoryDefault");
        PUBLIC_IDENTIFIERS.add("XMLStringFactoryImpl");
        PUBLIC_IDENTIFIERS.add("XMLStructure");
        PUBLIC_IDENTIFIERS.add("XMLSymbols");
        PUBLIC_IDENTIFIERS.add("XMLValidateContext");
        PUBLIC_IDENTIFIERS.add("XMLVersionDetector");
        PUBLIC_IDENTIFIERS.add("XmlWriter");
        PUBLIC_IDENTIFIERS.add("XMLWriter");
        PUBLIC_IDENTIFIERS.add("XMLX509Certificate");
        PUBLIC_IDENTIFIERS.add("XMLX509CRL");
        PUBLIC_IDENTIFIERS.add("XMLX509DataContent");
        PUBLIC_IDENTIFIERS.add("XMLX509Digest");
        PUBLIC_IDENTIFIERS.add("XMLX509IssuerSerial");
        PUBLIC_IDENTIFIERS.add("XMLX509SKI");
        PUBLIC_IDENTIFIERS.add("XMLX509SubjectName");
        PUBLIC_IDENTIFIERS.add("XModalityProtocol");
        PUBLIC_IDENTIFIERS.add("XModifierKeymap");
        PUBLIC_IDENTIFIERS.add("XMotionEvent");
        PUBLIC_IDENTIFIERS.add("XMSelection");
        PUBLIC_IDENTIFIERS.add("XMSelectionListener");
        PUBLIC_IDENTIFIERS.add("XNIException");
        PUBLIC_IDENTIFIERS.add("XNodeInfo");
        PUBLIC_IDENTIFIERS.add("XNodeSet");
        PUBLIC_IDENTIFIERS.add("XNodeSetForDOM");
        PUBLIC_IDENTIFIERS.add("XNoExposeEvent");
        PUBLIC_IDENTIFIERS.add("XNull");
        PUBLIC_IDENTIFIERS.add("XNumber");
        PUBLIC_IDENTIFIERS.add("XObject");
        PUBLIC_IDENTIFIERS.add("XObjectFactory");
        PUBLIC_IDENTIFIERS.add("XOpenTypeViewer");
        PUBLIC_IDENTIFIERS.add("XOperations");
        PUBLIC_IDENTIFIERS.add("XorPixelWriter$ByteData");
        PUBLIC_IDENTIFIERS.add("XorPixelWriter$DoubleData");
        PUBLIC_IDENTIFIERS.add("XorPixelWriter$FloatData");
        PUBLIC_IDENTIFIERS.add("XorPixelWriter$IntData");
        PUBLIC_IDENTIFIERS.add("XorPixelWriter$ShortData");
        PUBLIC_IDENTIFIERS.add("XPanelPeer");
        PUBLIC_IDENTIFIERS.add("XPath");
        PUBLIC_IDENTIFIERS.add("XPath$Axis");
        PUBLIC_IDENTIFIERS.add("XPath$LocationPath");
        PUBLIC_IDENTIFIERS.add("XPath$NodeTest");
        PUBLIC_IDENTIFIERS.add("XPath$Step");
        PUBLIC_IDENTIFIERS.add("XPathAPI");
        PUBLIC_IDENTIFIERS.add("XPathConstants");
        PUBLIC_IDENTIFIERS.add("XPathContainer");
        PUBLIC_IDENTIFIERS.add("XPathContext");
        PUBLIC_IDENTIFIERS.add("XPathContext$XPathExpressionContext");
        PUBLIC_IDENTIFIERS.add("XPathDumper");
        PUBLIC_IDENTIFIERS.add("XPATHErrorResources");
        PUBLIC_IDENTIFIERS.add("XPATHErrorResources_de");
        PUBLIC_IDENTIFIERS.add("XPATHErrorResources_en");
        PUBLIC_IDENTIFIERS.add("XPATHErrorResources_ja");
        PUBLIC_IDENTIFIERS.add("XPATHErrorResources_zh_CN");
        PUBLIC_IDENTIFIERS.add("XPathEvaluationResult");
        PUBLIC_IDENTIFIERS.add("XPathEvaluator");
        PUBLIC_IDENTIFIERS.add("XPathException");
        PUBLIC_IDENTIFIERS.add("XPathExpression");
        PUBLIC_IDENTIFIERS.add("XPathExpressionException");
        PUBLIC_IDENTIFIERS.add("XPathExpressionImpl");
        PUBLIC_IDENTIFIERS.add("XPathFactory");
        PUBLIC_IDENTIFIERS.add("XPathFactoryConfigurationException");
        PUBLIC_IDENTIFIERS.add("XPathFactoryImpl");
        PUBLIC_IDENTIFIERS.add("XPathFunction");
        PUBLIC_IDENTIFIERS.add("XPathFunctionException");
        PUBLIC_IDENTIFIERS.add("XPathFunctionResolver");
        PUBLIC_IDENTIFIERS.add("XPathImpl");
        PUBLIC_IDENTIFIERS.add("XPathMatcher");
        PUBLIC_IDENTIFIERS.add("XPATHMessages");
        PUBLIC_IDENTIFIERS.add("XPathNamespace");
        PUBLIC_IDENTIFIERS.add("XPathNodes");
        PUBLIC_IDENTIFIERS.add("XPathNodesImpl");
        PUBLIC_IDENTIFIERS.add("XPathNSResolver");
        PUBLIC_IDENTIFIERS.add("XPathParser");
        PUBLIC_IDENTIFIERS.add("XPathProcessorException");
        PUBLIC_IDENTIFIERS.add("XPathResult");
        PUBLIC_IDENTIFIERS.add("XPathType");
        PUBLIC_IDENTIFIERS.add("XPathType$Filter");
        PUBLIC_IDENTIFIERS.add("XPathVariableResolver");
        PUBLIC_IDENTIFIERS.add("XPathVisitable");
        PUBLIC_IDENTIFIERS.add("XPathVisitor");
        PUBLIC_IDENTIFIERS.add("XPixmapFormatValues");
        PUBLIC_IDENTIFIERS.add("XPlotter");
        PUBLIC_IDENTIFIERS.add("XPlottingViewer");
        PUBLIC_IDENTIFIERS.add("XPointerParserConfiguration");
        PUBLIC_IDENTIFIERS.add("XPointerPart");
        PUBLIC_IDENTIFIERS.add("XPointerProcessor");
        PUBLIC_IDENTIFIERS.add("XPopupMenuPeer");
        PUBLIC_IDENTIFIERS.add("XPropertyCache");
        PUBLIC_IDENTIFIERS.add("XPropertyEvent");
        PUBLIC_IDENTIFIERS.add("XQueryTree");
        PUBLIC_IDENTIFIERS.add("XRBackend");
        PUBLIC_IDENTIFIERS.add("XRBackendNative");
        PUBLIC_IDENTIFIERS.add("XRColor");
        PUBLIC_IDENTIFIERS.add("XRCompositeManager");
        PUBLIC_IDENTIFIERS.add("XRDrawImage");
        PUBLIC_IDENTIFIERS.add("XRDrawLine");
        PUBLIC_IDENTIFIERS.add("XRenderDirectFormat");
        PUBLIC_IDENTIFIERS.add("XRenderPictFormat");
        PUBLIC_IDENTIFIERS.add("XReparentEvent");
        PUBLIC_IDENTIFIERS.add("XResizeRequestEvent");
        PUBLIC_IDENTIFIERS.add("XResourceBundle");
        PUBLIC_IDENTIFIERS.add("XResourceBundleBase");
        PUBLIC_IDENTIFIERS.add("XResources_de");
        PUBLIC_IDENTIFIERS.add("XResources_en");
        PUBLIC_IDENTIFIERS.add("XResources_zh_CN");
        PUBLIC_IDENTIFIERS.add("XRGlyphCache");
        PUBLIC_IDENTIFIERS.add("XRGlyphCacheEntry");
        PUBLIC_IDENTIFIERS.add("XRGraphicsConfig");
        PUBLIC_IDENTIFIERS.add("XRMaskBlit");
        PUBLIC_IDENTIFIERS.add("XRMaskFill");
        PUBLIC_IDENTIFIERS.add("XRMaskImage");
        PUBLIC_IDENTIFIERS.add("XRRenderer");
        PUBLIC_IDENTIFIERS.add("XRSolidSrcPict");
        PUBLIC_IDENTIFIERS.add("XRSurfaceData");
        PUBLIC_IDENTIFIERS.add("XRSurfaceData$LazyPipe");
        PUBLIC_IDENTIFIERS.add("XRSurfaceData$XRInternalSurfaceData");
        PUBLIC_IDENTIFIERS.add("XRSurfaceData$XRPixmapSurfaceData");
        PUBLIC_IDENTIFIERS.add("XRSurfaceData$XRWindowSurfaceData");
        PUBLIC_IDENTIFIERS.add("XRSurfaceDataProxy");
        PUBLIC_IDENTIFIERS.add("XRTextRenderer");
        PUBLIC_IDENTIFIERS.add("XRTreeFrag");
        PUBLIC_IDENTIFIERS.add("XRTreeFragSelectWrapper");
        PUBLIC_IDENTIFIERS.add("XRUtils");
        PUBLIC_IDENTIFIERS.add("XRVolatileSurfaceManager");
        PUBLIC_IDENTIFIERS.add("XS10TypeHelper");
        PUBLIC_IDENTIFIERS.add("XSAllCM");
        PUBLIC_IDENTIFIERS.add("XSAnnotation");
        PUBLIC_IDENTIFIERS.add("XSAnnotationImpl");
        PUBLIC_IDENTIFIERS.add("XSAttributeChecker");
        PUBLIC_IDENTIFIERS.add("XSAttributeDecl");
        PUBLIC_IDENTIFIERS.add("XSAttributeDeclaration");
        PUBLIC_IDENTIFIERS.add("XSAttributeGroupDecl");
        PUBLIC_IDENTIFIERS.add("XSAttributeGroupDefinition");
        PUBLIC_IDENTIFIERS.add("XSAttributeUse");
        PUBLIC_IDENTIFIERS.add("XSAttributeUseImpl");
        PUBLIC_IDENTIFIERS.add("XSCMBinOp");
        PUBLIC_IDENTIFIERS.add("XSCMLeaf");
        PUBLIC_IDENTIFIERS.add("XSCMUniOp");
        PUBLIC_IDENTIFIERS.add("XSCMValidator");
        PUBLIC_IDENTIFIERS.add("XSComplexTypeDecl");
        PUBLIC_IDENTIFIERS.add("XSComplexTypeDefinition");
        PUBLIC_IDENTIFIERS.add("XSConstants");
        PUBLIC_IDENTIFIERS.add("XSConstraints");
        PUBLIC_IDENTIFIERS.add("XSDAbstractParticleTraverser$ParticleArray");
        PUBLIC_IDENTIFIERS.add("XSDateTime");
        PUBLIC_IDENTIFIERS.add("XSDDescription");
        PUBLIC_IDENTIFIERS.add("XSDecimal");
        PUBLIC_IDENTIFIERS.add("XSDFACM");
        PUBLIC_IDENTIFIERS.add("XSDHandler");
        PUBLIC_IDENTIFIERS.add("XSDouble");
        PUBLIC_IDENTIFIERS.add("XSelectionClearEvent");
        PUBLIC_IDENTIFIERS.add("XSelectionEvent");
        PUBLIC_IDENTIFIERS.add("XSelectionRequestEvent");
        PUBLIC_IDENTIFIERS.add("XSElementDecl");
        PUBLIC_IDENTIFIERS.add("XSElementDeclaration");
        PUBLIC_IDENTIFIERS.add("XSElementDeclHelper");
        PUBLIC_IDENTIFIERS.add("XSEmptyCM");
        PUBLIC_IDENTIFIERS.add("XSettings");
        PUBLIC_IDENTIFIERS.add("XSetWindowAttributes");
        PUBLIC_IDENTIFIERS.add("XSException");
        PUBLIC_IDENTIFIERS.add("XSFacet");
        PUBLIC_IDENTIFIERS.add("XSFacets");
        PUBLIC_IDENTIFIERS.add("XSFloat");
        PUBLIC_IDENTIFIERS.add("XSGrammar");
        PUBLIC_IDENTIFIERS.add("XSGrammarBucket");
        PUBLIC_IDENTIFIERS.add("XSGrammarPool");
        PUBLIC_IDENTIFIERS.add("XSGrammarPoolContainer");
        PUBLIC_IDENTIFIERS.add("XSGroupDecl");
        PUBLIC_IDENTIFIERS.add("XSheet");
        PUBLIC_IDENTIFIERS.add("XSIDCDefinition");
        PUBLIC_IDENTIFIERS.add("XSImplementation");
        PUBLIC_IDENTIFIERS.add("XSImplementationImpl");
        PUBLIC_IDENTIFIERS.add("XSizeHints");
        PUBLIC_IDENTIFIERS.add("XSLMessages");
        PUBLIC_IDENTIFIERS.add("XSLoader");
        PUBLIC_IDENTIFIERS.add("XSLTCDTMManager");
        PUBLIC_IDENTIFIERS.add("XSLTErrorResources");
        PUBLIC_IDENTIFIERS.add("XSLTErrorResources_de");
        PUBLIC_IDENTIFIERS.add("XSLTErrorResources_en");
        PUBLIC_IDENTIFIERS.add("XSLTErrorResources_ja");
        PUBLIC_IDENTIFIERS.add("XSLTErrorResources_zh_CN");
        PUBLIC_IDENTIFIERS.add("XSMessageFormatter");
        PUBLIC_IDENTIFIERS.add("XSModel");
        PUBLIC_IDENTIFIERS.add("XSModelGroup");
        PUBLIC_IDENTIFIERS.add("XSModelGroupDefinition");
        PUBLIC_IDENTIFIERS.add("XSModelGroupImpl");
        PUBLIC_IDENTIFIERS.add("XSMultiValueFacet");
        PUBLIC_IDENTIFIERS.add("XSNamedMap");
        PUBLIC_IDENTIFIERS.add("XSNamedMapImpl");
        PUBLIC_IDENTIFIERS.add("XSNamespaceItem");
        PUBLIC_IDENTIFIERS.add("XSNamespaceItemList");
        PUBLIC_IDENTIFIERS.add("XSNotationDecl");
        PUBLIC_IDENTIFIERS.add("XSNotationDeclaration");
        PUBLIC_IDENTIFIERS.add("XSObject");
        PUBLIC_IDENTIFIERS.add("XSObjectList");
        PUBLIC_IDENTIFIERS.add("XSObjectListImpl");
        PUBLIC_IDENTIFIERS.add("XSParticle");
        PUBLIC_IDENTIFIERS.add("XSParticleDecl");
        PUBLIC_IDENTIFIERS.add("XSQName");
        PUBLIC_IDENTIFIERS.add("XSSimpleType");
        PUBLIC_IDENTIFIERS.add("XSSimpleTypeDecl");
        PUBLIC_IDENTIFIERS.add("XSSimpleTypeDefinition");
        PUBLIC_IDENTIFIERS.add("XSSimpleTypeDelegate");
        PUBLIC_IDENTIFIERS.add("XStateProtocol");
        PUBLIC_IDENTIFIERS.add("XSTerm");
        PUBLIC_IDENTIFIERS.add("XString");
        PUBLIC_IDENTIFIERS.add("XStringForChars");
        PUBLIC_IDENTIFIERS.add("XStringForFSB");
        PUBLIC_IDENTIFIERS.add("XSTypeDefinition");
        PUBLIC_IDENTIFIERS.add("XSurfaceData");
        PUBLIC_IDENTIFIERS.add("XSValue");
        PUBLIC_IDENTIFIERS.add("XSWildcard");
        PUBLIC_IDENTIFIERS.add("XSWildcardDecl");
        PUBLIC_IDENTIFIERS.add("XSystemTrayPeer");
        PUBLIC_IDENTIFIERS.add("XTable");
        PUBLIC_IDENTIFIERS.add("XTextField");
        PUBLIC_IDENTIFIERS.add("XTextFieldEditor");
        PUBLIC_IDENTIFIERS.add("XToolkit$XEventListener");
        PUBLIC_IDENTIFIERS.add("XTranslateCoordinates");
        PUBLIC_IDENTIFIERS.add("XTrayIconPeer");
        PUBLIC_IDENTIFIERS.add("XTrayIconPeer$IconCanvas");
        PUBLIC_IDENTIFIERS.add("XTree");
        PUBLIC_IDENTIFIERS.add("XTreeRenderer");
        PUBLIC_IDENTIFIERS.add("XUnmapEvent");
        PUBLIC_IDENTIFIERS.add("XVisibilityEvent");
        PUBLIC_IDENTIFIERS.add("XVisualInfo");
        PUBLIC_IDENTIFIERS.add("x_wav");
        PUBLIC_IDENTIFIERS.add("XWindowAttributes");
        PUBLIC_IDENTIFIERS.add("XWMHints");
        PUBLIC_IDENTIFIERS.add("x_xbitmap");
        PUBLIC_IDENTIFIERS.add("x_xpixmap");
        PUBLIC_IDENTIFIERS.add("YearDV");
        PUBLIC_IDENTIFIERS.add("YearMonthDV");
        PUBLIC_IDENTIFIERS.add("YieldTree");
        PUBLIC_IDENTIFIERS.add("ZAttachedArrayForForwarding");
        PUBLIC_IDENTIFIERS.add("ZCollectedHeap");
        PUBLIC_IDENTIFIERS.add("ZExternalBitMap");
        PUBLIC_IDENTIFIERS.add("ZForwarding");
        PUBLIC_IDENTIFIERS.add("ZForwardingEntry");
        PUBLIC_IDENTIFIERS.add("ZForwardingTable");
        PUBLIC_IDENTIFIERS.add("ZGlobals");
        PUBLIC_IDENTIFIERS.add("ZGranuleMapForForwarding");
        PUBLIC_IDENTIFIERS.add("ZGranuleMapForForwarding$Iterator");
        PUBLIC_IDENTIFIERS.add("ZGranuleMapForPageTable");
        PUBLIC_IDENTIFIERS.add("ZGranuleMapForPageTable$Iterator");
        PUBLIC_IDENTIFIERS.add("ZHeap");
        PUBLIC_IDENTIFIERS.add("ZipEntry");
        PUBLIC_IDENTIFIERS.add("ZipError");
        PUBLIC_IDENTIFIERS.add("ZipException");
        PUBLIC_IDENTIFIERS.add("ZipFile");
        PUBLIC_IDENTIFIERS.add("ZipFileSystemProvider");
        PUBLIC_IDENTIFIERS.add("ZipInfo");
        PUBLIC_IDENTIFIERS.add("ZipInputStream");
        PUBLIC_IDENTIFIERS.add("ZipOutputStream");
        PUBLIC_IDENTIFIERS.add("ZoneId");
        PUBLIC_IDENTIFIERS.add("ZoneInfo");
        PUBLIC_IDENTIFIERS.add("ZoneRulesException");
        PUBLIC_IDENTIFIERS.add("ZoneRulesProvider");
        PUBLIC_IDENTIFIERS.add("ZoneView");
        PUBLIC_IDENTIFIERS.add("ZPage");
        PUBLIC_IDENTIFIERS.add("ZPageAllocator");
        PUBLIC_IDENTIFIERS.add("ZPageTable");
        PUBLIC_IDENTIFIERS.add("ZRelocate");
        PUBLIC_IDENTIFIERS.add("ZVirtualMemory");
    }
}
