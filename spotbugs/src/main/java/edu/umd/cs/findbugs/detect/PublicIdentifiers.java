/*
 * SpotBugs - Find bugs in Java programs
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package edu.umd.cs.findbugs.detect;

import java.util.HashSet;
import java.util.Set;

/**
 * This class contains all the public identifiers that are part of the
 * Java Standard Library. It is used to detect any shadowing or obscuring
 * of these identifiers.
 * Since there are so many identifiers, they are loaded from separate
 * functions to avoid compiler limits. The functions load roughly the same number
 * of identifiers.
 */
public class PublicIdentifiers {
    private Set<String> publicIdentifiers = null;

    public Set<String> getPublicIdentifiers() {
        if (publicIdentifiers == null) {
            publicIdentifiers = new HashSet<>();
            addPublicIdentifiersAB();
            addPublicIdentifiersCC();
            addPublicIdentifiersDE();
            addPublicIdentifiersFH();
            addPublicIdentifiersIJ();
            addPublicIdentifiersKM();
            addPublicIdentifiersNR();
            addPublicIdentifiersSS();
            addPublicIdentifiersTU();
            addPublicIdentifiersVZ();
        }
        return publicIdentifiers;
    }

    private void addPublicIdentifiersAB() {
        publicIdentifiers.add("AALOAD");
        publicIdentifiers.add("AArch64");
        publicIdentifiers.add("AArch64Architecture");
        publicIdentifiers.add("AArch64Architecture$Regs");
        publicIdentifiers.add("AArch64Architecture$StorageType");
        publicIdentifiers.add("AARCH64CurrentFrameGuess");
        publicIdentifiers.add("AARCH64Frame");
        publicIdentifiers.add("AArch64HotSpotJVMCIBackendFactory");
        publicIdentifiers.add("AArch64HotSpotRegisterConfig");
        publicIdentifiers.add("AARCH64JavaCallWrapper");
        publicIdentifiers.add("AARCH64RegisterMap");
        publicIdentifiers.add("AARCH64ThreadContext");
        publicIdentifiers.add("AASTORE");
        publicIdentifiers.add("AATextRenderer");
        publicIdentifiers.add("AATileGenerator");
        publicIdentifiers.add("AbbreviationMap");
        publicIdentifiers.add("ABIDescriptor");
        publicIdentifiers.add("Abort");
        publicIdentifiers.add("AbortException");
        publicIdentifiers.add("AboutAction");
        publicIdentifiers.add("AboutDialog");
        publicIdentifiers.add("AboutHandler");
        publicIdentifiers.add("AbsentInformationException");
        publicIdentifiers.add("AbstractAction");
        publicIdentifiers.add("AbstractAlgorithmConstraints");
        publicIdentifiers.add("AbstractAnnotationValueVisitor14");
        publicIdentifiers.add("AbstractAnnotationValueVisitor6");
        publicIdentifiers.add("AbstractAnnotationValueVisitor7");
        publicIdentifiers.add("AbstractAnnotationValueVisitor8");
        publicIdentifiers.add("AbstractAnnotationValueVisitor9");
        publicIdentifiers.add("AbstractAppImageBuilder");
        publicIdentifiers.add("AbstractBorder");
        publicIdentifiers.add("AbstractBufferStatisticsEvent");
        publicIdentifiers.add("AbstractBuilder");
        publicIdentifiers.add("AbstractBuilder$Context");
        publicIdentifiers.add("AbstractButton");
        publicIdentifiers.add("AbstractButton$AccessibleAbstractButton");
        publicIdentifiers.add("AbstractButton$ButtonChangeListener");
        publicIdentifiers.add("AbstractCalendar");
        publicIdentifiers.add("AbstractCellEditor");
        publicIdentifiers.add("AbstractCharsetProvider");
        publicIdentifiers.add("AbstractChronology");
        publicIdentifiers.add("AbstractClassLoaderValue");
        publicIdentifiers.add("AbstractCollection");
        publicIdentifiers.add("AbstractColorChooserPanel");
        publicIdentifiers.add("AbstractCounter");
        publicIdentifiers.add("AbstractDateTimeDV");
        publicIdentifiers.add("AbstractDelegateHttpsURLConnection");
        publicIdentifiers.add("AbstractDiagnosticFormatter");
        publicIdentifiers.add("AbstractDiagnosticFormatter$SimpleConfiguration");
        publicIdentifiers.add("AbstractDoclet");
        publicIdentifiers.add("AbstractDocument");
        publicIdentifiers.add("AbstractDocument$AbstractElement");
        publicIdentifiers.add("AbstractDocument$AttributeContext");
        publicIdentifiers.add("AbstractDocument$BranchElement");
        publicIdentifiers.add("AbstractDocument$Content");
        publicIdentifiers.add("AbstractDocument$DefaultDocumentEvent");
        publicIdentifiers.add("AbstractDocument$ElementEdit");
        publicIdentifiers.add("AbstractDocument$LeafElement");
        publicIdentifiers.add("AbstractDOMParser");
        publicIdentifiers.add("AbstractDrbg");
        publicIdentifiers.add("AbstractElementVisitor14");
        publicIdentifiers.add("AbstractElementVisitor6");
        publicIdentifiers.add("AbstractElementVisitor7");
        publicIdentifiers.add("AbstractElementVisitor8");
        publicIdentifiers.add("AbstractElementVisitor9");
        publicIdentifiers.add("AbstractEventStream");
        publicIdentifiers.add("AbstractExecutableMemberWriter");
        publicIdentifiers.add("AbstractExecutorService");
        publicIdentifiers.add("AbstractFileSystemProvider");
        publicIdentifiers.add("AbstractFileTypeDetector");
        publicIdentifiers.add("AbstractGroupLayout");
        publicIdentifiers.add("AbstractHashDrbg");
        publicIdentifiers.add("AbstractHeapGraphWriter");
        publicIdentifiers.add("AbstractInsnNode");
        publicIdentifiers.add("AbstractInterruptibleChannel");
        publicIdentifiers.add("AbstractJavaProfile");
        publicIdentifiers.add("AbstractLayout");
        publicIdentifiers.add("AbstractLayoutCache");
        publicIdentifiers.add("AbstractLayoutCache$NodeDimensions");
        publicIdentifiers.add("AbstractLinker");
        publicIdentifiers.add("AbstractList");
        publicIdentifiers.add("AbstractListModel");
        publicIdentifiers.add("AbstractLog");
        publicIdentifiers.add("AbstractMap");
        publicIdentifiers.add("AbstractMap$SimpleEntry");
        publicIdentifiers.add("AbstractMap$SimpleImmutableEntry");
        publicIdentifiers.add("AbstractMemberBuilder");
        publicIdentifiers.add("AbstractMemberWriter");
        publicIdentifiers.add("AbstractMemorySegmentImpl");
        publicIdentifiers.add("AbstractMethodError");
        publicIdentifiers.add("AbstractMidiDeviceProvider");
        publicIdentifiers.add("AbstractMonitor");
        publicIdentifiers.add("AbstractMonitoredVm");
        publicIdentifiers.add("AbstractMultiResolutionImage");
        publicIdentifiers.add("AbstractNotificationHandler");
        publicIdentifiers.add("AbstractOptionSpec");
        publicIdentifiers.add("AbstractOverviewIndexWriter");
        publicIdentifiers.add("AbstractOwnableSynchronizer");
        publicIdentifiers.add("AbstractPerfDataBuffer");
        publicIdentifiers.add("AbstractPerfDataBufferPrologue");
        publicIdentifiers.add("AbstractPlugin");
        publicIdentifiers.add("AbstractPosixTerminal");
        publicIdentifiers.add("AbstractPreferences");
        publicIdentifiers.add("AbstractProcessor");
        publicIdentifiers.add("AbstractProfiledItem");
        publicIdentifiers.add("AbstractPty");
        publicIdentifiers.add("AbstractQueue");
        publicIdentifiers.add("AbstractQueuedLongSynchronizer");
        publicIdentifiers.add("AbstractQueuedLongSynchronizer$ConditionObject");
        publicIdentifiers.add("AbstractQueuedSynchronizer");
        publicIdentifiers.add("AbstractQueuedSynchronizer$ConditionObject");
        publicIdentifiers.add("AbstractRegionPainter");
        publicIdentifiers.add("AbstractRegionPainter$PaintContext");
        publicIdentifiers.add("AbstractRelinkableCallSite");
        publicIdentifiers.add("AbstractRepository");
        publicIdentifiers.add("AbstractResourceBundleProvider");
        publicIdentifiers.add("AbstractSaslImpl");
        publicIdentifiers.add("AbstractSAXParser");
        publicIdentifiers.add("AbstractSAXParser$LocatorProxy");
        publicIdentifiers.add("AbstractScope");
        publicIdentifiers.add("AbstractScriptEngine");
        publicIdentifiers.add("AbstractSelectableChannel");
        publicIdentifiers.add("AbstractSelectionKey");
        publicIdentifiers.add("AbstractSelector");
        publicIdentifiers.add("AbstractSequentialList");
        publicIdentifiers.add("AbstractSet");
        publicIdentifiers.add("AbstractSpinnerModel");
        publicIdentifiers.add("AbstractTableModel");
        publicIdentifiers.add("AbstractTerminal");
        publicIdentifiers.add("AbstractTranslet");
        publicIdentifiers.add("AbstractTreeTableModel");
        publicIdentifiers.add("AbstractTreeWriter");
        publicIdentifiers.add("AbstractTypeVisitor14");
        publicIdentifiers.add("AbstractTypeVisitor6");
        publicIdentifiers.add("AbstractTypeVisitor7");
        publicIdentifiers.add("AbstractTypeVisitor8");
        publicIdentifiers.add("AbstractTypeVisitor9");
        publicIdentifiers.add("AbstractUndoableEdit");
        publicIdentifiers.add("AbstractView");
        publicIdentifiers.add("AbstractWindowsConsoleWriter");
        publicIdentifiers.add("AbstractWindowsTerminal");
        publicIdentifiers.add("AbstractWriter");
        publicIdentifiers.add("AbstractXMLDocumentParser");
        publicIdentifiers.add("AccelGraphicsConfig");
        publicIdentifiers.add("AccelSurface");
        publicIdentifiers.add("AccelTypedVolatileImage");
        publicIdentifiers.add("AcceptPendingException");
        publicIdentifiers.add("AccessControl");
        publicIdentifiers.add("AccessControlException");
        publicIdentifiers.add("AccessDeniedException");
        publicIdentifiers.add("AccessException");
        publicIdentifiers.add("AccessFlags");
        publicIdentifiers.add("AccessibilityEventMonitor");
        publicIdentifiers.add("AccessibilityListenerList");
        publicIdentifiers.add("AccessibilityProvider");
        publicIdentifiers.add("Accessible");
        publicIdentifiers.add("AccessibleAction");
        publicIdentifiers.add("AccessibleAttributeSequence");
        publicIdentifiers.add("AccessibleBundle");
        publicIdentifiers.add("AccessibleComponent");
        publicIdentifiers.add("AccessibleContext");
        publicIdentifiers.add("AccessibleEditableText");
        publicIdentifiers.add("AccessibleExtendedComponent");
        publicIdentifiers.add("AccessibleExtendedTable");
        publicIdentifiers.add("AccessibleExtendedText");
        publicIdentifiers.add("AccessibleHTML$HTMLAccessibleContext");
        publicIdentifiers.add("AccessibleHTML$IconElementInfo$IconAccessibleContext");
        publicIdentifiers.add("AccessibleHTML$TableElementInfo$TableAccessibleContext");
        publicIdentifiers.add("AccessibleHTML$TableElementInfo$TableAccessibleContext$AccessibleHeadersTable");
        publicIdentifiers.add("AccessibleHTML$TextElementInfo$TextAccessibleContext");
        publicIdentifiers.add("AccessibleHyperlink");
        publicIdentifiers.add("AccessibleHypertext");
        publicIdentifiers.add("AccessibleIcon");
        publicIdentifiers.add("AccessibleKeyBinding");
        publicIdentifiers.add("AccessibleObject");
        publicIdentifiers.add("AccessibleRelation");
        publicIdentifiers.add("AccessibleRelationSet");
        publicIdentifiers.add("AccessibleResourceBundle");
        publicIdentifiers.add("AccessibleRole");
        publicIdentifiers.add("AccessibleSelection");
        publicIdentifiers.add("AccessibleState");
        publicIdentifiers.add("AccessibleStateSet");
        publicIdentifiers.add("AccessibleStreamable");
        publicIdentifiers.add("AccessibleTable");
        publicIdentifiers.add("AccessibleTableModelChange");
        publicIdentifiers.add("AccessibleText");
        publicIdentifiers.add("AccessibleTextSequence");
        publicIdentifiers.add("AccessibleValue");
        publicIdentifiers.add("AccessorUtils");
        publicIdentifiers.add("AccessWatchpointEvent");
        publicIdentifiers.add("AccessWatchpointRequest");
        publicIdentifiers.add("AccountException");
        publicIdentifiers.add("AccountExpiredException");
        publicIdentifiers.add("AccountLockedException");
        publicIdentifiers.add("AccountNotFoundException");
        publicIdentifiers.add("AccumulativeRunnable");
        publicIdentifiers.add("AclFileAttributeView");
        publicIdentifiers.add("ACONST_NULL");
        publicIdentifiers.add("Action");
        publicIdentifiers.add("ActionEvent");
        publicIdentifiers.add("ActionListener");
        publicIdentifiers.add("ActionManager");
        publicIdentifiers.add("ActionMap");
        publicIdentifiers.add("ActionMapUIResource");
        publicIdentifiers.add("ActiveEvent");
        publicIdentifiers.add("AdapterBlob");
        publicIdentifiers.add("AdaptiveResultTreeImpl");
        publicIdentifiers.add("Address");
        publicIdentifiers.add("AddressDataSource");
        publicIdentifiers.add("AddressException");
        publicIdentifiers.add("AddressField");
        publicIdentifiers.add("AddressOps");
        publicIdentifiers.add("AddressVisitor");
        publicIdentifiers.add("AdjacencyList");
        publicIdentifiers.add("Adjustable");
        publicIdentifiers.add("AdjustmentEvent");
        publicIdentifiers.add("AdjustmentListener");
        publicIdentifiers.add("Adler32");
        publicIdentifiers.add("AdviceAdapter");
        publicIdentifiers.add("AEADBadTagException");
        publicIdentifiers.add("Aes128");
        publicIdentifiers.add("Aes128Sha2");
        publicIdentifiers.add("Aes256");
        publicIdentifiers.add("Aes256Sha2");
        publicIdentifiers.add("AesDkCrypto");
        publicIdentifiers.add("AesSha2DkCrypto");
        publicIdentifiers.add("AffinePoint");
        publicIdentifiers.add("AffineTransform");
        publicIdentifiers.add("AffineTransformOp");
        publicIdentifiers.add("Agent");
        publicIdentifiers.add("AgentConfigurationError");
        publicIdentifiers.add("AgentInitializationException");
        publicIdentifiers.add("AgentLoadException");
        publicIdentifiers.add("AggregateCompleter");
        publicIdentifiers.add("aiff");
        publicIdentifiers.add("Algorithm");
        publicIdentifiers.add("AlgorithmAlreadyRegisteredException");
        publicIdentifiers.add("AlgorithmConstraints");
        publicIdentifiers.add("AlgorithmDecomposer");
        publicIdentifiers.add("AlgorithmId");
        publicIdentifiers.add("AlgorithmMethod");
        publicIdentifiers.add("AlgorithmParameterGenerator");
        publicIdentifiers.add("AlgorithmParameterGeneratorSpi");
        publicIdentifiers.add("AlgorithmParameters");
        publicIdentifiers.add("AlgorithmParameterSpec");
        publicIdentifiers.add("AlgorithmParametersSpi");
        publicIdentifiers.add("AliasFileParser");
        publicIdentifiers.add("AlignCenterAction");
        publicIdentifiers.add("AlignLeftAction");
        publicIdentifiers.add("Alignment");
        publicIdentifiers.add("AlignRightAction");
        publicIdentifiers.add("AllClassesIndexWriter");
        publicIdentifiers.add("AllocatableValue");
        publicIdentifiers.add("AllocationInstruction");
        publicIdentifiers.add("AllPackagesIndexWriter");
        publicIdentifiers.add("ALOAD");
        publicIdentifiers.add("AlphaColorPipe");
        publicIdentifiers.add("AlphaPaintPipe");
        publicIdentifiers.add("AlreadyBoundException");
        publicIdentifiers.add("AlreadyConnectedException");
        publicIdentifiers.add("AltPlatformInfo");
        publicIdentifiers.add("AmbiguousMethodException");
        publicIdentifiers.add("AMD64");
        publicIdentifiers.add("AMD64CurrentFrameGuess");
        publicIdentifiers.add("AMD64HotSpotJVMCIBackendFactory");
        publicIdentifiers.add("AMD64HotSpotRegisterConfig");
        publicIdentifiers.add("AMD64JavaCallWrapper");
        publicIdentifiers.add("AMD64ThreadContext");
        publicIdentifiers.add("Analyzer");
        publicIdentifiers.add("AnalyzerAdapter");
        publicIdentifiers.add("AnalyzerException");
        publicIdentifiers.add("AncestorEvent");
        publicIdentifiers.add("AncestorListener");
        publicIdentifiers.add("AnchorCertificates");
        publicIdentifiers.add("And");
        publicIdentifiers.add("ANEWARRAY");
        publicIdentifiers.add("AnnoConstruct");
        publicIdentifiers.add("Annotate");
        publicIdentifiers.add("Annotate$AnnotationTypeCompleter");
        publicIdentifiers.add("Annotate$AnnotationTypeMetadata");
        publicIdentifiers.add("Annotate$AnnotationTypeVisitor");
        publicIdentifiers.add("AnnotatedArrayType");
        publicIdentifiers.add("AnnotatedConstruct");
        publicIdentifiers.add("AnnotatedElement");
        publicIdentifiers.add("AnnotatedMemoryPanel");
        publicIdentifiers.add("AnnotatedParameterizedType");
        publicIdentifiers.add("AnnotatedType");
        publicIdentifiers.add("AnnotatedTypeTree");
        publicIdentifiers.add("AnnotatedTypeVariable");
        publicIdentifiers.add("AnnotatedWildcardType");
        publicIdentifiers.add("Annotation");
        publicIdentifiers.add("Annotation$Annotation_element_value");
        publicIdentifiers.add("Annotation$Array_element_value");
        publicIdentifiers.add("Annotation$Class_element_value");
        publicIdentifiers.add("Annotation$element_value");
        publicIdentifiers.add("Annotation$element_value$Visitor");
        publicIdentifiers.add("Annotation$element_value_pair");
        publicIdentifiers.add("Annotation$Enum_element_value");
        publicIdentifiers.add("Annotation$Primitive_element_value");
        publicIdentifiers.add("AnnotationDefault");
        publicIdentifiers.add("AnnotationDefault_attribute");
        publicIdentifiers.add("AnnotationElementValue");
        publicIdentifiers.add("AnnotationElementValueGen");
        publicIdentifiers.add("AnnotationEntry");
        publicIdentifiers.add("AnnotationEntryGen");
        publicIdentifiers.add("AnnotationFormatError");
        publicIdentifiers.add("AnnotationMirror");
        publicIdentifiers.add("AnnotationNode");
        publicIdentifiers.add("AnnotationParser");
        publicIdentifiers.add("AnnotationProcessingError");
        publicIdentifiers.add("AnnotationProxyMaker");
        publicIdentifiers.add("AnnotationRemapper");
        publicIdentifiers.add("Annotations");
        publicIdentifiers.add("AnnotationTree");
        publicIdentifiers.add("AnnotationType");
        publicIdentifiers.add("AnnotationTypeMemberBuilder");
        publicIdentifiers.add("AnnotationTypeMemberWriter");
        publicIdentifiers.add("AnnotationTypeMemberWriterImpl");
        publicIdentifiers.add("AnnotationTypeMismatchException");
        publicIdentifiers.add("AnnotationValue");
        publicIdentifiers.add("AnnotationValueVisitor");
        publicIdentifiers.add("AnnotationVisitor");
        publicIdentifiers.add("AnnotationWriter");
        publicIdentifiers.add("AnsiWriter");
        publicIdentifiers.add("AnyNodeCounter");
        publicIdentifiers.add("AnySimpleDV");
        publicIdentifiers.add("AnyURIDV");
        publicIdentifiers.add("ApacheCanonicalizer");
        publicIdentifiers.add("ApacheData");
        publicIdentifiers.add("ApacheNodeSetData");
        publicIdentifiers.add("ApacheOctetStreamData");
        publicIdentifiers.add("ApacheTransform");
        publicIdentifiers.add("APOptions");
        publicIdentifiers.add("AppConfigurationEntry");
        publicIdentifiers.add("AppConfigurationEntry$LoginModuleControlFlag");
        publicIdentifiers.add("Appendable");
        publicIdentifiers.add("AppEvent");
        publicIdentifiers.add("AppForegroundListener");
        publicIdentifiers.add("AppHiddenListener");
        publicIdentifiers.add("Applet");
        publicIdentifiers.add("Applet$AccessibleApplet");
        publicIdentifiers.add("AppletContext");
        publicIdentifiers.add("AppletInitializer");
        publicIdentifiers.add("AppletStub");
        publicIdentifiers.add("ApplyAction");
        publicIdentifiers.add("AppReopenedListener");
        publicIdentifiers.add("APRep");
        publicIdentifiers.add("APReq");
        publicIdentifiers.add("Arc2D");
        publicIdentifiers.add("Arc2D$Double");
        publicIdentifiers.add("Arc2D$Float");
        publicIdentifiers.add("ARCFOURCipher");
        publicIdentifiers.add("ArcFourCrypto");
        publicIdentifiers.add("ArcFourHmac");
        publicIdentifiers.add("Architecture");
        publicIdentifiers.add("Archive");
        publicIdentifiers.add("Archive$Entry");
        publicIdentifiers.add("Area");
        publicIdentifiers.add("AreaAveragingScaleFilter");
        publicIdentifiers.add("AreaOp");
        publicIdentifiers.add("AreaOp$AddOp");
        publicIdentifiers.add("AreaOp$CAGOp");
        publicIdentifiers.add("AreaOp$EOWindOp");
        publicIdentifiers.add("AreaOp$IntOp");
        publicIdentifiers.add("AreaOp$NZWindOp");
        publicIdentifiers.add("AreaOp$SubOp");
        publicIdentifiers.add("AreaOp$XorOp");
        publicIdentifiers.add("Arena");
        publicIdentifiers.add("ARETURN");
        publicIdentifiers.add("Arg");
        publicIdentifiers.add("ArgInfoData");
        publicIdentifiers.add("ArgumentAcceptingOptionSpec");
        publicIdentifiers.add("ArgumentAttr");
        publicIdentifiers.add("ArgumentCompleter");
        publicIdentifiers.add("ArgumentCompleter$ArgumentLine");
        publicIdentifiers.add("Arguments");
        publicIdentifiers.add("ArgumentSizeComputer");
        publicIdentifiers.add("ArithmeticException");
        publicIdentifiers.add("ArithmeticInstruction");
        publicIdentifiers.add("Array");
        publicIdentifiers.add("ArrayAccessTree");
        publicIdentifiers.add("ArrayBlockingQueue");
        publicIdentifiers.add("ArrayDecoder");
        publicIdentifiers.add("ArrayDeque");
        publicIdentifiers.add("ArrayElementValue");
        publicIdentifiers.add("ArrayElementValueGen");
        publicIdentifiers.add("ArrayEncoder");
        publicIdentifiers.add("ArrayIndexOutOfBoundsException");
        publicIdentifiers.add("ArrayInstruction");
        publicIdentifiers.add("ArrayKlass");
        publicIdentifiers.add("ARRAYLENGTH");
        publicIdentifiers.add("ArrayList");
        publicIdentifiers.add("ArrayNodeListIterator");
        publicIdentifiers.add("ArrayNotificationBuffer");
        publicIdentifiers.add("ArrayQueue");
        publicIdentifiers.add("ArrayReference");
        publicIdentifiers.add("ArrayReferenceImpl");
        publicIdentifiers.add("Arrays");
        publicIdentifiers.add("ArraysSupport");
        publicIdentifiers.add("ArrayStoreException");
        publicIdentifiers.add("ArrayType");
        publicIdentifiers.add("ArrayTypeImpl");
        publicIdentifiers.add("ArrayTypeSignature");
        publicIdentifiers.add("ArrayTypeTree");
        publicIdentifiers.add("ArrayUtils");
        publicIdentifiers.add("ASCIIReader");
        publicIdentifiers.add("ASMifier");
        publicIdentifiers.add("ASMifierSupport");
        publicIdentifiers.add("Asn1Exception");
        publicIdentifiers.add("ASRep");
        publicIdentifiers.add("ASReq");
        publicIdentifiers.add("Assert");
        publicIdentifiers.add("AssertionError");
        publicIdentifiers.add("AssertionFailure");
        publicIdentifiers.add("AssertTree");
        publicIdentifiers.add("AssignmentTree");
        publicIdentifiers.add("Association");
        publicIdentifiers.add("AssociationChange");
        publicIdentifiers.add("AssociationChangeNotification");
        publicIdentifiers.add("AssociationImpl");
        publicIdentifiers.add("Assumptions$Assumption");
        publicIdentifiers.add("Assumptions$AssumptionResult");
        publicIdentifiers.add("ASTORE");
        publicIdentifiers.add("AsyncBoxView");
        publicIdentifiers.add("AsyncBoxView$ChildLocator");
        publicIdentifiers.add("AsyncBoxView$ChildState");
        publicIdentifiers.add("AsynchronousByteChannel");
        publicIdentifiers.add("AsynchronousChannel");
        publicIdentifiers.add("AsynchronousChannelGroup");
        publicIdentifiers.add("AsynchronousChannelProvider");
        publicIdentifiers.add("AsynchronousCloseException");
        publicIdentifiers.add("AsynchronousFileChannel");
        publicIdentifiers.add("AsynchronousServerSocketChannel");
        publicIdentifiers.add("AsynchronousSocketChannel");
        publicIdentifiers.add("ATHROW");
        publicIdentifiers.add("AtomicBoolean");
        publicIdentifiers.add("AtomicContext");
        publicIdentifiers.add("AtomicDirContext");
        publicIdentifiers.add("AtomicInteger");
        publicIdentifiers.add("AtomicIntegerArray");
        publicIdentifiers.add("AtomicIntegerFieldUpdater");
        publicIdentifiers.add("AtomicLong");
        publicIdentifiers.add("AtomicLongArray");
        publicIdentifiers.add("AtomicLongFieldUpdater");
        publicIdentifiers.add("AtomicMarkableReference");
        publicIdentifiers.add("AtomicMoveNotSupportedException");
        publicIdentifiers.add("AtomicReference");
        publicIdentifiers.add("AtomicReferenceArray");
        publicIdentifiers.add("AtomicReferenceFieldUpdater");
        publicIdentifiers.add("AtomicStampedReference");
        publicIdentifiers.add("AttachingConnector");
        publicIdentifiers.add("AttachNotSupportedException");
        publicIdentifiers.add("AttachOperationFailedException");
        publicIdentifiers.add("AttachProvider");
        publicIdentifiers.add("AttachProviderImpl");
        publicIdentifiers.add("AttList");
        publicIdentifiers.add("Attr");
        publicIdentifiers.add("AttrCompare");
        publicIdentifiers.add("AttrContext");
        publicIdentifiers.add("AttrContextEnv");
        publicIdentifiers.add("AttrFilter");
        publicIdentifiers.add("Attribute");
        publicIdentifiers.add("Attribute$Array");
        publicIdentifiers.add("Attribute$Class");
        publicIdentifiers.add("Attribute$Compound");
        publicIdentifiers.add("Attribute$Constant");
        publicIdentifiers.add("Attribute$Enum");
        publicIdentifiers.add("Attribute$Error");
        publicIdentifiers.add("Attribute$Factory");
        publicIdentifiers.add("Attribute$TypeCompound");
        publicIdentifiers.add("Attribute$UnresolvedClass");
        publicIdentifiers.add("Attribute$Visitor");
        publicIdentifiers.add("AttributeChangeNotification");
        publicIdentifiers.add("AttributeChangeNotificationFilter");
        publicIdentifiers.add("AttributeClass");
        publicIdentifiers.add("AttributedCharacterIterator");
        publicIdentifiers.add("AttributedCharacterIterator$Attribute");
        publicIdentifiers.add("AttributedCharSequence");
        publicIdentifiers.add("AttributedString");
        publicIdentifiers.add("AttributedStringBuilder");
        publicIdentifiers.add("AttributedStyle");
        publicIdentifiers.add("AttributeException");
        publicIdentifiers.add("AttributeImpl");
        publicIdentifiers.add("AttributeInUseException");
        publicIdentifiers.add("AttributeIterator");
        publicIdentifiers.add("AttributeList");
        publicIdentifiers.add("AttributeListImpl");
        publicIdentifiers.add("AttributeMap");
        publicIdentifiers.add("AttributeModificationException");
        publicIdentifiers.add("AttributeNotFoundException");
        publicIdentifiers.add("AttributePSVI");
        publicIdentifiers.add("AttributePSVImpl");
        publicIdentifiers.add("AttributeReader");
        publicIdentifiers.add("Attributes");
        publicIdentifiers.add("Attributes$Name");
        publicIdentifiers.add("Attributes2");
        publicIdentifiers.add("Attributes2Impl");
        publicIdentifiers.add("AttributeSet");
        publicIdentifiers.add("AttributeSet$CharacterAttribute");
        publicIdentifiers.add("AttributeSet$ColorAttribute");
        publicIdentifiers.add("AttributeSet$FontAttribute");
        publicIdentifiers.add("AttributeSet$ParagraphAttribute");
        publicIdentifiers.add("AttributesImpl");
        publicIdentifiers.add("AttributeTree");
        publicIdentifiers.add("AttributeValueExp");
        publicIdentifiers.add("AttributeView");
        publicIdentifiers.add("AttributeWriter");
        publicIdentifiers.add("AttrImpl");
        publicIdentifiers.add("AttrNSImpl");
        publicIdentifiers.add("AttrRecover");
        publicIdentifiers.add("Attrs");
        publicIdentifiers.add("AudioClip");
        publicIdentifiers.add("AudioFileFormat");
        publicIdentifiers.add("AudioFileFormat$Type");
        publicIdentifiers.add("AudioFileReader");
        publicIdentifiers.add("AudioFileWriter");
        publicIdentifiers.add("AudioFloatConverter");
        publicIdentifiers.add("AudioFloatInputStream");
        publicIdentifiers.add("AudioFormat");
        publicIdentifiers.add("AudioFormat$Encoding");
        publicIdentifiers.add("AudioInputStream");
        publicIdentifiers.add("AudioPermission");
        publicIdentifiers.add("AudioSynthesizer");
        publicIdentifiers.add("AudioSystem");
        publicIdentifiers.add("Augmentations");
        publicIdentifiers.add("AugmentationsImpl");
        publicIdentifiers.add("AuthCache");
        publicIdentifiers.add("AuthCacheImpl");
        publicIdentifiers.add("AuthCacheValue");
        publicIdentifiers.add("AuthenticationException");
        publicIdentifiers.add("AuthenticationHeader");
        publicIdentifiers.add("AuthenticationInfo");
        publicIdentifiers.add("AuthenticationNotSupportedException");
        publicIdentifiers.add("Authenticator");
        publicIdentifiers.add("Authenticator$Failure");
        publicIdentifiers.add("Authenticator$Result");
        publicIdentifiers.add("Authenticator$Retry");
        publicIdentifiers.add("Authenticator$Success");
        publicIdentifiers.add("AuthenticatorKeys$AuthenticatorKeyAccess");
        publicIdentifiers.add("AuthFilter");
        publicIdentifiers.add("AuthList");
        publicIdentifiers.add("AuthorityInfoAccessExtension");
        publicIdentifiers.add("AuthorityKeyIdentifierExtension");
        publicIdentifiers.add("AuthorizationData");
        publicIdentifiers.add("AuthorizationDataEntry");
        publicIdentifiers.add("AuthorizeCallback");
        publicIdentifiers.add("AuthorTree");
        publicIdentifiers.add("AuthProvider");
        publicIdentifiers.add("AuthResources");
        publicIdentifiers.add("AuthResources_de");
        publicIdentifiers.add("AuthResources_ja");
        publicIdentifiers.add("AuthResources_zh_CN");
        publicIdentifiers.add("AuthTime");
        publicIdentifiers.add("AuthTimeWithHash");
        publicIdentifiers.add("AutoCloseable");
        publicIdentifiers.add("AutoConnectSequencer");
        publicIdentifiers.add("Autoscroll");
        publicIdentifiers.add("AuxBfEfRecord");
        publicIdentifiers.add("AuxFileRecord");
        publicIdentifiers.add("AuxFunctionDefinitionRecord");
        publicIdentifiers.add("AuxLocaleProviderAdapter");
        publicIdentifiers.add("AuxSectionDefinitionsRecord");
        publicIdentifiers.add("AuxSymbolRecord");
        publicIdentifiers.add("AuxWeakExternalRecord");
        publicIdentifiers.add("AVA");
        publicIdentifiers.add("AvailableLanguageTags");
        publicIdentifiers.add("AWTAccessor$AccessibleBundleAccessor");
        publicIdentifiers.add("AWTAccessor$AccessibleContextAccessor");
        publicIdentifiers.add("AWTAccessor$AWTEventAccessor");
        publicIdentifiers.add("AWTAccessor$CheckboxMenuItemAccessor");
        publicIdentifiers.add("AWTAccessor$ClientPropertyKeyAccessor");
        publicIdentifiers.add("AWTAccessor$ComponentAccessor");
        publicIdentifiers.add("AWTAccessor$ContainerAccessor");
        publicIdentifiers.add("AWTAccessor$CursorAccessor");
        publicIdentifiers.add("AWTAccessor$DefaultKeyboardFocusManagerAccessor");
        publicIdentifiers.add("AWTAccessor$DragSourceContextAccessor");
        publicIdentifiers.add("AWTAccessor$DropTargetContextAccessor");
        publicIdentifiers.add("AWTAccessor$EventQueueAccessor");
        publicIdentifiers.add("AWTAccessor$FileDialogAccessor");
        publicIdentifiers.add("AWTAccessor$FrameAccessor");
        publicIdentifiers.add("AWTAccessor$ICC_ProfileAccessor");
        publicIdentifiers.add("AWTAccessor$InputEventAccessor");
        publicIdentifiers.add("AWTAccessor$InvocationEventAccessor");
        publicIdentifiers.add("AWTAccessor$KeyboardFocusManagerAccessor");
        publicIdentifiers.add("AWTAccessor$KeyEventAccessor");
        publicIdentifiers.add("AWTAccessor$MenuAccessor");
        publicIdentifiers.add("AWTAccessor$MenuBarAccessor");
        publicIdentifiers.add("AWTAccessor$MenuComponentAccessor");
        publicIdentifiers.add("AWTAccessor$MenuItemAccessor");
        publicIdentifiers.add("AWTAccessor$MouseEventAccessor");
        publicIdentifiers.add("AWTAccessor$PopupMenuAccessor");
        publicIdentifiers.add("AWTAccessor$ScrollPaneAdjustableAccessor");
        publicIdentifiers.add("AWTAccessor$SequencedEventAccessor");
        publicIdentifiers.add("AWTAccessor$SystemColorAccessor");
        publicIdentifiers.add("AWTAccessor$SystemTrayAccessor");
        publicIdentifiers.add("AWTAccessor$ToolkitAccessor");
        publicIdentifiers.add("AWTAccessor$TrayIconAccessor");
        publicIdentifiers.add("AWTAccessor$WindowAccessor");
        publicIdentifiers.add("AWTError");
        publicIdentifiers.add("AWTEvent");
        publicIdentifiers.add("AWTEventListener");
        publicIdentifiers.add("AWTEventListenerProxy");
        publicIdentifiers.add("AWTEventMonitor");
        publicIdentifiers.add("AWTEventMulticaster");
        publicIdentifiers.add("AWTException");
        publicIdentifiers.add("AwtGraphicsConfigData");
        publicIdentifiers.add("AWTIcon32_java_icon16_png");
        publicIdentifiers.add("AWTIcon32_java_icon24_png");
        publicIdentifiers.add("AWTIcon32_java_icon32_png");
        publicIdentifiers.add("AWTIcon32_java_icon48_png");
        publicIdentifiers.add("AWTIcon32_security_icon_bw16_png");
        publicIdentifiers.add("AWTIcon32_security_icon_bw24_png");
        publicIdentifiers.add("AWTIcon32_security_icon_bw32_png");
        publicIdentifiers.add("AWTIcon32_security_icon_bw48_png");
        publicIdentifiers.add("AWTIcon32_security_icon_interim16_png");
        publicIdentifiers.add("AWTIcon32_security_icon_interim24_png");
        publicIdentifiers.add("AWTIcon32_security_icon_interim32_png");
        publicIdentifiers.add("AWTIcon32_security_icon_interim48_png");
        publicIdentifiers.add("AWTIcon32_security_icon_yellow16_png");
        publicIdentifiers.add("AWTIcon32_security_icon_yellow24_png");
        publicIdentifiers.add("AWTIcon32_security_icon_yellow32_png");
        publicIdentifiers.add("AWTIcon32_security_icon_yellow48_png");
        publicIdentifiers.add("AWTIcon64_java_icon16_png");
        publicIdentifiers.add("AWTIcon64_java_icon24_png");
        publicIdentifiers.add("AWTIcon64_java_icon32_png");
        publicIdentifiers.add("AWTIcon64_java_icon48_png");
        publicIdentifiers.add("AWTIcon64_security_icon_bw16_png");
        publicIdentifiers.add("AWTIcon64_security_icon_bw24_png");
        publicIdentifiers.add("AWTIcon64_security_icon_bw32_png");
        publicIdentifiers.add("AWTIcon64_security_icon_bw48_png");
        publicIdentifiers.add("AWTIcon64_security_icon_interim16_png");
        publicIdentifiers.add("AWTIcon64_security_icon_interim24_png");
        publicIdentifiers.add("AWTIcon64_security_icon_interim32_png");
        publicIdentifiers.add("AWTIcon64_security_icon_interim48_png");
        publicIdentifiers.add("AWTIcon64_security_icon_yellow16_png");
        publicIdentifiers.add("AWTIcon64_security_icon_yellow24_png");
        publicIdentifiers.add("AWTIcon64_security_icon_yellow32_png");
        publicIdentifiers.add("AWTIcon64_security_icon_yellow48_png");
        publicIdentifiers.add("awtImageData");
        publicIdentifiers.add("AWTKeyStroke");
        publicIdentifiers.add("AwtScreenData");
        publicIdentifiers.add("AxesWalker");
        publicIdentifiers.add("Boolean");
        publicIdentifiers.add("Byte");
        publicIdentifiers.add("BackAction");
        publicIdentifiers.add("BackBufferCapsProvider");
        publicIdentifiers.add("BackgroundLookupListener");
        publicIdentifiers.add("BackgroundServiceLookup");
        publicIdentifiers.add("BackingStoreException");
        publicIdentifiers.add("BadAddressTreeNodeAdapter");
        publicIdentifiers.add("BadAttributeValueExpException");
        publicIdentifiers.add("BadBinaryOpValueExpException");
        publicIdentifiers.add("BadLocationException");
        publicIdentifiers.add("BadPaddingException");
        publicIdentifiers.add("BadStringOperationException");
        publicIdentifiers.add("BailoutException");
        publicIdentifiers.add("BakedArrayList");
        publicIdentifiers.add("BALOAD");
        publicIdentifiers.add("BandCombineOp");
        publicIdentifiers.add("Base64");
        publicIdentifiers.add("Base64$Decoder");
        publicIdentifiers.add("Base64$Encoder");
        publicIdentifiers.add("Base64BinaryDV");
        publicIdentifiers.add("Base64DecodingException");
        publicIdentifiers.add("BaseCalendar");
        publicIdentifiers.add("BaseCalendar$Date");
        publicIdentifiers.add("BaseClass");
        publicIdentifiers.add("BaseConfiguration");
        publicIdentifiers.add("BaseDVFactory");
        publicIdentifiers.add("BaseFileManager");
        publicIdentifiers.add("BaseFileManager$ContentCacheEntry");
        publicIdentifiers.add("BaseLocaleDataMetaInfo");
        publicIdentifiers.add("BaseMarkupSerializer");
        publicIdentifiers.add("BaseMultiResolutionImage");
        publicIdentifiers.add("BaseOperatingSystemImpl");
        publicIdentifiers.add("BaseOptions");
        publicIdentifiers.add("BaseOptions$Hidden");
        publicIdentifiers.add("BaseOptions$Option");
        publicIdentifiers.add("BaseOptions$XOption");
        publicIdentifiers.add("BaseRow");
        publicIdentifiers.add("BaseRowSet");
        publicIdentifiers.add("BaseSchemaDVFactory");
        publicIdentifiers.add("BaseStream");
        publicIdentifiers.add("BaseTaglet");
        publicIdentifiers.add("BaseType");
        publicIdentifiers.add("basic");
        publicIdentifiers.add("BasicAddressFieldWrapper");
        publicIdentifiers.add("BasicArrayType");
        publicIdentifiers.add("BasicArrowButton");
        publicIdentifiers.add("BasicAttribute");
        publicIdentifiers.add("BasicAttributes");
        publicIdentifiers.add("BasicAuthenticator");
        publicIdentifiers.add("BasicBaseClass");
        publicIdentifiers.add("BasicBitType");
        publicIdentifiers.add("BasicBlockSym");
        publicIdentifiers.add("BasicBorders");
        publicIdentifiers.add("BasicBorders$ButtonBorder");
        publicIdentifiers.add("BasicBorders$FieldBorder");
        publicIdentifiers.add("BasicBorders$MarginBorder");
        publicIdentifiers.add("BasicBorders$MenuBarBorder");
        publicIdentifiers.add("BasicBorders$RadioButtonBorder");
        publicIdentifiers.add("BasicBorders$RolloverButtonBorder");
        publicIdentifiers.add("BasicBorders$SplitPaneBorder");
        publicIdentifiers.add("BasicBorders$ToggleButtonBorder");
        publicIdentifiers.add("BasicBundlers");
        publicIdentifiers.add("BasicButtonListener");
        publicIdentifiers.add("BasicButtonUI");
        publicIdentifiers.add("BasicCDebugInfoDataBase");
        publicIdentifiers.add("BasicCFrame");
        publicIdentifiers.add("BasicCheckBoxMenuItemUI");
        publicIdentifiers.add("BasicCheckBoxUI");
        publicIdentifiers.add("BasicCIntegerField");
        publicIdentifiers.add("BasicCIntegerType");
        publicIdentifiers.add("BasicColorChooserUI");
        publicIdentifiers.add("BasicColorChooserUI$PropertyHandler");
        publicIdentifiers.add("BasicComboBoxEditor");
        publicIdentifiers.add("BasicComboBoxEditor$UIResource");
        publicIdentifiers.add("BasicComboBoxRenderer");
        publicIdentifiers.add("BasicComboBoxRenderer$UIResource");
        publicIdentifiers.add("BasicComboBoxUI");
        publicIdentifiers.add("BasicComboBoxUI$ComboBoxLayoutManager");
        publicIdentifiers.add("BasicComboBoxUI$FocusHandler");
        publicIdentifiers.add("BasicComboBoxUI$ItemHandler");
        publicIdentifiers.add("BasicComboBoxUI$KeyHandler");
        publicIdentifiers.add("BasicComboBoxUI$ListDataHandler");
        publicIdentifiers.add("BasicComboBoxUI$PropertyChangeHandler");
        publicIdentifiers.add("BasicComboPopup");
        publicIdentifiers.add("BasicComboPopup$InvocationKeyHandler");
        publicIdentifiers.add("BasicComboPopup$InvocationMouseHandler");
        publicIdentifiers.add("BasicComboPopup$InvocationMouseMotionHandler");
        publicIdentifiers.add("BasicComboPopup$ItemHandler");
        publicIdentifiers.add("BasicComboPopup$ListDataHandler");
        publicIdentifiers.add("BasicComboPopup$ListMouseHandler");
        publicIdentifiers.add("BasicComboPopup$ListMouseMotionHandler");
        publicIdentifiers.add("BasicComboPopup$ListSelectionHandler");
        publicIdentifiers.add("BasicComboPopup$PropertyChangeHandler");
        publicIdentifiers.add("BasicCompoundType");
        publicIdentifiers.add("BasicConstraintsExtension");
        publicIdentifiers.add("BasicControl");
        publicIdentifiers.add("BasicDebugEvent");
        publicIdentifiers.add("BasicDesktopIconUI");
        publicIdentifiers.add("BasicDesktopIconUI$MouseInputHandler");
        publicIdentifiers.add("BasicDesktopPaneUI");
        publicIdentifiers.add("BasicDesktopPaneUI$CloseAction");
        publicIdentifiers.add("BasicDesktopPaneUI$MaximizeAction");
        publicIdentifiers.add("BasicDesktopPaneUI$MinimizeAction");
        publicIdentifiers.add("BasicDesktopPaneUI$NavigateAction");
        publicIdentifiers.add("BasicDesktopPaneUI$OpenAction");
        publicIdentifiers.add("BasicDiagnosticFormatter");
        publicIdentifiers.add("BasicDiagnosticFormatter$BasicConfiguration");
        publicIdentifiers.add("BasicDirectoryModel");
        publicIdentifiers.add("BasicDoubleType");
        publicIdentifiers.add("BasicEditorPaneUI");
        publicIdentifiers.add("BasicEnumType");
        publicIdentifiers.add("BasicField");
        publicIdentifiers.add("BasicFieldWrapper");
        publicIdentifiers.add("BasicFileAttributes");
        publicIdentifiers.add("BasicFileAttributesHolder");
        publicIdentifiers.add("BasicFileAttributeView");
        publicIdentifiers.add("BasicFileChooserUI");
        publicIdentifiers.add("BasicFileChooserUI$AcceptAllFileFilter");
        publicIdentifiers.add("BasicFileChooserUI$ApproveSelectionAction");
        publicIdentifiers.add("BasicFileChooserUI$BasicFileView");
        publicIdentifiers.add("BasicFileChooserUI$CancelSelectionAction");
        publicIdentifiers.add("BasicFileChooserUI$ChangeToParentDirectoryAction");
        publicIdentifiers.add("BasicFileChooserUI$DoubleClickListener");
        publicIdentifiers.add("BasicFileChooserUI$GoHomeAction");
        publicIdentifiers.add("BasicFileChooserUI$NewFolderAction");
        publicIdentifiers.add("BasicFileChooserUI$SelectionListener");
        publicIdentifiers.add("BasicFileChooserUI$UpdateAction");
        publicIdentifiers.add("BasicFloatType");
        publicIdentifiers.add("BasicFormattedTextFieldUI");
        publicIdentifiers.add("BasicFunctionSym");
        publicIdentifiers.add("BasicFunctionType");
        publicIdentifiers.add("BasicGlobalSym");
        publicIdentifiers.add("BasicGraphicsUtils");
        publicIdentifiers.add("BasicHTML");
        publicIdentifiers.add("BasicIconFactory");
        publicIdentifiers.add("BasicImageReader");
        publicIdentifiers.add("BasicIndexableFieldIdentifier");
        publicIdentifiers.add("BasicInternalFrameTitlePane");
        publicIdentifiers.add("BasicInternalFrameTitlePane$CloseAction");
        publicIdentifiers.add("BasicInternalFrameTitlePane$IconifyAction");
        publicIdentifiers.add("BasicInternalFrameTitlePane$MaximizeAction");
        publicIdentifiers.add("BasicInternalFrameTitlePane$MoveAction");
        publicIdentifiers.add("BasicInternalFrameTitlePane$PropertyChangeHandler");
        publicIdentifiers.add("BasicInternalFrameTitlePane$RestoreAction");
        publicIdentifiers.add("BasicInternalFrameTitlePane$SizeAction");
        publicIdentifiers.add("BasicInternalFrameTitlePane$SystemMenuBar");
        publicIdentifiers.add("BasicInternalFrameTitlePane$TitlePaneLayout");
        publicIdentifiers.add("BasicInternalFrameUI");
        publicIdentifiers.add("BasicInternalFrameUI$BasicInternalFrameListener");
        publicIdentifiers.add("BasicInternalFrameUI$BorderListener");
        publicIdentifiers.add("BasicInternalFrameUI$ComponentHandler");
        publicIdentifiers.add("BasicInternalFrameUI$GlassPaneDispatcher");
        publicIdentifiers.add("BasicInternalFrameUI$InternalFrameLayout");
        publicIdentifiers.add("BasicInternalFrameUI$InternalFramePropertyChangeListener");
        publicIdentifiers.add("BasicInterpreter");
        publicIdentifiers.add("BasicIntType");
        publicIdentifiers.add("BasicJavacTask");
        publicIdentifiers.add("BasicJBooleanField");
        publicIdentifiers.add("BasicJByteField");
        publicIdentifiers.add("BasicJCharField");
        publicIdentifiers.add("BasicJDoubleField");
        publicIdentifiers.add("BasicJFloatField");
        publicIdentifiers.add("BasicJIntField");
        publicIdentifiers.add("BasicJLongField");
        publicIdentifiers.add("BasicJShortField");
        publicIdentifiers.add("BasicLabelUI");
        publicIdentifiers.add("BasicLineNumberInfo");
        publicIdentifiers.add("BasicLineNumberMapping");
        publicIdentifiers.add("BasicListUI");
        publicIdentifiers.add("BasicListUI$FocusHandler");
        publicIdentifiers.add("BasicListUI$ListDataHandler");
        publicIdentifiers.add("BasicListUI$ListSelectionHandler");
        publicIdentifiers.add("BasicListUI$MouseInputHandler");
        publicIdentifiers.add("BasicListUI$PropertyChangeHandler");
        publicIdentifiers.add("BasicLocalSym");
        publicIdentifiers.add("BasicLock");
        publicIdentifiers.add("BasicLookAndFeel");
        publicIdentifiers.add("BasicMemberFunctionType");
        publicIdentifiers.add("BasicMenuBarUI");
        publicIdentifiers.add("BasicMenuItemUI");
        publicIdentifiers.add("BasicMenuItemUI$MouseInputHandler");
        publicIdentifiers.add("BasicMenuUI");
        publicIdentifiers.add("BasicMenuUI$ChangeHandler");
        publicIdentifiers.add("BasicMenuUI$MouseInputHandler");
        publicIdentifiers.add("BasicNamedFieldIdentifier");
        publicIdentifiers.add("BasicNarrowOopField");
        publicIdentifiers.add("BasicObjectLock");
        publicIdentifiers.add("BasicOopField");
        publicIdentifiers.add("BasicOptionPaneUI");
        publicIdentifiers.add("BasicOptionPaneUI$ButtonActionListener");
        publicIdentifiers.add("BasicOptionPaneUI$ButtonAreaLayout");
        publicIdentifiers.add("BasicOptionPaneUI$PropertyChangeHandler");
        publicIdentifiers.add("BasicPanelUI");
        publicIdentifiers.add("BasicParserConfiguration");
        publicIdentifiers.add("BasicPasswordFieldUI");
        publicIdentifiers.add("BasicPermission");
        publicIdentifiers.add("BasicPointerType");
        publicIdentifiers.add("BasicPopupMenuSeparatorUI");
        publicIdentifiers.add("BasicPopupMenuUI");
        publicIdentifiers.add("BasicProgressBarUI");
        publicIdentifiers.add("BasicProgressBarUI$ChangeHandler");
        publicIdentifiers.add("BasicRadioButtonMenuItemUI");
        publicIdentifiers.add("BasicRadioButtonUI");
        publicIdentifiers.add("BasicRefType");
        publicIdentifiers.add("BasicRootPaneUI");
        publicIdentifiers.add("BasicScrollBarUI");
        publicIdentifiers.add("BasicScrollBarUI$ArrowButtonListener");
        publicIdentifiers.add("BasicScrollBarUI$ModelListener");
        publicIdentifiers.add("BasicScrollBarUI$PropertyChangeHandler");
        publicIdentifiers.add("BasicScrollBarUI$ScrollListener");
        publicIdentifiers.add("BasicScrollBarUI$TrackListener");
        publicIdentifiers.add("BasicScrollPaneUI");
        publicIdentifiers.add("BasicScrollPaneUI$HSBChangeListener");
        publicIdentifiers.add("BasicScrollPaneUI$MouseWheelHandler");
        publicIdentifiers.add("BasicScrollPaneUI$PropertyChangeHandler");
        publicIdentifiers.add("BasicScrollPaneUI$ViewportChangeHandler");
        publicIdentifiers.add("BasicScrollPaneUI$VSBChangeListener");
        publicIdentifiers.add("BasicSeparatorUI");
        publicIdentifiers.add("BasicSliderUI");
        publicIdentifiers.add("BasicSliderUI$ActionScroller");
        publicIdentifiers.add("BasicSliderUI$ChangeHandler");
        publicIdentifiers.add("BasicSliderUI$ComponentHandler");
        publicIdentifiers.add("BasicSliderUI$FocusHandler");
        publicIdentifiers.add("BasicSliderUI$PropertyChangeHandler");
        publicIdentifiers.add("BasicSliderUI$ScrollListener");
        publicIdentifiers.add("BasicSliderUI$TrackListener");
        publicIdentifiers.add("BasicSpinnerUI");
        publicIdentifiers.add("BasicSplitPaneDivider");
        publicIdentifiers.add("BasicSplitPaneDivider$DividerLayout");
        publicIdentifiers.add("BasicSplitPaneDivider$DragController");
        publicIdentifiers.add("BasicSplitPaneDivider$MouseHandler");
        publicIdentifiers.add("BasicSplitPaneDivider$VerticalDragController");
        publicIdentifiers.add("BasicSplitPaneUI");
        publicIdentifiers.add("BasicSplitPaneUI$BasicHorizontalLayoutManager");
        publicIdentifiers.add("BasicSplitPaneUI$BasicVerticalLayoutManager");
        publicIdentifiers.add("BasicSplitPaneUI$FocusHandler");
        publicIdentifiers.add("BasicSplitPaneUI$KeyboardDownRightHandler");
        publicIdentifiers.add("BasicSplitPaneUI$KeyboardEndHandler");
        publicIdentifiers.add("BasicSplitPaneUI$KeyboardHomeHandler");
        publicIdentifiers.add("BasicSplitPaneUI$KeyboardResizeToggleHandler");
        publicIdentifiers.add("BasicSplitPaneUI$KeyboardUpLeftHandler");
        publicIdentifiers.add("BasicSplitPaneUI$PropertyHandler");
        publicIdentifiers.add("BasicStroke");
        publicIdentifiers.add("BasicSym");
        publicIdentifiers.add("BasicTabbedPaneUI");
        publicIdentifiers.add("BasicTabbedPaneUI$FocusHandler");
        publicIdentifiers.add("BasicTabbedPaneUI$MouseHandler");
        publicIdentifiers.add("BasicTabbedPaneUI$PropertyChangeHandler");
        publicIdentifiers.add("BasicTabbedPaneUI$TabbedPaneLayout");
        publicIdentifiers.add("BasicTabbedPaneUI$TabSelectionHandler");
        publicIdentifiers.add("BasicTableHeaderUI");
        publicIdentifiers.add("BasicTableHeaderUI$MouseInputHandler");
        publicIdentifiers.add("BasicTableUI");
        publicIdentifiers.add("BasicTableUI$FocusHandler");
        publicIdentifiers.add("BasicTableUI$KeyHandler");
        publicIdentifiers.add("BasicTableUI$MouseInputHandler");
        publicIdentifiers.add("BasicTestIterator");
        publicIdentifiers.add("BasicTextAreaUI");
        publicIdentifiers.add("BasicTextFieldUI");
        publicIdentifiers.add("BasicTextPaneUI");
        publicIdentifiers.add("BasicTextUI");
        publicIdentifiers.add("BasicTextUI$BasicCaret");
        publicIdentifiers.add("BasicTextUI$BasicHighlighter");
        publicIdentifiers.add("BasicToggleButtonUI");
        publicIdentifiers.add("BasicToolBarSeparatorUI");
        publicIdentifiers.add("BasicToolBarUI");
        publicIdentifiers.add("BasicToolBarUI$DockingListener");
        publicIdentifiers.add("BasicToolBarUI$DragWindow");
        publicIdentifiers.add("BasicToolBarUI$FrameListener");
        publicIdentifiers.add("BasicToolBarUI$PropertyListener");
        publicIdentifiers.add("BasicToolBarUI$ToolBarContListener");
        publicIdentifiers.add("BasicToolBarUI$ToolBarFocusListener");
        publicIdentifiers.add("BasicToolTipUI");
        publicIdentifiers.add("BasicTreeUI");
        publicIdentifiers.add("BasicTreeUI$CellEditorHandler");
        publicIdentifiers.add("BasicTreeUI$ComponentHandler");
        publicIdentifiers.add("BasicTreeUI$FocusHandler");
        publicIdentifiers.add("BasicTreeUI$KeyHandler");
        publicIdentifiers.add("BasicTreeUI$MouseHandler");
        publicIdentifiers.add("BasicTreeUI$MouseInputHandler");
        publicIdentifiers.add("BasicTreeUI$NodeDimensionsHandler");
        publicIdentifiers.add("BasicTreeUI$PropertyChangeHandler");
        publicIdentifiers.add("BasicTreeUI$SelectionModelPropertyChangeHandler");
        publicIdentifiers.add("BasicTreeUI$TreeCancelEditingAction");
        publicIdentifiers.add("BasicTreeUI$TreeExpansionHandler");
        publicIdentifiers.add("BasicTreeUI$TreeHomeAction");
        publicIdentifiers.add("BasicTreeUI$TreeIncrementAction");
        publicIdentifiers.add("BasicTreeUI$TreeModelHandler");
        publicIdentifiers.add("BasicTreeUI$TreePageAction");
        publicIdentifiers.add("BasicTreeUI$TreeSelectionHandler");
        publicIdentifiers.add("BasicTreeUI$TreeToggleAction");
        publicIdentifiers.add("BasicTreeUI$TreeTraverseAction");
        publicIdentifiers.add("BasicType");
        publicIdentifiers.add("BasicTypeDataBase");
        publicIdentifiers.add("BasicTypeSize");
        publicIdentifiers.add("BasicValue");
        publicIdentifiers.add("BasicVerifier");
        publicIdentifiers.add("BasicViewportUI");
        publicIdentifiers.add("BasicVoidType");
        publicIdentifiers.add("BasicVtblAccess");
        publicIdentifiers.add("BasicWriter");
        publicIdentifiers.add("BASTORE");
        publicIdentifiers.add("BatchUpdateException");
        publicIdentifiers.add("BCELComparator");
        publicIdentifiers.add("BCELifier");
        publicIdentifiers.add("BeanContext");
        publicIdentifiers.add("BeanContextChild");
        publicIdentifiers.add("BeanContextChildComponentProxy");
        publicIdentifiers.add("BeanContextChildSupport");
        publicIdentifiers.add("BeanContextContainerProxy");
        publicIdentifiers.add("BeanContextEvent");
        publicIdentifiers.add("BeanContextMembershipEvent");
        publicIdentifiers.add("BeanContextMembershipListener");
        publicIdentifiers.add("BeanContextProxy");
        publicIdentifiers.add("BeanContextServiceAvailableEvent");
        publicIdentifiers.add("BeanContextServiceProvider");
        publicIdentifiers.add("BeanContextServiceProviderBeanInfo");
        publicIdentifiers.add("BeanContextServiceRevokedEvent");
        publicIdentifiers.add("BeanContextServiceRevokedListener");
        publicIdentifiers.add("BeanContextServices");
        publicIdentifiers.add("BeanContextServicesListener");
        publicIdentifiers.add("BeanContextServicesSupport");
        publicIdentifiers.add("BeanContextServicesSupport$BCSSChild");
        publicIdentifiers.add("BeanContextServicesSupport$BCSSProxyServiceProvider");
        publicIdentifiers.add("BeanContextServicesSupport$BCSSServiceProvider");
        publicIdentifiers.add("BeanContextSupport");
        publicIdentifiers.add("BeanContextSupport$BCSChild");
        publicIdentifiers.add("BeanDescriptor");
        publicIdentifiers.add("BeanInfo");
        publicIdentifiers.add("BeanProperty");
        publicIdentifiers.add("Beans");
        publicIdentifiers.add("BeansLinker");
        publicIdentifiers.add("Ber");
        publicIdentifiers.add("BevelBorder");
        publicIdentifiers.add("BiConsumer");
        publicIdentifiers.add("BidiBase");
        publicIdentifiers.add("BidiBase$BidiPairedBracketType");
        publicIdentifiers.add("BiFunction");
        publicIdentifiers.add("Big5");
        publicIdentifiers.add("Big5_HKSCS");
        publicIdentifiers.add("Big5_HKSCS_2001");
        publicIdentifiers.add("Big5_Solaris");
        publicIdentifiers.add("BigDecimal");
        publicIdentifiers.add("BigInteger");
        publicIdentifiers.add("BinaryOperator");
        publicIdentifiers.add("BinaryRefAddr");
        publicIdentifiers.add("BinaryTree");
        publicIdentifiers.add("BindException");
        publicIdentifiers.add("Binding");
        publicIdentifiers.add("Binding$Builder");
        publicIdentifiers.add("Binding$Cast");
        publicIdentifiers.add("Binding$Context");
        publicIdentifiers.add("Binding$Dereference");
        publicIdentifiers.add("Binding$Move");
        publicIdentifiers.add("BindingInterpreter");
        publicIdentifiers.add("BindingPatternTree");
        publicIdentifiers.add("BindingReader");
        publicIdentifiers.add("Bindings");
        publicIdentifiers.add("BindingSpecializer");
        publicIdentifiers.add("BiPredicate");
        publicIdentifiers.add("BIPUSH");
        publicIdentifiers.add("BitArray");
        publicIdentifiers.add("BitData");
        publicIdentifiers.add("BitFile");
        publicIdentifiers.add("BitMap");
        publicIdentifiers.add("BitMapClosure");
        publicIdentifiers.add("BitMapInterface");
        publicIdentifiers.add("BitMapSegmented");
        publicIdentifiers.add("Bits");
        publicIdentifiers.add("BitSet");
        publicIdentifiers.add("BitType");
        publicIdentifiers.add("Blit");
        publicIdentifiers.add("BlitBg");
        publicIdentifiers.add("Blob");
        publicIdentifiers.add("Block");
        publicIdentifiers.add("Block_Array");
        publicIdentifiers.add("Blocker");
        publicIdentifiers.add("BlockingDeque");
        publicIdentifiers.add("BlockingQueue");
        publicIdentifiers.add("Block_List");
        publicIdentifiers.add("BlockSym");
        publicIdentifiers.add("BlockTagTree");
        publicIdentifiers.add("BlockTree");
        publicIdentifiers.add("BlockView");
        publicIdentifiers.add("BMPattern");
        publicIdentifiers.add("BMPCompressionTypes");
        publicIdentifiers.add("BMPConstants");
        publicIdentifiers.add("BMPImageReader");
        publicIdentifiers.add("BMPImageReaderSpi");
        publicIdentifiers.add("BMPImageWriteParam");
        publicIdentifiers.add("BMPImageWriter");
        publicIdentifiers.add("BMPImageWriterSpi");
        publicIdentifiers.add("BMPMetadata");
        publicIdentifiers.add("BMPMetadataFormat");
        publicIdentifiers.add("BMPMetadataFormatResources");
        publicIdentifiers.add("BodyContents");
        publicIdentifiers.add("BogusColorSpace");
        publicIdentifiers.add("Book");
        publicIdentifiers.add("Bool");
        publicIdentifiers.add("BooleanControl");
        publicIdentifiers.add("BooleanControl$Type");
        publicIdentifiers.add("BooleanDV");
        publicIdentifiers.add("BooleanEditor");
        publicIdentifiers.add("BooleanField");
        publicIdentifiers.add("BooleanFlag");
        publicIdentifiers.add("BooleanSignature");
        publicIdentifiers.add("BooleanSupplier");
        publicIdentifiers.add("BooleanTreeNodeAdapter");
        publicIdentifiers.add("BooleanType");
        publicIdentifiers.add("BooleanTypeImpl");
        publicIdentifiers.add("BooleanValue");
        publicIdentifiers.add("BooleanValueImpl");
        publicIdentifiers.add("BootLoader");
        publicIdentifiers.add("Bootstrap");
        publicIdentifiers.add("BootstrapMethod");
        publicIdentifiers.add("BootstrapMethodError");
        publicIdentifiers.add("BootstrapMethods");
        publicIdentifiers.add("BootstrapMethods_attribute");
        publicIdentifiers.add("BootstrapMethods_attribute$BootstrapMethodSpecifier");
        publicIdentifiers.add("Border");
        publicIdentifiers.add("BorderedComponent");
        publicIdentifiers.add("BorderedComponent$FocusBorder");
        publicIdentifiers.add("BorderedComponent$LabeledBorder");
        publicIdentifiers.add("BorderFactory");
        publicIdentifiers.add("BorderLayout");
        publicIdentifiers.add("BorderUIResource");
        publicIdentifiers.add("BorderUIResource$BevelBorderUIResource");
        publicIdentifiers.add("BorderUIResource$CompoundBorderUIResource");
        publicIdentifiers.add("BorderUIResource$EmptyBorderUIResource");
        publicIdentifiers.add("BorderUIResource$EtchedBorderUIResource");
        publicIdentifiers.add("BorderUIResource$LineBorderUIResource");
        publicIdentifiers.add("BorderUIResource$MatteBorderUIResource");
        publicIdentifiers.add("BorderUIResource$TitledBorderUIResource");
        publicIdentifiers.add("BottomSignature");
        publicIdentifiers.add("BoundedRangeModel");
        publicIdentifiers.add("Box");
        publicIdentifiers.add("Box$AccessibleBox");
        publicIdentifiers.add("Box$Filler");
        publicIdentifiers.add("Box$Filler$AccessibleBoxFiller");
        publicIdentifiers.add("BoxLayout");
        publicIdentifiers.add("BoxView");
        publicIdentifiers.add("BranchData");
        publicIdentifiers.add("BranchInstruction");
        publicIdentifiers.add("BreakIterator");
        publicIdentifiers.add("BreakIteratorInfo");
        publicIdentifiers.add("BreakIteratorInfoProvider");
        publicIdentifiers.add("BreakIteratorInfo_th");
        publicIdentifiers.add("BreakIteratorProvider");
        publicIdentifiers.add("BreakIteratorProviderImpl");
        publicIdentifiers.add("BreakIteratorResourceBundle");
        publicIdentifiers.add("BreakIteratorResources");
        publicIdentifiers.add("BreakIteratorResources_th");
        publicIdentifiers.add("BREAKPOINT");
        publicIdentifiers.add("BreakpointEvent");
        publicIdentifiers.add("BreakpointInfo");
        publicIdentifiers.add("BreakpointRequest");
        publicIdentifiers.add("BreakTree");
        publicIdentifiers.add("BrokenBarrierException");
        publicIdentifiers.add("BsdAARCH64JavaThreadPDAccess");
        publicIdentifiers.add("BsdAARCH64ThreadContext");
        publicIdentifiers.add("BsdAMD64JavaThreadPDAccess");
        publicIdentifiers.add("BsdAMD64ThreadContext");
        publicIdentifiers.add("BsdDebugger");
        publicIdentifiers.add("BsdDebuggerLocal");
        publicIdentifiers.add("BsdSignals");
        publicIdentifiers.add("BsdVtblAccess");
        publicIdentifiers.add("BsdX86JavaThreadPDAccess");
        publicIdentifiers.add("BsdX86ThreadContext");
        publicIdentifiers.add("BuddhistCalendar");
        publicIdentifiers.add("Buffer");
        publicIdentifiers.add("BufferAllocator");
        publicIdentifiers.add("BufferBlob");
        publicIdentifiers.add("BufferCapabilities");
        publicIdentifiers.add("BufferedBufImgOps");
        publicIdentifiers.add("BufferedContext");
        publicIdentifiers.add("BufferedContextProvider");
        publicIdentifiers.add("BufferedImage");
        publicIdentifiers.add("BufferedImageFilter");
        publicIdentifiers.add("BufferedImageOp");
        publicIdentifiers.add("BufferedInputStream");
        publicIdentifiers.add("BufferedMaskBlit");
        publicIdentifiers.add("BufferedMaskFill");
        publicIdentifiers.add("BufferedMonitoredVm");
        publicIdentifiers.add("BufferedOutputStream");
        publicIdentifiers.add("BufferedPaints");
        publicIdentifiers.add("BufferedReader");
        publicIdentifiers.add("BufferedRenderPipe");
        publicIdentifiers.add("BufferedTextPipe");
        publicIdentifiers.add("BufferedWriter");
        publicIdentifiers.add("BufferImpl");
        publicIdentifiers.add("BufferingSubscriber");
        publicIdentifiers.add("BufferOverflowException");
        publicIdentifiers.add("BufferPoolMXBean");
        publicIdentifiers.add("BufferStrategy");
        publicIdentifiers.add("BufferSupplier");
        publicIdentifiers.add("BufferUnderflowException");
        publicIdentifiers.add("BufImgSurfaceData");
        publicIdentifiers.add("BufImgSurfaceManager");
        publicIdentifiers.add("BufImgVolatileSurfaceManager");
        publicIdentifiers.add("BuilderFactory");
        publicIdentifiers.add("BuildInEditorProvider");
        publicIdentifiers.add("BuildStep");
        publicIdentifiers.add("BuiltinClassLoader");
        publicIdentifiers.add("BuiltinHelpFormatter");
        publicIdentifiers.add("BundleParams");
        publicIdentifiers.add("Bundler");
        publicIdentifiers.add("Bundlers");
        publicIdentifiers.add("Bundles");
        publicIdentifiers.add("Bundles$Strategy");
        publicIdentifiers.add("Button");
        publicIdentifiers.add("Button$AccessibleAWTButton");
        publicIdentifiers.add("ButtonGroup");
        publicIdentifiers.add("ButtonModel");
        publicIdentifiers.add("ButtonPeer");
        publicIdentifiers.add("ButtonTranslator");
        publicIdentifiers.add("ButtonUI");
        publicIdentifiers.add("ByteArrayChannel");
        publicIdentifiers.add("ByteArrayCounter");
        publicIdentifiers.add("ByteArrayImageSource");
        publicIdentifiers.add("ByteArrayInputStream");
        publicIdentifiers.add("ByteArrayLexOrder");
        publicIdentifiers.add("ByteArrayMonitor");
        publicIdentifiers.add("ByteArrayOutputStream");
        publicIdentifiers.add("ByteArrays");
        publicIdentifiers.add("ByteArrayTagOrder");
        publicIdentifiers.add("ByteBandedRaster");
        publicIdentifiers.add("ByteBuffer");
        publicIdentifiers.add("ByteBuffered");
        publicIdentifiers.add("ByteChannel");
        publicIdentifiers.add("Bytecode");
        publicIdentifiers.add("BytecodeANewArray");
        publicIdentifiers.add("BytecodeBipush");
        publicIdentifiers.add("BytecodeCheckCast");
        publicIdentifiers.add("BytecodeDescriptor");
        publicIdentifiers.add("BytecodeDisassembler");
        publicIdentifiers.add("BytecodeGetField");
        publicIdentifiers.add("BytecodeGetPut");
        publicIdentifiers.add("BytecodeGetStatic");
        publicIdentifiers.add("BytecodeGoto");
        publicIdentifiers.add("BytecodeGotoW");
        publicIdentifiers.add("BytecodeIf");
        publicIdentifiers.add("BytecodeIinc");
        publicIdentifiers.add("BytecodeInstanceOf");
        publicIdentifiers.add("BytecodeInvoke");
        publicIdentifiers.add("BytecodeJmp");
        publicIdentifiers.add("BytecodeJsr");
        publicIdentifiers.add("BytecodeJsrW");
        publicIdentifiers.add("BytecodeLoad");
        publicIdentifiers.add("BytecodeLoadConstant");
        publicIdentifiers.add("BytecodeLoadStore");
        publicIdentifiers.add("BytecodeLookupswitch");
        publicIdentifiers.add("BytecodeMultiANewArray");
        publicIdentifiers.add("BytecodeName");
        publicIdentifiers.add("BytecodeNew");
        publicIdentifiers.add("BytecodeNewArray");
        publicIdentifiers.add("BytecodePosition");
        publicIdentifiers.add("BytecodePutField");
        publicIdentifiers.add("BytecodePutStatic");
        publicIdentifiers.add("BytecodeRet");
        publicIdentifiers.add("ByteCodeRewriter");
        publicIdentifiers.add("Bytecodes");
        publicIdentifiers.add("ByteCodes");
        publicIdentifiers.add("BytecodeSipush");
        publicIdentifiers.add("BytecodeStore");
        publicIdentifiers.add("BytecodeStream");
        publicIdentifiers.add("BytecodeTableswitch");
        publicIdentifiers.add("BytecodeVisitor");
        publicIdentifiers.add("BytecodeWideable");
        publicIdentifiers.add("BytecodeWithCPIndex");
        publicIdentifiers.add("BytecodeWithKlass");
        publicIdentifiers.add("ByteComponentRaster");
        publicIdentifiers.add("ByteEditor");
        publicIdentifiers.add("ByteField");
        publicIdentifiers.add("ByteInterleavedRaster");
        publicIdentifiers.add("ByteList");
        publicIdentifiers.add("ByteListImpl");
        publicIdentifiers.add("ByteLookupTable");
        publicIdentifiers.add("BytePackedRaster");
        publicIdentifiers.add("Bytes");
        publicIdentifiers.add("ByteSignature");
        publicIdentifiers.add("ByteType");
        publicIdentifiers.add("ByteTypeImpl");
        publicIdentifiers.add("ByteValue");
        publicIdentifiers.add("ByteValueImpl");
        publicIdentifiers.add("ByteVector");
    }

    private void addPublicIdentifiersCC() {
        publicIdentifiers.add("Character");
        publicIdentifiers.add("Character.Subset");
        publicIdentifiers.add("Character.UnicodeBlock");
        publicIdentifiers.add("Character.UnicodeScript");
        publicIdentifiers.add("Class");
        publicIdentifiers.add("C14NMethodParameterSpec");
        publicIdentifiers.add("Cache");
        publicIdentifiers.add("Cache$CacheVisitor");
        publicIdentifiers.add("Cache$EqualByteArray");
        publicIdentifiers.add("Cache$Kind");
        publicIdentifiers.add("CachedPainter");
        publicIdentifiers.add("CachedRowSet");
        publicIdentifiers.add("CachedRowSetImpl");
        publicIdentifiers.add("CachedRowSetReader");
        publicIdentifiers.add("CachedRowSetWriter");
        publicIdentifiers.add("CachedXPathAPI");
        publicIdentifiers.add("CacheFSInfo");
        publicIdentifiers.add("CacheRequest");
        publicIdentifiers.add("CacheResponse");
        publicIdentifiers.add("CachingParserPool");
        publicIdentifiers.add("Calendar");
        publicIdentifiers.add("Calendar$Builder");
        publicIdentifiers.add("CalendarData");
        publicIdentifiers.add("CalendarDataProvider");
        publicIdentifiers.add("CalendarDataProviderImpl");
        publicIdentifiers.add("CalendarDataUtility");
        publicIdentifiers.add("CalendarDate");
        publicIdentifiers.add("CalendarNameProvider");
        publicIdentifiers.add("CalendarNameProviderImpl");
        publicIdentifiers.add("CalendarProvider");
        publicIdentifiers.add("CalendarProviderImpl");
        publicIdentifiers.add("CalendarSystem");
        publicIdentifiers.add("CalendarUtils");
        publicIdentifiers.add("Callable");
        publicIdentifiers.add("CallableStatement");
        publicIdentifiers.add("CallArranger");
        publicIdentifiers.add("Callback");
        publicIdentifiers.add("CallbackHandler");
        publicIdentifiers.add("CallDynamicJavaNode");
        publicIdentifiers.add("CallerSensitive");
        publicIdentifiers.add("CallerSensitiveAdapter");
        publicIdentifiers.add("CallingConvention");
        publicIdentifiers.add("CallingConvention$Type");
        publicIdentifiers.add("CallingSequence");
        publicIdentifiers.add("CallingSequenceBuilder");
        publicIdentifiers.add("CallJavaNode");
        publicIdentifiers.add("CallNode");
        publicIdentifiers.add("CallRuntimeNode");
        publicIdentifiers.add("CallSite");
        publicIdentifiers.add("CallSiteDescriptor");
        publicIdentifiers.add("CallStaticJavaNode");
        publicIdentifiers.add("CallTypeData");
        publicIdentifiers.add("CallTypeDataInterface");
        publicIdentifiers.add("CALOAD");
        publicIdentifiers.add("Cancelable");
        publicIdentifiers.add("CancelablePrintJob");
        publicIdentifiers.add("CancelAction");
        publicIdentifiers.add("CancellationException");
        publicIdentifiers.add("CancelledKeyException");
        publicIdentifiers.add("Candidate");
        publicIdentifiers.add("CannotProceedException");
        publicIdentifiers.add("CannotRedoException");
        publicIdentifiers.add("CannotUndoException");
        publicIdentifiers.add("CanonicalizationException");
        publicIdentifiers.add("CanonicalizationMethod");
        publicIdentifiers.add("Canonicalizer11_OmitComments");
        publicIdentifiers.add("Canonicalizer11_WithComments");
        publicIdentifiers.add("Canonicalizer20010315");
        publicIdentifiers.add("Canonicalizer20010315Excl");
        publicIdentifiers.add("Canonicalizer20010315ExclOmitComments");
        publicIdentifiers.add("Canonicalizer20010315ExclWithComments");
        publicIdentifiers.add("Canonicalizer20010315OmitComments");
        publicIdentifiers.add("Canonicalizer20010315WithComments");
        publicIdentifiers.add("CanonicalizerBase");
        publicIdentifiers.add("CanonicalizerPhysical");
        publicIdentifiers.add("CanonicalizerSpi");
        publicIdentifiers.add("Canvas");
        publicIdentifiers.add("Canvas$AccessibleAWTCanvas");
        publicIdentifiers.add("CanvasPeer");
        publicIdentifiers.add("Card");
        publicIdentifiers.add("CardChannel");
        publicIdentifiers.add("CardException");
        publicIdentifiers.add("CardLayout");
        publicIdentifiers.add("CardNotPresentException");
        publicIdentifiers.add("CardPermission");
        publicIdentifiers.add("CardTerminal");
        publicIdentifiers.add("CardTerminals");
        publicIdentifiers.add("Caret");
        publicIdentifiers.add("CaretEvent");
        publicIdentifiers.add("CaretListener");
        publicIdentifiers.add("CarrierThread");
        publicIdentifiers.add("CarrierThreadLocal");
        publicIdentifiers.add("CaseLabelTree");
        publicIdentifiers.add("CaseTree");
        publicIdentifiers.add("CASTORE");
        publicIdentifiers.add("Catalog");
        publicIdentifiers.add("CatalogException");
        publicIdentifiers.add("CatalogFeatures");
        publicIdentifiers.add("CatalogFeatures$Builder");
        publicIdentifiers.add("CatalogResolver");
        publicIdentifiers.add("CatchTree");
        publicIdentifiers.add("Category");
        publicIdentifiers.add("CCacheInputStream");
        publicIdentifiers.add("CCacheOutputStream");
        publicIdentifiers.add("CDATASection");
        publicIdentifiers.add("CDATASectionImpl");
        publicIdentifiers.add("CDebugger");
        publicIdentifiers.add("CDebugInfoDataBase");
        publicIdentifiers.add("CDS");
        publicIdentifiers.add("CellEditor");
        publicIdentifiers.add("CellEditorListener");
        publicIdentifiers.add("CellRendererPane");
        publicIdentifiers.add("CellRendererPane$AccessibleCellRendererPane");
        publicIdentifiers.add("CellTypeState");
        publicIdentifiers.add("CellTypeStateList");
        publicIdentifiers.add("CertException");
        publicIdentifiers.add("CertId");
        publicIdentifiers.add("Certificate");
        publicIdentifiers.add("Certificate$CertificateRep");
        publicIdentifiers.add("CertificateAlgorithmId");
        publicIdentifiers.add("CertificateEncodingException");
        publicIdentifiers.add("CertificateException");
        publicIdentifiers.add("CertificateExpiredException");
        publicIdentifiers.add("CertificateExtensions");
        publicIdentifiers.add("CertificateFactory");
        publicIdentifiers.add("CertificateFactorySpi");
        publicIdentifiers.add("CertificateId");
        publicIdentifiers.add("CertificateIssuerExtension");
        publicIdentifiers.add("CertificateNotYetValidException");
        publicIdentifiers.add("CertificateParsingException");
        publicIdentifiers.add("CertificatePoliciesExtension");
        publicIdentifiers.add("CertificatePolicyId");
        publicIdentifiers.add("CertificatePolicyMap");
        publicIdentifiers.add("CertificatePolicySet");
        publicIdentifiers.add("CertificateRevokedException");
        publicIdentifiers.add("CertificateSerialNumber");
        publicIdentifiers.add("CertificateSubjectName");
        publicIdentifiers.add("CertificateValidity");
        publicIdentifiers.add("CertificateVersion");
        publicIdentifiers.add("CertificateX509Key");
        publicIdentifiers.add("CertPath");
        publicIdentifiers.add("CertPath$CertPathRep");
        publicIdentifiers.add("CertPathBuilder");
        publicIdentifiers.add("CertPathBuilderException");
        publicIdentifiers.add("CertPathBuilderResult");
        publicIdentifiers.add("CertPathBuilderSpi");
        publicIdentifiers.add("CertPathChecker");
        publicIdentifiers.add("CertPathConstraintsParameters");
        publicIdentifiers.add("CertPathHelper");
        publicIdentifiers.add("CertPathParameters");
        publicIdentifiers.add("CertPathTrustManagerParameters");
        publicIdentifiers.add("CertPathValidator");
        publicIdentifiers.add("CertPathValidatorException");
        publicIdentifiers.add("CertPathValidatorException$Reason");
        publicIdentifiers.add("CertPathValidatorResult");
        publicIdentifiers.add("CertPathValidatorSpi");
        publicIdentifiers.add("CertSelector");
        publicIdentifiers.add("CertStore");
        publicIdentifiers.add("CertStoreException");
        publicIdentifiers.add("CertStoreParameters");
        publicIdentifiers.add("CertStoreSpi");
        publicIdentifiers.add("CFrame");
        publicIdentifiers.add("CgroupInfo");
        publicIdentifiers.add("CgroupMetrics");
        publicIdentifiers.add("CgroupSubsystem");
        publicIdentifiers.add("CgroupSubsystemController");
        publicIdentifiers.add("CgroupSubsystemFactory");
        publicIdentifiers.add("CgroupV1MemorySubSystemController");
        publicIdentifiers.add("CgroupV1Metrics");
        publicIdentifiers.add("CgroupV1MetricsImpl");
        publicIdentifiers.add("CgroupV1Subsystem");
        publicIdentifiers.add("CgroupV1SubsystemController");
        publicIdentifiers.add("CgroupV2Subsystem");
        publicIdentifiers.add("CgroupV2SubsystemController");
        publicIdentifiers.add("ChainedCallSite");
        publicIdentifiers.add("ChangedCharSetException");
        publicIdentifiers.add("ChangeEvent");
        publicIdentifiers.add("ChangeListener");
        publicIdentifiers.add("ChangesCurrentThread");
        publicIdentifiers.add("Channel");
        publicIdentifiers.add("ChannelBinding");
        publicIdentifiers.add("ChannelBindingException");
        publicIdentifiers.add("Channels$SelectableChannelCloser");
        publicIdentifiers.add("Character$Subset");
        publicIdentifiers.add("CharacterCodingException");
        publicIdentifiers.add("CharacterData");
        publicIdentifiers.add("CharacterDataImpl");
        publicIdentifiers.add("CharacterEvent");
        publicIdentifiers.add("Characteristics");
        publicIdentifiers.add("CharacterIterator");
        publicIdentifiers.add("CharacterIteratorWrapper");
        publicIdentifiers.add("CharacterRangeTable_attribute");
        publicIdentifiers.add("CharacterRangeTable_attribute$Entry");
        publicIdentifiers.add("Characters");
        publicIdentifiers.add("CharArrayReader");
        publicIdentifiers.add("CharArrayWrapper");
        publicIdentifiers.add("CharArrayWriter");
        publicIdentifiers.add("CharBuffer");
        publicIdentifiers.add("CharConversionException");
        publicIdentifiers.add("CharField");
        publicIdentifiers.add("CharKey");
        publicIdentifiers.add("CharSequence");
        publicIdentifiers.add("Charset");
        publicIdentifiers.add("CharsetDecoder");
        publicIdentifiers.add("CharsetEncoder");
        publicIdentifiers.add("CharsetMapping");
        publicIdentifiers.add("CharsetMapping$Entry");
        publicIdentifiers.add("CharsetProvider");
        publicIdentifiers.add("CharsetString");
        publicIdentifiers.add("CharSignature");
        publicIdentifiers.add("CharToGlyphMapper");
        publicIdentifiers.add("CharTreeNodeAdapter");
        publicIdentifiers.add("CharTrie");
        publicIdentifiers.add("CharType");
        publicIdentifiers.add("CharTypeImpl");
        publicIdentifiers.add("CharValue");
        publicIdentifiers.add("CharValueImpl");
        publicIdentifiers.add("Check");
        publicIdentifiers.add("Check$CheckContext");
        publicIdentifiers.add("CheckAnnotationAdapter");
        publicIdentifiers.add("Checkbox");
        publicIdentifiers.add("Checkbox$AccessibleAWTCheckbox");
        publicIdentifiers.add("CheckboxGroup");
        publicIdentifiers.add("CheckboxMenuItem");
        publicIdentifiers.add("CheckboxMenuItem$AccessibleAWTCheckboxMenuItem");
        publicIdentifiers.add("CheckboxMenuItemPeer");
        publicIdentifiers.add("CheckboxPeer");
        publicIdentifiers.add("CheckboxTranslator");
        publicIdentifiers.add("CHECKCAST");
        publicIdentifiers.add("CheckClassAdapter");
        publicIdentifiers.add("CheckedExceptionElement");
        publicIdentifiers.add("CheckedInputStream");
        publicIdentifiers.add("CheckedOutputStream");
        publicIdentifiers.add("Checker");
        publicIdentifiers.add("CheckFieldAdapter");
        publicIdentifiers.add("CheckMethodAdapter");
        publicIdentifiers.add("CheckModuleAdapter");
        publicIdentifiers.add("CheckRecordComponentAdapter");
        publicIdentifiers.add("CheckSignatureAdapter");
        publicIdentifiers.add("Checksum");
        publicIdentifiers.add("ChildIterator");
        publicIdentifiers.add("ChildNode");
        publicIdentifiers.add("ChildTestIterator");
        publicIdentifiers.add("Choice");
        publicIdentifiers.add("Choice$AccessibleAWTChoice");
        publicIdentifiers.add("ChoiceCallback");
        publicIdentifiers.add("ChoiceFormat");
        publicIdentifiers.add("ChoicePeer");
        publicIdentifiers.add("ChronoLocalDate");
        publicIdentifiers.add("ChronoLocalDateTime");
        publicIdentifiers.add("Chronology");
        publicIdentifiers.add("ChronoPeriod");
        publicIdentifiers.add("ChronoZonedDateTime");
        publicIdentifiers.add("ChunkedInputStream");
        publicIdentifiers.add("ChunkedOutputStream");
        publicIdentifiers.add("ciArrayKlass");
        publicIdentifiers.add("ciBaseObject");
        publicIdentifiers.add("ciConstant");
        publicIdentifiers.add("ciEnv");
        publicIdentifiers.add("ciField");
        publicIdentifiers.add("ciInstance");
        publicIdentifiers.add("ciInstanceKlass");
        publicIdentifiers.add("ciKlass");
        publicIdentifiers.add("ciMetadata");
        publicIdentifiers.add("ciMethod");
        publicIdentifiers.add("ciMethodData");
        publicIdentifiers.add("CIntegerField");
        publicIdentifiers.add("CIntegerType");
        publicIdentifiers.add("CIntField");
        publicIdentifiers.add("ciObjArrayKlass");
        publicIdentifiers.add("ciObject");
        publicIdentifiers.add("ciObjectFactory");
        publicIdentifiers.add("Cipher");
        publicIdentifiers.add("CipherInputStream");
        publicIdentifiers.add("CipherOutputStream");
        publicIdentifiers.add("CipherSpi");
        publicIdentifiers.add("ciSymbol");
        publicIdentifiers.add("ciType");
        publicIdentifiers.add("ciTypeArrayKlass");
        publicIdentifiers.add("CK_AES_CTR_PARAMS");
        publicIdentifiers.add("CK_ATTRIBUTE");
        publicIdentifiers.add("CK_CCM_PARAMS");
        publicIdentifiers.add("CK_C_INITIALIZE_ARGS");
        publicIdentifiers.add("CK_CREATEMUTEX");
        publicIdentifiers.add("CK_DATE");
        publicIdentifiers.add("CK_DESTROYMUTEX");
        publicIdentifiers.add("CK_ECDH1_DERIVE_PARAMS");
        publicIdentifiers.add("CK_ECDH2_DERIVE_PARAMS");
        publicIdentifiers.add("CK_GCM_PARAMS");
        publicIdentifiers.add("CK_INFO");
        publicIdentifiers.add("CK_LOCKMUTEX");
        publicIdentifiers.add("CK_MECHANISM");
        publicIdentifiers.add("CK_MECHANISM_INFO");
        publicIdentifiers.add("CK_NOTIFY");
        publicIdentifiers.add("CK_PBE_PARAMS");
        publicIdentifiers.add("CK_PKCS5_PBKD2_PARAMS");
        publicIdentifiers.add("CK_RSA_PKCS_OAEP_PARAMS");
        publicIdentifiers.add("CK_RSA_PKCS_PSS_PARAMS");
        publicIdentifiers.add("CK_SALSA20_CHACHA20_POLY1305_PARAMS");
        publicIdentifiers.add("CK_SESSION_INFO");
        publicIdentifiers.add("CK_SLOT_INFO");
        publicIdentifiers.add("CK_SSL3_KEY_MAT_OUT");
        publicIdentifiers.add("CK_SSL3_KEY_MAT_PARAMS");
        publicIdentifiers.add("CK_SSL3_MASTER_KEY_DERIVE_PARAMS");
        publicIdentifiers.add("CK_SSL3_RANDOM_DATA");
        publicIdentifiers.add("CksumType");
        publicIdentifiers.add("CK_TLS12_KEY_MAT_PARAMS");
        publicIdentifiers.add("CK_TLS12_MASTER_KEY_DERIVE_PARAMS");
        publicIdentifiers.add("CK_TLS_MAC_PARAMS");
        publicIdentifiers.add("CK_TLS_PRF_PARAMS");
        publicIdentifiers.add("CK_TOKEN_INFO");
        publicIdentifiers.add("CK_UNLOCKMUTEX");
        publicIdentifiers.add("CK_VERSION");
        publicIdentifiers.add("CK_X9_42_DH1_DERIVE_PARAMS");
        publicIdentifiers.add("CK_X9_42_DH2_DERIVE_PARAMS");
        publicIdentifiers.add("Class2HTML");
        publicIdentifiers.add("ClassBrowserPanel");
        publicIdentifiers.add("ClassBuilder");
        publicIdentifiers.add("ClassCastException");
        publicIdentifiers.add("ClassCircularityError");
        publicIdentifiers.add("ClassConstants");
        publicIdentifiers.add("ClassDesc");
        publicIdentifiers.add("ClassDump");
        publicIdentifiers.add("ClassElementValue");
        publicIdentifiers.add("ClassElementValueGen");
        publicIdentifiers.add("ClassFile");
        publicIdentifiers.add("ClassFileConstants");
        publicIdentifiers.add("ClassFileReader");
        publicIdentifiers.add("ClassFileTransformer");
        publicIdentifiers.add("ClassFilter");
        publicIdentifiers.add("ClassFinder");
        publicIdentifiers.add("ClassFinder$BadClassFile");
        publicIdentifiers.add("ClassFinder$BadEnclosingMethodAttr");
        publicIdentifiers.add("ClassFormatError");
        publicIdentifiers.add("ClassFormatException");
        publicIdentifiers.add("ClassGen");
        publicIdentifiers.add("ClassGenerator");
        publicIdentifiers.add("ClassGenException");
        publicIdentifiers.add("ClassLoader");
        publicIdentifiers.add("ClassLoaderData");
        publicIdentifiers.add("ClassLoaderDataGraph");
        publicIdentifiers.add("ClassLoaderDataGraph$ClassAndLoaderVisitor");
        publicIdentifiers.add("ClassLoaderDataGraph$ClassVisitor");
        publicIdentifiers.add("ClassLoaderReference");
        publicIdentifiers.add("ClassLoaderReferenceImpl");
        publicIdentifiers.add("ClassLoaderRepository");
        publicIdentifiers.add("ClassLoaders");
        publicIdentifiers.add("ClassLoaderStats");
        publicIdentifiers.add("ClassLoaderWithRepository");
        publicIdentifiers.add("ClassLoadingMXBean");
        publicIdentifiers.add("ClassLogger");
        publicIdentifiers.add("ClassNode");
        publicIdentifiers.add("ClassNotFoundException");
        publicIdentifiers.add("ClassNotLoadedException");
        publicIdentifiers.add("ClassNotPreparedException");
        publicIdentifiers.add("ClassObjectReference");
        publicIdentifiers.add("ClassObjectReferenceImpl");
        publicIdentifiers.add("ClassObserver");
        publicIdentifiers.add("ClassPrepareEvent");
        publicIdentifiers.add("ClassPrepareRequest");
        publicIdentifiers.add("ClassQueue");
        publicIdentifiers.add("ClassReader");
        publicIdentifiers.add("ClassReader$AttributeReader");
        publicIdentifiers.add("ClassRemapper");
        publicIdentifiers.add("ClassRepository");
        publicIdentifiers.add("ClassScope");
        publicIdentifiers.add("ClassSet");
        publicIdentifiers.add("ClassSignature");
        publicIdentifiers.add("ClassSpecializer$Factory");
        publicIdentifiers.add("ClassSpecializer$SpeciesData");
        publicIdentifiers.add("ClassStack");
        publicIdentifiers.add("ClassTranslator");
        publicIdentifiers.add("ClassTree");
        publicIdentifiers.add("ClassTree$Hierarchy");
        publicIdentifiers.add("ClassType");
        publicIdentifiers.add("ClassTypeSignature");
        publicIdentifiers.add("ClassUnloadEvent");
        publicIdentifiers.add("ClassUnloadRequest");
        publicIdentifiers.add("ClassUseMapper");
        publicIdentifiers.add("ClassUseWriter");
        publicIdentifiers.add("ClassValue");
        publicIdentifiers.add("ClassVisitor");
        publicIdentifiers.add("ClassWriter");
        publicIdentifiers.add("ClassWriter$AnnotationWriter");
        publicIdentifiers.add("ClassWriter$AttributeWriter");
        publicIdentifiers.add("ClassWriter$ClassOutputStream");
        publicIdentifiers.add("ClassWriter$ConstantPoolWriter");
        publicIdentifiers.add("ClassWriter$PoolOverflow");
        publicIdentifiers.add("ClassWriter$StackMapTableWriter");
        publicIdentifiers.add("ClassWriter$StringOverflow");
        publicIdentifiers.add("ClassWriterImpl");
        publicIdentifiers.add("CLDRBaseLocaleDataMetaInfo");
        publicIdentifiers.add("CLDRCalendarDataProviderImpl");
        publicIdentifiers.add("CLDRCalendarNameProviderImpl");
        publicIdentifiers.add("CLDRLocaleDataMetaInfo");
        publicIdentifiers.add("CLDRLocaleProviderAdapter");
        publicIdentifiers.add("CLDRTimeZoneNameProviderImpl");
        publicIdentifiers.add("Cleaner");
        publicIdentifiers.add("Cleaner$Cleanable");
        publicIdentifiers.add("CLHSDB");
        publicIdentifiers.add("ClientCodeException");
        publicIdentifiers.add("ClientCodeWrapper");
        publicIdentifiers.add("ClientCodeWrapper$DiagnosticSourceUnwrapper");
        publicIdentifiers.add("ClientCodeWrapper$Trusted");
        publicIdentifiers.add("ClientCodeWrapper$WrappedDiagnosticListener");
        publicIdentifiers.add("ClientCodeWrapper$WrappedFileObject");
        publicIdentifiers.add("ClientCodeWrapper$WrappedJavaFileManager");
        publicIdentifiers.add("ClientCodeWrapper$WrappedJavaFileObject");
        publicIdentifiers.add("ClientCodeWrapper$WrappedStandardJavaFileManager");
        publicIdentifiers.add("ClientCodeWrapper$WrappedTaskListener");
        publicIdentifiers.add("ClientCommunicatorAdmin");
        publicIdentifiers.add("ClientListenerInfo");
        publicIdentifiers.add("ClientNotifForwarder");
        publicIdentifiers.add("ClientProvider");
        publicIdentifiers.add("CLIHelp");
        publicIdentifiers.add("Clip");
        publicIdentifiers.add("Clipboard");
        publicIdentifiers.add("ClipboardOwner");
        publicIdentifiers.add("ClipboardTransferable");
        publicIdentifiers.add("Clob");
        publicIdentifiers.add("Clock");
        publicIdentifiers.add("Cloneable");
        publicIdentifiers.add("CloneNotSupportedException");
        publicIdentifiers.add("Closeable");
        publicIdentifiers.add("CloseableDisposerRecord");
        publicIdentifiers.add("ClosedByInterruptException");
        publicIdentifiers.add("ClosedChannelException");
        publicIdentifiers.add("ClosedConnectionException");
        publicIdentifiers.add("ClosedDirectoryStreamException");
        publicIdentifiers.add("ClosedException");
        publicIdentifiers.add("ClosedFileSystemException");
        publicIdentifiers.add("ClosedSelectorException");
        publicIdentifiers.add("ClosedWatchServiceException");
        publicIdentifiers.add("ClosestSymbol");
        publicIdentifiers.add("Closure");
        publicIdentifiers.add("CMAny");
        publicIdentifiers.add("CMBinOp");
        publicIdentifiers.add("CMBuilder");
        publicIdentifiers.add("CMLeaf");
        publicIdentifiers.add("CMMException");
        publicIdentifiers.add("CMMServiceProvider");
        publicIdentifiers.add("CMNode");
        publicIdentifiers.add("CMNodeFactory");
        publicIdentifiers.add("CMSManager$CMMTracer");
        publicIdentifiers.add("CMStateSet");
        publicIdentifiers.add("CMUniOp");
        publicIdentifiers.add("Code");
        publicIdentifiers.add("Code$Chain");
        publicIdentifiers.add("Code$StackMapFormat");
        publicIdentifiers.add("Code_attribute");
        publicIdentifiers.add("Code_attribute$Exception_data");
        publicIdentifiers.add("Code_attribute$InvalidIndex");
        publicIdentifiers.add("CodeBlob");
        publicIdentifiers.add("CodeCache");
        publicIdentifiers.add("CodeCacheProvider");
        publicIdentifiers.add("CodeCacheVisitor");
        publicIdentifiers.add("CodeHeap");
        publicIdentifiers.add("CodePointIterator");
        publicIdentifiers.add("CodePointMap");
        publicIdentifiers.add("CodePointMap$StringIterator");
        publicIdentifiers.add("CodePointMap$ValueFilter");
        publicIdentifiers.add("CodePointTrie");
        publicIdentifiers.add("CodePointTrie$Fast");
        publicIdentifiers.add("CodePointTrie$Small");
        publicIdentifiers.add("CoderMalfunctionError");
        publicIdentifiers.add("CoderResult");
        publicIdentifiers.add("CodeSizeEvaluator");
        publicIdentifiers.add("CodeSource");
        publicIdentifiers.add("CodeTaglet");
        publicIdentifiers.add("CodeUtil");
        publicIdentifiers.add("CodeUtil$DefaultRefMapFormatter");
        publicIdentifiers.add("CodeUtil$NumberedRefMapFormatter");
        publicIdentifiers.add("CodeUtil$RefMapFormatter");
        publicIdentifiers.add("CodeViewerPanel");
        publicIdentifiers.add("CodeWriter");
        publicIdentifiers.add("CodingErrorAction");
        publicIdentifiers.add("COFFException");
        publicIdentifiers.add("COFFFile");
        publicIdentifiers.add("COFFFileParser");
        publicIdentifiers.add("COFFHeader");
        publicIdentifiers.add("COFFLineNumber");
        publicIdentifiers.add("COFFRelocation");
        publicIdentifiers.add("COFFSymbol");
        publicIdentifiers.add("COFFSymbolConstants");
        publicIdentifiers.add("CollationData");
        publicIdentifiers.add("CollationData_ar");
        publicIdentifiers.add("CollationData_be");
        publicIdentifiers.add("CollationData_bg");
        publicIdentifiers.add("CollationData_ca");
        publicIdentifiers.add("CollationData_cs");
        publicIdentifiers.add("CollationData_da");
        publicIdentifiers.add("CollationData_el");
        publicIdentifiers.add("CollationData_es");
        publicIdentifiers.add("CollationData_et");
        publicIdentifiers.add("CollationData_fi");
        publicIdentifiers.add("CollationData_fr");
        publicIdentifiers.add("CollationData_he");
        publicIdentifiers.add("CollationData_hi");
        publicIdentifiers.add("CollationData_hr");
        publicIdentifiers.add("CollationData_hu");
        publicIdentifiers.add("CollationData_is");
        publicIdentifiers.add("CollationData_ja");
        publicIdentifiers.add("CollationData_ko");
        publicIdentifiers.add("CollationData_lt");
        publicIdentifiers.add("CollationData_lv");
        publicIdentifiers.add("CollationData_mk");
        publicIdentifiers.add("CollationData_no");
        publicIdentifiers.add("CollationData_pl");
        publicIdentifiers.add("CollationDataProvider");
        publicIdentifiers.add("CollationData_ro");
        publicIdentifiers.add("CollationData_ru");
        publicIdentifiers.add("CollationData_sk");
        publicIdentifiers.add("CollationData_sl");
        publicIdentifiers.add("CollationData_sq");
        publicIdentifiers.add("CollationData_sr");
        publicIdentifiers.add("CollationData_sr_Latn");
        publicIdentifiers.add("CollationData_sv");
        publicIdentifiers.add("CollationData_th");
        publicIdentifiers.add("CollationData_tr");
        publicIdentifiers.add("CollationData_uk");
        publicIdentifiers.add("CollationData_vi");
        publicIdentifiers.add("CollationData_zh");
        publicIdentifiers.add("CollationData_zh_HK");
        publicIdentifiers.add("CollationData_zh_TW");
        publicIdentifiers.add("CollationKey");
        publicIdentifiers.add("Collator");
        publicIdentifiers.add("CollatorFactory");
        publicIdentifiers.add("CollatorFactoryBase");
        publicIdentifiers.add("CollatorProvider");
        publicIdentifiers.add("CollatorProviderImpl");
        publicIdentifiers.add("CollatorUtilities");
        publicIdentifiers.add("CollectedHeap");
        publicIdentifiers.add("CollectedHeapName");
        publicIdentifiers.add("Collection");
        publicIdentifiers.add("CollectionCertStore");
        publicIdentifiers.add("CollectionCertStoreParameters");
        publicIdentifiers.add("Collections");
        publicIdentifiers.add("Collector");
        publicIdentifiers.add("Color");
        publicIdentifiers.add("ColorChooserComponentFactory");
        publicIdentifiers.add("ColorChooserUI");
        publicIdentifiers.add("ColorConvertOp");
        publicIdentifiers.add("ColorData");
        publicIdentifiers.add("ColorEditor");
        publicIdentifiers.add("ColorEntry");
        publicIdentifiers.add("ColorModel");
        publicIdentifiers.add("ColorPalette");
        publicIdentifiers.add("Colors");
        publicIdentifiers.add("ColorSelectionModel");
        publicIdentifiers.add("ColorSpace");
        publicIdentifiers.add("ColorTransform");
        publicIdentifiers.add("ColorType");
        publicIdentifiers.add("ColorUIResource");
        publicIdentifiers.add("ColumnFormat");
        publicIdentifiers.add("ComboBoxEditor");
        publicIdentifiers.add("ComboBoxModel");
        publicIdentifiers.add("ComboBoxUI");
        publicIdentifiers.add("ComboPopup");
        publicIdentifiers.add("COMDATSelectionTypes");
        publicIdentifiers.add("CommandLine");
        publicIdentifiers.add("CommandLine$Tokenizer");
        publicIdentifiers.add("CommandLine$UnmatchedQuote");
        publicIdentifiers.add("CommandProcessor");
        publicIdentifiers.add("CommandProcessor$BootFilter");
        publicIdentifiers.add("CommandProcessor$DebuggerInterface");
        publicIdentifiers.add("CommandProcessor$NonBootFilter");
        publicIdentifiers.add("CommandProcessorPanel");
        publicIdentifiers.add("Comment");
        publicIdentifiers.add("CommentEvent");
        publicIdentifiers.add("CommentHelper");
        publicIdentifiers.add("CommentImpl");
        publicIdentifiers.add("CommentTree");
        publicIdentifiers.add("CommentUtils");
        publicIdentifiers.add("CommentUtils$DocCommentInfo");
        publicIdentifiers.add("CommonDataSource");
        publicIdentifiers.add("CommonMenuBar");
        publicIdentifiers.add("CommonToolBar");
        publicIdentifiers.add("CommonUI");
        publicIdentifiers.add("CommunicationException");
        publicIdentifiers.add("CompactHashTable");
        publicIdentifiers.add("CompactHashTable$SymbolVisitor");
        publicIdentifiers.add("CompactibleSpace");
        publicIdentifiers.add("Comparable");
        publicIdentifiers.add("Comparator");
        publicIdentifiers.add("Comparators");
        publicIdentifiers.add("Compilable");
        publicIdentifiers.add("CompilationID_attribute");
        publicIdentifiers.add("CompilationMXBean");
        publicIdentifiers.add("CompilationRequest");
        publicIdentifiers.add("CompilationRequestResult");
        publicIdentifiers.add("CompilationUnitTree");
        publicIdentifiers.add("Compile");
        publicIdentifiers.add("CompiledCode");
        publicIdentifiers.add("CompiledICHolder");
        publicIdentifiers.add("CompiledMethod");
        publicIdentifiers.add("CompiledScript");
        publicIdentifiers.add("CompiledVFrame");
        publicIdentifiers.add("Compiler");
        publicIdentifiers.add("CompilerProperties");
        publicIdentifiers.add("CompilerProperties$Errors");
        publicIdentifiers.add("CompilerProperties$Fragments");
        publicIdentifiers.add("CompilerProperties$Notes");
        publicIdentifiers.add("CompilerProperties$Warnings");
        publicIdentifiers.add("CompilerThread");
        publicIdentifiers.add("CompilerThreadStat");
        publicIdentifiers.add("CompileStates");
        publicIdentifiers.add("CompileTask");
        publicIdentifiers.add("CompletableFuture");
        publicIdentifiers.add("CompletableFuture$AsynchronousCompletionTask");
        publicIdentifiers.add("Completer");
        publicIdentifiers.add("CompletingParsedLine");
        publicIdentifiers.add("Completion");
        publicIdentifiers.add("CompletionException");
        publicIdentifiers.add("CompletionHandler");
        publicIdentifiers.add("CompletionMatcher");
        publicIdentifiers.add("CompletionMatcherImpl");
        publicIdentifiers.add("Completions");
        publicIdentifiers.add("CompletionService");
        publicIdentifiers.add("CompletionStage");
        publicIdentifiers.add("Component");
        publicIdentifiers.add("Component$AccessibleAWTComponent");
        publicIdentifiers.add("Component$AccessibleAWTComponent$AccessibleAWTComponentHandler");
        publicIdentifiers.add("Component$AccessibleAWTComponent$AccessibleAWTFocusHandler");
        publicIdentifiers.add("Component$BltBufferStrategy");
        publicIdentifiers.add("Component$FlipBufferStrategy");
        publicIdentifiers.add("ComponentAdapter");
        publicIdentifiers.add("ComponentBeanInfo");
        publicIdentifiers.add("ComponentColorModel");
        publicIdentifiers.add("ComponentContext");
        publicIdentifiers.add("ComponentDirContext");
        publicIdentifiers.add("ComponentEvent");
        publicIdentifiers.add("ComponentFactory");
        publicIdentifiers.add("ComponentInputMap");
        publicIdentifiers.add("ComponentInputMapUIResource");
        publicIdentifiers.add("ComponentListener");
        publicIdentifiers.add("ComponentPeer");
        publicIdentifiers.add("ComponentSampleModel");
        publicIdentifiers.add("ComponentUI");
        publicIdentifiers.add("ComponentView");
        publicIdentifiers.add("Composite");
        publicIdentifiers.add("CompositeContext");
        publicIdentifiers.add("CompositeData");
        publicIdentifiers.add("CompositeDataInvocationHandler");
        publicIdentifiers.add("CompositeDataSupport");
        publicIdentifiers.add("CompositeDataView");
        publicIdentifiers.add("CompositeFontDescriptor");
        publicIdentifiers.add("CompositeGlyphMapper");
        publicIdentifiers.add("CompositeGuardingDynamicLinker");
        publicIdentifiers.add("CompositeName");
        publicIdentifiers.add("CompositePipe");
        publicIdentifiers.add("CompositeType");
        publicIdentifiers.add("CompositeTypeBasedGuardingDynamicLinker");
        publicIdentifiers.add("CompositeView");
        publicIdentifiers.add("CompoundAssignmentTree");
        publicIdentifiers.add("CompoundBorder");
        publicIdentifiers.add("CompoundControl");
        publicIdentifiers.add("CompoundControl$Type");
        publicIdentifiers.add("CompoundEdit");
        publicIdentifiers.add("CompoundInstruction");
        publicIdentifiers.add("CompoundName");
        publicIdentifiers.add("CompoundType");
        publicIdentifiers.add("CompoundTypeKind");
        publicIdentifiers.add("CompressedKlassPointers");
        publicIdentifiers.add("CompressedLineNumberReadStream");
        publicIdentifiers.add("CompressedOops");
        publicIdentifiers.add("CompressedReadStream");
        publicIdentifiers.add("CompressedStream");
        publicIdentifiers.add("CompressedWriteStream");
        publicIdentifiers.add("CompressIndexes");
        publicIdentifiers.add("Compression");
        publicIdentifiers.add("ConcreteMethodImpl");
        publicIdentifiers.add("ConcurrentHashMap");
        publicIdentifiers.add("ConcurrentLinkedDeque");
        publicIdentifiers.add("ConcurrentLinkedQueue");
        publicIdentifiers.add("ConcurrentLocksPrinter");
        publicIdentifiers.add("ConcurrentMap");
        publicIdentifiers.add("ConcurrentModificationException");
        publicIdentifiers.add("ConcurrentNavigableMap");
        publicIdentifiers.add("ConcurrentSkipListMap");
        publicIdentifiers.add("ConcurrentSkipListSet");
        publicIdentifiers.add("Condition");
        publicIdentifiers.add("ConditionalExpressionTree");
        publicIdentifiers.add("Config");
        publicIdentifiers.add("ConfigException");
        publicIdentifiers.add("ConfigFile");
        publicIdentifiers.add("Configuration");
        publicIdentifiers.add("Configuration$Parameters");
        publicIdentifiers.add("ConfigurationException");
        publicIdentifiers.add("ConfigurationSpi");
        publicIdentifiers.add("ConfirmationCallback");
        publicIdentifiers.add("ConnectDialog");
        publicIdentifiers.add("ConnectException");
        publicIdentifiers.add("ConnectIOException");
        publicIdentifiers.add("Connection");
        publicIdentifiers.add("ConnectionBuilder");
        publicIdentifiers.add("ConnectionEvent");
        publicIdentifiers.add("ConnectionEventListener");
        publicIdentifiers.add("ConnectionPendingException");
        publicIdentifiers.add("ConnectionPoolDataSource");
        publicIdentifiers.add("ConnectionResetException");
        publicIdentifiers.add("Connector");
        publicIdentifiers.add("Connector$Argument");
        publicIdentifiers.add("Connector$BooleanArgument");
        publicIdentifiers.add("Connector$IntegerArgument");
        publicIdentifiers.add("Connector$SelectedArgument");
        publicIdentifiers.add("Connector$StringArgument");
        publicIdentifiers.add("ConnectorAddressLink");
        publicIdentifiers.add("ConnectorBootstrap$DefaultValues");
        publicIdentifiers.add("ConnectorBootstrap$PropertyNames");
        publicIdentifiers.add("Console");
        publicIdentifiers.add("ConsoleCallbackHandler");
        publicIdentifiers.add("ConsoleHandler");
        publicIdentifiers.add("ConsoleIOContext$Fix");
        publicIdentifiers.add("ConsoleIOContext$FixComputer");
        publicIdentifiers.add("ConsoleIOContext$FixResult");
        publicIdentifiers.add("ConsoleIOContextTestSupport");
        publicIdentifiers.add("Constable");
        publicIdentifiers.add("Constant");
        publicIdentifiers.add("ConstantCallSite");
        publicIdentifiers.add("ConstantCaseLabelTree");
        publicIdentifiers.add("ConstantCP");
        publicIdentifiers.add("ConstantDesc");
        publicIdentifiers.add("ConstantDoubleValue");
        publicIdentifiers.add("ConstantIntValue");
        publicIdentifiers.add("ConstantLongValue");
        publicIdentifiers.add("ConstantObject");
        publicIdentifiers.add("ConstantOopReadValue");
        publicIdentifiers.add("ConstantPool");
        publicIdentifiers.add("ConstantPool$BootstrapMethodInvocation");
        publicIdentifiers.add("ConstantPool$CONSTANT_Class_info");
        publicIdentifiers.add("ConstantPool$CONSTANT_Double_info");
        publicIdentifiers.add("ConstantPool$CONSTANT_Dynamic_info");
        publicIdentifiers.add("ConstantPool$CONSTANT_Fieldref_info");
        publicIdentifiers.add("ConstantPool$CONSTANT_Float_info");
        publicIdentifiers.add("ConstantPool$CONSTANT_Integer_info");
        publicIdentifiers.add("ConstantPool$CONSTANT_InterfaceMethodref_info");
        publicIdentifiers.add("ConstantPool$CONSTANT_InvokeDynamic_info");
        publicIdentifiers.add("ConstantPool$CONSTANT_Long_info");
        publicIdentifiers.add("ConstantPool$CONSTANT_MethodHandle_info");
        publicIdentifiers.add("ConstantPool$CONSTANT_Methodref_info");
        publicIdentifiers.add("ConstantPool$CONSTANT_MethodType_info");
        publicIdentifiers.add("ConstantPool$CONSTANT_Module_info");
        publicIdentifiers.add("ConstantPool$CONSTANT_NameAndType_info");
        publicIdentifiers.add("ConstantPool$CONSTANT_Package_info");
        publicIdentifiers.add("ConstantPool$CONSTANT_String_info");
        publicIdentifiers.add("ConstantPool$CONSTANT_Utf8_info");
        publicIdentifiers.add("ConstantPool$CPInfo");
        publicIdentifiers.add("ConstantPool$CPRefInfo");
        publicIdentifiers.add("ConstantPool$EntryNotFound");
        publicIdentifiers.add("ConstantPool$InvalidEntry");
        publicIdentifiers.add("ConstantPool$InvalidIndex");
        publicIdentifiers.add("ConstantPool$UnexpectedEntry");
        publicIdentifiers.add("ConstantPool$Visitor");
        publicIdentifiers.add("ConstantPoolCache");
        publicIdentifiers.add("ConstantPoolCacheEntry");
        publicIdentifiers.add("ConstantPoolException");
        publicIdentifiers.add("ConstantPoolGen");
        publicIdentifiers.add("ConstantPushInstruction");
        publicIdentifiers.add("ConstantReflectionProvider");
        publicIdentifiers.add("Constants");
        publicIdentifiers.add("ConstantsSummaryBuilder");
        publicIdentifiers.add("ConstantsSummaryWriter");
        publicIdentifiers.add("ConstantsSummaryWriterImpl");
        publicIdentifiers.add("ConstantTag");
        publicIdentifiers.add("ConstantValue_attribute");
        publicIdentifiers.add("ConstantWriter");
        publicIdentifiers.add("ConstIterator");
        publicIdentifiers.add("ConstMethod");
        publicIdentifiers.add("ConstrainableGraphics");
        publicIdentifiers.add("ConstraintsParameters");
        publicIdentifiers.add("ConstructionException");
        publicIdentifiers.add("ConstructorAccessor");
        publicIdentifiers.add("ConstructorBuilder");
        publicIdentifiers.add("ConstructorParameters");
        publicIdentifiers.add("ConstructorProperties");
        publicIdentifiers.add("ConstructorRepository");
        publicIdentifiers.add("ConstructorScope");
        publicIdentifiers.add("ConstructorWriter");
        publicIdentifiers.add("ConstructorWriterImpl");
        publicIdentifiers.add("Consumer");
        publicIdentifiers.add("Container");
        publicIdentifiers.add("Container$AccessibleAWTContainer");
        publicIdentifiers.add("Container$AccessibleAWTContainer$AccessibleContainerHandler");
        publicIdentifiers.add("ContainerAdapter");
        publicIdentifiers.add("ContainerCPUThrottlingEvent");
        publicIdentifiers.add("ContainerCPUUsageEvent");
        publicIdentifiers.add("ContainerEvent");
        publicIdentifiers.add("ContainerIOUsageEvent");
        publicIdentifiers.add("ContainerListener");
        publicIdentifiers.add("ContainerOrderFocusTraversalPolicy");
        publicIdentifiers.add("ContainerPeer");
        publicIdentifiers.add("ContainmentFilter");
        publicIdentifiers.add("Contended");
        publicIdentifiers.add("Content");
        publicIdentifiers.add("ContentBuilder");
        publicIdentifiers.add("ContentHandler");
        publicIdentifiers.add("ContentHandlerFactory");
        publicIdentifiers.add("ContentInfo");
        publicIdentifiers.add("ContentModelValidator");
        publicIdentifiers.add("Contents");
        publicIdentifiers.add("ContentSigner");
        publicIdentifiers.add("ContentSignerParameters");
        publicIdentifiers.add("ContentType");
        publicIdentifiers.add("Context");
        publicIdentifiers.add("Context$Factory");
        publicIdentifiers.add("Context$Key");
        publicIdentifiers.add("ContextCapabilities");
        publicIdentifiers.add("ContextEnumerator");
        publicIdentifiers.add("ContextMatchStepPattern");
        publicIdentifiers.add("ContextNodeList");
        publicIdentifiers.add("ContextNotEmptyException");
        publicIdentifiers.add("ContextualRenderedImageFactory");
        publicIdentifiers.add("ContiguousSpace");
        publicIdentifiers.add("Continuation");
        publicIdentifiers.add("ContinuationFrame");
        publicIdentifiers.add("ContinuationScope");
        publicIdentifiers.add("ContinuationSupport");
        publicIdentifiers.add("ContinueTree");
        publicIdentifiers.add("Control");
        publicIdentifiers.add("Control$Type");
        publicIdentifiers.add("ControlFactory");
        publicIdentifiers.add("ControllerEventListener");
        publicIdentifiers.add("ConversionComparator");
        publicIdentifiers.add("ConversionInstruction");
        publicIdentifiers.add("Convert");
        publicIdentifiers.add("ConvolveOp");
        publicIdentifiers.add("CookieExtension");
        publicIdentifiers.add("CookieHandler");
        publicIdentifiers.add("CookieManager");
        publicIdentifiers.add("CookiePolicy");
        publicIdentifiers.add("CookieStore");
        publicIdentifiers.add("CopyOnWriteArrayList");
        publicIdentifiers.add("CopyOnWriteArraySet");
        publicIdentifiers.add("CopyOption");
        publicIdentifiers.add("CoreDocumentImpl");
        publicIdentifiers.add("CoreDOMImplementationImpl");
        publicIdentifiers.add("CoreReflectionFactory");
        publicIdentifiers.add("CoroutineManager");
        publicIdentifiers.add("CoroutineParser");
        publicIdentifiers.add("CountDownLatch");
        publicIdentifiers.add("CountedCompleter");
        publicIdentifiers.add("CountedTimerTask");
        publicIdentifiers.add("CountedTimerTaskUtils");
        publicIdentifiers.add("Counter");
        publicIdentifiers.add("CounterData");
        publicIdentifiers.add("CounterMonitor");
        publicIdentifiers.add("CounterMonitorMBean");
        publicIdentifiers.add("CountingPrintable");
        publicIdentifiers.add("CPInstruction");
        publicIdentifiers.add("CPPExpressions");
        publicIdentifiers.add("CPPExpressions$CastExpr");
        publicIdentifiers.add("CPPExpressions$StaticFieldExpr");
        publicIdentifiers.add("CPUFeatureName");
        publicIdentifiers.add("CRC32");
        publicIdentifiers.add("Crc32CksumType");
        publicIdentifiers.add("CreatedFontTracker");
        publicIdentifiers.add("CreateMBeanDialog");
        publicIdentifiers.add("CredentialException");
        publicIdentifiers.add("CredentialExpiredException");
        publicIdentifiers.add("CredentialNotFoundException");
        publicIdentifiers.add("Credentials");
        publicIdentifiers.add("CredentialsCache");
        publicIdentifiers.add("CredentialsCache$ConfigEntry");
        publicIdentifiers.add("CredentialsUtil");
        publicIdentifiers.add("CRL");
        publicIdentifiers.add("CRLDistributionPointsExtension");
        publicIdentifiers.add("CRLException");
        publicIdentifiers.add("CRLExtensions");
        publicIdentifiers.add("CRLNumberExtension");
        publicIdentifiers.add("CRLReasonCodeExtension");
        publicIdentifiers.add("CRLSelector");
        publicIdentifiers.add("CropImageFilter");
        publicIdentifiers.add("Crossings");
        publicIdentifiers.add("CRTable");
        publicIdentifiers.add("CRTFlags");
        publicIdentifiers.add("CSS");
        publicIdentifiers.add("CSS2Properties");
        publicIdentifiers.add("CSSCharsetRule");
        publicIdentifiers.add("CSSFontFaceRule");
        publicIdentifiers.add("CSSImportRule");
        publicIdentifiers.add("CSSMediaRule");
        publicIdentifiers.add("CSSPageRule");
        publicIdentifiers.add("CSSPrimitiveValue");
        publicIdentifiers.add("CSSRule");
        publicIdentifiers.add("CSSRuleList");
        publicIdentifiers.add("CSSStyleDeclaration");
        publicIdentifiers.add("CSSStyleRule");
        publicIdentifiers.add("CSSStyleSheet");
        publicIdentifiers.add("CSSUnknownRule");
        publicIdentifiers.add("CSSValue");
        publicIdentifiers.add("CSSValueList");
        publicIdentifiers.add("CStringTreeNodeAdapter");
        publicIdentifiers.add("CStringUtilities");
        publicIdentifiers.add("CSV");
        publicIdentifiers.add("CSVParseException");
        publicIdentifiers.add("CtrDrbg");
        publicIdentifiers.add("CTypeTreeNodeAdapter");
        publicIdentifiers.add("CubicCurve2D");
        publicIdentifiers.add("CubicCurve2D$Double");
        publicIdentifiers.add("CubicCurve2D$Float");
        publicIdentifiers.add("CUPSPrinter");
        publicIdentifiers.add("CurrencyNameProvider");
        publicIdentifiers.add("CurrencyNameProviderImpl");
        publicIdentifiers.add("CurrencyNames");
        publicIdentifiers.add("CurrencyNames_af");
        publicIdentifiers.add("CurrencyNames_af_NA");
        publicIdentifiers.add("CurrencyNames_agq");
        publicIdentifiers.add("CurrencyNames_ak");
        publicIdentifiers.add("CurrencyNames_am");
        publicIdentifiers.add("CurrencyNames_ann");
        publicIdentifiers.add("CurrencyNames_ar");
        publicIdentifiers.add("CurrencyNames_ar_DJ");
        publicIdentifiers.add("CurrencyNames_ar_ER");
        publicIdentifiers.add("CurrencyNames_ar_KM");
        publicIdentifiers.add("CurrencyNames_ar_LB");
        publicIdentifiers.add("CurrencyNames_ar_SO");
        publicIdentifiers.add("CurrencyNames_ar_SS");
        publicIdentifiers.add("CurrencyNames_as");
        publicIdentifiers.add("CurrencyNames_asa");
        publicIdentifiers.add("CurrencyNames_ast");
        publicIdentifiers.add("CurrencyNames_az");
        publicIdentifiers.add("CurrencyNames_az_Cyrl");
        publicIdentifiers.add("CurrencyNames_bas");
        publicIdentifiers.add("CurrencyNames_be");
        publicIdentifiers.add("CurrencyNames_bem");
        publicIdentifiers.add("CurrencyNames_bez");
        publicIdentifiers.add("CurrencyNames_bg");
        publicIdentifiers.add("CurrencyNames_bm");
        publicIdentifiers.add("CurrencyNames_bn");
        publicIdentifiers.add("CurrencyNames_bn_IN");
        publicIdentifiers.add("CurrencyNames_bo");
        publicIdentifiers.add("CurrencyNames_bo_IN");
        publicIdentifiers.add("CurrencyNames_br");
        publicIdentifiers.add("CurrencyNames_brx");
        publicIdentifiers.add("CurrencyNames_bs");
        publicIdentifiers.add("CurrencyNames_bs_Cyrl");
        publicIdentifiers.add("CurrencyNames_ca");
        publicIdentifiers.add("CurrencyNames_ca_FR");
        publicIdentifiers.add("CurrencyNames_ccp");
        publicIdentifiers.add("CurrencyNames_ce");
        publicIdentifiers.add("CurrencyNames_ceb");
        publicIdentifiers.add("CurrencyNames_cgg");
        publicIdentifiers.add("CurrencyNames_chr");
        publicIdentifiers.add("CurrencyNames_ckb");
        publicIdentifiers.add("CurrencyNames_cs");
        publicIdentifiers.add("CurrencyNames_cv");
        publicIdentifiers.add("CurrencyNames_cy");
        publicIdentifiers.add("CurrencyNames_da");
        publicIdentifiers.add("CurrencyNames_dav");
        publicIdentifiers.add("CurrencyNames_de");
        publicIdentifiers.add("CurrencyNames_de_CH");
        publicIdentifiers.add("CurrencyNames_de_LI");
        publicIdentifiers.add("CurrencyNames_de_LU");
        publicIdentifiers.add("CurrencyNames_dje");
        publicIdentifiers.add("CurrencyNames_doi");
        publicIdentifiers.add("CurrencyNames_dsb");
        publicIdentifiers.add("CurrencyNames_dyo");
        publicIdentifiers.add("CurrencyNames_dz");
        publicIdentifiers.add("CurrencyNames_ebu");
        publicIdentifiers.add("CurrencyNames_ee");
        publicIdentifiers.add("CurrencyNames_el");
        publicIdentifiers.add("CurrencyNames_en");
        publicIdentifiers.add("CurrencyNames_en_001");
        publicIdentifiers.add("CurrencyNames_en_AE");
        publicIdentifiers.add("CurrencyNames_en_AG");
        publicIdentifiers.add("CurrencyNames_en_AI");
        publicIdentifiers.add("CurrencyNames_en_AU");
        publicIdentifiers.add("CurrencyNames_en_BB");
        publicIdentifiers.add("CurrencyNames_en_BI");
        publicIdentifiers.add("CurrencyNames_en_BM");
        publicIdentifiers.add("CurrencyNames_en_BS");
        publicIdentifiers.add("CurrencyNames_en_BW");
        publicIdentifiers.add("CurrencyNames_en_BZ");
        publicIdentifiers.add("CurrencyNames_en_CA");
        publicIdentifiers.add("CurrencyNames_en_CC");
        publicIdentifiers.add("CurrencyNames_en_CK");
        publicIdentifiers.add("CurrencyNames_en_CX");
        publicIdentifiers.add("CurrencyNames_en_DK");
        publicIdentifiers.add("CurrencyNames_en_DM");
        publicIdentifiers.add("CurrencyNames_en_ER");
        publicIdentifiers.add("CurrencyNames_en_FJ");
        publicIdentifiers.add("CurrencyNames_en_FK");
        publicIdentifiers.add("CurrencyNames_en_GD");
        publicIdentifiers.add("CurrencyNames_en_GG");
        publicIdentifiers.add("CurrencyNames_en_GH");
        publicIdentifiers.add("CurrencyNames_en_GI");
        publicIdentifiers.add("CurrencyNames_en_GM");
        publicIdentifiers.add("CurrencyNames_en_GY");
        publicIdentifiers.add("CurrencyNames_en_IM");
        publicIdentifiers.add("CurrencyNames_en_IN");
        publicIdentifiers.add("CurrencyNames_en_JE");
        publicIdentifiers.add("CurrencyNames_en_JM");
        publicIdentifiers.add("CurrencyNames_en_KE");
        publicIdentifiers.add("CurrencyNames_en_KI");
        publicIdentifiers.add("CurrencyNames_en_KN");
        publicIdentifiers.add("CurrencyNames_en_KY");
        publicIdentifiers.add("CurrencyNames_en_LC");
        publicIdentifiers.add("CurrencyNames_en_LR");
        publicIdentifiers.add("CurrencyNames_en_LS");
        publicIdentifiers.add("CurrencyNames_en_MG");
        publicIdentifiers.add("CurrencyNames_en_MO");
        publicIdentifiers.add("CurrencyNames_en_MS");
        publicIdentifiers.add("CurrencyNames_en_MT");
        publicIdentifiers.add("CurrencyNames_en_MU");
        publicIdentifiers.add("CurrencyNames_en_MV");
        publicIdentifiers.add("CurrencyNames_en_MW");
        publicIdentifiers.add("CurrencyNames_en_MY");
        publicIdentifiers.add("CurrencyNames_en_NA");
        publicIdentifiers.add("CurrencyNames_en_NF");
        publicIdentifiers.add("CurrencyNames_en_NG");
        publicIdentifiers.add("CurrencyNames_en_NR");
        publicIdentifiers.add("CurrencyNames_en_NU");
        publicIdentifiers.add("CurrencyNames_en_NZ");
        publicIdentifiers.add("CurrencyNames_en_PG");
        publicIdentifiers.add("CurrencyNames_en_PK");
        publicIdentifiers.add("CurrencyNames_en_PN");
        publicIdentifiers.add("CurrencyNames_en_RW");
        publicIdentifiers.add("CurrencyNames_en_SB");
        publicIdentifiers.add("CurrencyNames_en_SC");
        publicIdentifiers.add("CurrencyNames_en_SE");
        publicIdentifiers.add("CurrencyNames_en_SG");
        publicIdentifiers.add("CurrencyNames_en_SH");
        publicIdentifiers.add("CurrencyNames_en_SL");
        publicIdentifiers.add("CurrencyNames_en_SS");
        publicIdentifiers.add("CurrencyNames_en_SX");
        publicIdentifiers.add("CurrencyNames_en_SZ");
        publicIdentifiers.add("CurrencyNames_en_TK");
        publicIdentifiers.add("CurrencyNames_en_TO");
        publicIdentifiers.add("CurrencyNames_en_TT");
        publicIdentifiers.add("CurrencyNames_en_TV");
        publicIdentifiers.add("CurrencyNames_en_TZ");
        publicIdentifiers.add("CurrencyNames_en_UG");
        publicIdentifiers.add("CurrencyNames_en_VC");
        publicIdentifiers.add("CurrencyNames_en_VU");
        publicIdentifiers.add("CurrencyNames_en_WS");
        publicIdentifiers.add("CurrencyNames_en_ZA");
        publicIdentifiers.add("CurrencyNames_en_ZM");
        publicIdentifiers.add("CurrencyNames_es");
        publicIdentifiers.add("CurrencyNames_es_419");
        publicIdentifiers.add("CurrencyNames_es_AR");
        publicIdentifiers.add("CurrencyNames_es_BO");
        publicIdentifiers.add("CurrencyNames_es_BR");
        publicIdentifiers.add("CurrencyNames_es_BZ");
        publicIdentifiers.add("CurrencyNames_es_CL");
        publicIdentifiers.add("CurrencyNames_es_CO");
        publicIdentifiers.add("CurrencyNames_es_CR");
        publicIdentifiers.add("CurrencyNames_es_CU");
        publicIdentifiers.add("CurrencyNames_es_DO");
        publicIdentifiers.add("CurrencyNames_es_EC");
        publicIdentifiers.add("CurrencyNames_es_GQ");
        publicIdentifiers.add("CurrencyNames_es_GT");
        publicIdentifiers.add("CurrencyNames_es_HN");
        publicIdentifiers.add("CurrencyNames_es_MX");
        publicIdentifiers.add("CurrencyNames_es_NI");
        publicIdentifiers.add("CurrencyNames_es_PA");
        publicIdentifiers.add("CurrencyNames_es_PE");
        publicIdentifiers.add("CurrencyNames_es_PH");
        publicIdentifiers.add("CurrencyNames_es_PR");
        publicIdentifiers.add("CurrencyNames_es_PY");
        publicIdentifiers.add("CurrencyNames_es_SV");
        publicIdentifiers.add("CurrencyNames_es_US");
        publicIdentifiers.add("CurrencyNames_es_UY");
        publicIdentifiers.add("CurrencyNames_es_VE");
        publicIdentifiers.add("CurrencyNames_et");
        publicIdentifiers.add("CurrencyNames_eu");
        publicIdentifiers.add("CurrencyNames_ewo");
        publicIdentifiers.add("CurrencyNames_fa");
        publicIdentifiers.add("CurrencyNames_fa_AF");
        publicIdentifiers.add("CurrencyNames_ff");
        publicIdentifiers.add("CurrencyNames_ff_Adlm");
        publicIdentifiers.add("CurrencyNames_ff_Adlm_BF");
        publicIdentifiers.add("CurrencyNames_ff_Adlm_CM");
        publicIdentifiers.add("CurrencyNames_ff_Adlm_GH");
        publicIdentifiers.add("CurrencyNames_ff_Adlm_GM");
        publicIdentifiers.add("CurrencyNames_ff_Adlm_GW");
        publicIdentifiers.add("CurrencyNames_ff_Adlm_LR");
        publicIdentifiers.add("CurrencyNames_ff_Adlm_MR");
        publicIdentifiers.add("CurrencyNames_ff_Adlm_NE");
        publicIdentifiers.add("CurrencyNames_ff_Adlm_NG");
        publicIdentifiers.add("CurrencyNames_ff_Adlm_SL");
        publicIdentifiers.add("CurrencyNames_ff_Adlm_SN");
        publicIdentifiers.add("CurrencyNames_ff_Latn_GH");
        publicIdentifiers.add("CurrencyNames_ff_Latn_GM");
        publicIdentifiers.add("CurrencyNames_ff_Latn_GN");
        publicIdentifiers.add("CurrencyNames_ff_Latn_LR");
        publicIdentifiers.add("CurrencyNames_ff_Latn_MR");
        publicIdentifiers.add("CurrencyNames_ff_Latn_NG");
        publicIdentifiers.add("CurrencyNames_ff_Latn_SL");
        publicIdentifiers.add("CurrencyNames_fi");
        publicIdentifiers.add("CurrencyNames_fil");
        publicIdentifiers.add("CurrencyNames_fo");
        publicIdentifiers.add("CurrencyNames_fo_DK");
        publicIdentifiers.add("CurrencyNames_fr");
        publicIdentifiers.add("CurrencyNames_fr_BI");
        publicIdentifiers.add("CurrencyNames_fr_CA");
        publicIdentifiers.add("CurrencyNames_fr_CD");
        publicIdentifiers.add("CurrencyNames_fr_DJ");
        publicIdentifiers.add("CurrencyNames_fr_DZ");
        publicIdentifiers.add("CurrencyNames_fr_GN");
        publicIdentifiers.add("CurrencyNames_fr_HT");
        publicIdentifiers.add("CurrencyNames_fr_KM");
        publicIdentifiers.add("CurrencyNames_fr_LU");
        publicIdentifiers.add("CurrencyNames_fr_MG");
        publicIdentifiers.add("CurrencyNames_fr_MR");
        publicIdentifiers.add("CurrencyNames_fr_MU");
        publicIdentifiers.add("CurrencyNames_fr_RW");
        publicIdentifiers.add("CurrencyNames_fr_SC");
        publicIdentifiers.add("CurrencyNames_fr_SY");
        publicIdentifiers.add("CurrencyNames_fr_TN");
        publicIdentifiers.add("CurrencyNames_fr_VU");
        publicIdentifiers.add("CurrencyNames_fur");
        publicIdentifiers.add("CurrencyNames_fy");
        publicIdentifiers.add("CurrencyNames_ga");
        publicIdentifiers.add("CurrencyNames_gd");
        publicIdentifiers.add("CurrencyNames_gl");
        publicIdentifiers.add("CurrencyNames_gsw");
        publicIdentifiers.add("CurrencyNames_gu");
        publicIdentifiers.add("CurrencyNames_guz");
        publicIdentifiers.add("CurrencyNames_ha");
        publicIdentifiers.add("CurrencyNames_ha_GH");
        publicIdentifiers.add("CurrencyNames_haw");
        publicIdentifiers.add("CurrencyNames_he");
        publicIdentifiers.add("CurrencyNames_hi");
        publicIdentifiers.add("CurrencyNames_hi_Latn");
        publicIdentifiers.add("CurrencyNames_hr");
        publicIdentifiers.add("CurrencyNames_hr_BA");
        publicIdentifiers.add("CurrencyNames_hsb");
        publicIdentifiers.add("CurrencyNames_hu");
        publicIdentifiers.add("CurrencyNames_hy");
        publicIdentifiers.add("CurrencyNames_ia");
        publicIdentifiers.add("CurrencyNames_id");
        publicIdentifiers.add("CurrencyNames_ig");
        publicIdentifiers.add("CurrencyNames_ii");
        publicIdentifiers.add("CurrencyNames_is");
        publicIdentifiers.add("CurrencyNames_it");
        publicIdentifiers.add("CurrencyNames_ja");
        publicIdentifiers.add("CurrencyNames_jgo");
        publicIdentifiers.add("CurrencyNames_jmc");
        publicIdentifiers.add("CurrencyNames_jv");
        publicIdentifiers.add("CurrencyNames_ka");
        publicIdentifiers.add("CurrencyNames_kab");
        publicIdentifiers.add("CurrencyNames_kam");
        publicIdentifiers.add("CurrencyNames_kde");
        publicIdentifiers.add("CurrencyNames_kea");
        publicIdentifiers.add("CurrencyNames_kgp");
        publicIdentifiers.add("CurrencyNames_khq");
        publicIdentifiers.add("CurrencyNames_ki");
        publicIdentifiers.add("CurrencyNames_kk");
        publicIdentifiers.add("CurrencyNames_kkj");
        publicIdentifiers.add("CurrencyNames_kl");
        publicIdentifiers.add("CurrencyNames_kln");
        publicIdentifiers.add("CurrencyNames_km");
        publicIdentifiers.add("CurrencyNames_kn");
        publicIdentifiers.add("CurrencyNames_ko");
        publicIdentifiers.add("CurrencyNames_kok");
        publicIdentifiers.add("CurrencyNames_ks");
        publicIdentifiers.add("CurrencyNames_ksb");
        publicIdentifiers.add("CurrencyNames_ks_Deva");
        publicIdentifiers.add("CurrencyNames_ksf");
        publicIdentifiers.add("CurrencyNames_ksh");
        publicIdentifiers.add("CurrencyNames_ku");
        publicIdentifiers.add("CurrencyNames_ky");
        publicIdentifiers.add("CurrencyNames_lag");
        publicIdentifiers.add("CurrencyNames_lb");
        publicIdentifiers.add("CurrencyNames_lg");
        publicIdentifiers.add("CurrencyNames_lkt");
        publicIdentifiers.add("CurrencyNames_ln");
        publicIdentifiers.add("CurrencyNames_ln_AO");
        publicIdentifiers.add("CurrencyNames_lo");
        publicIdentifiers.add("CurrencyNames_lrc");
        publicIdentifiers.add("CurrencyNames_lt");
        publicIdentifiers.add("CurrencyNames_lu");
        publicIdentifiers.add("CurrencyNames_luo");
        publicIdentifiers.add("CurrencyNames_luy");
        publicIdentifiers.add("CurrencyNames_lv");
        publicIdentifiers.add("CurrencyNames_mai");
        publicIdentifiers.add("CurrencyNames_mas");
        publicIdentifiers.add("CurrencyNames_mas_TZ");
        publicIdentifiers.add("CurrencyNames_mdf");
        publicIdentifiers.add("CurrencyNames_mer");
        publicIdentifiers.add("CurrencyNames_mfe");
        publicIdentifiers.add("CurrencyNames_mg");
        publicIdentifiers.add("CurrencyNames_mgh");
        publicIdentifiers.add("CurrencyNames_mgo");
        publicIdentifiers.add("CurrencyNames_mi");
        publicIdentifiers.add("CurrencyNames_mk");
        publicIdentifiers.add("CurrencyNames_ml");
        publicIdentifiers.add("CurrencyNames_mn");
        publicIdentifiers.add("CurrencyNames_mni");
        publicIdentifiers.add("CurrencyNames_mr");
        publicIdentifiers.add("CurrencyNames_ms");
        publicIdentifiers.add("CurrencyNames_ms_BN");
        publicIdentifiers.add("CurrencyNames_ms_ID");
        publicIdentifiers.add("CurrencyNames_ms_SG");
        publicIdentifiers.add("CurrencyNames_mt");
        publicIdentifiers.add("CurrencyNames_mua");
        publicIdentifiers.add("CurrencyNames_my");
        publicIdentifiers.add("CurrencyNames_mzn");
        publicIdentifiers.add("CurrencyNames_naq");
        publicIdentifiers.add("CurrencyNames_nd");
        publicIdentifiers.add("CurrencyNames_ne");
        publicIdentifiers.add("CurrencyNames_nl");
        publicIdentifiers.add("CurrencyNames_nl_AW");
        publicIdentifiers.add("CurrencyNames_nl_BQ");
        publicIdentifiers.add("CurrencyNames_nl_CW");
        publicIdentifiers.add("CurrencyNames_nl_SR");
        publicIdentifiers.add("CurrencyNames_nl_SX");
        publicIdentifiers.add("CurrencyNames_nmg");
        publicIdentifiers.add("CurrencyNames_nn");
        publicIdentifiers.add("CurrencyNames_nnh");
        publicIdentifiers.add("CurrencyNames_no");
        publicIdentifiers.add("CurrencyNames_nus");
        publicIdentifiers.add("CurrencyNames_nyn");
        publicIdentifiers.add("CurrencyNames_om");
        publicIdentifiers.add("CurrencyNames_om_KE");
        publicIdentifiers.add("CurrencyNames_or");
        publicIdentifiers.add("CurrencyNames_os");
        publicIdentifiers.add("CurrencyNames_os_RU");
        publicIdentifiers.add("CurrencyNames_pa");
        publicIdentifiers.add("CurrencyNames_pa_Arab");
        publicIdentifiers.add("CurrencyNames_pcm");
        publicIdentifiers.add("CurrencyNames_pis");
        publicIdentifiers.add("CurrencyNames_pl");
        publicIdentifiers.add("CurrencyNamesProvider");
        publicIdentifiers.add("CurrencyNames_ps");
        publicIdentifiers.add("CurrencyNames_ps_PK");
        publicIdentifiers.add("CurrencyNames_pt");
        publicIdentifiers.add("CurrencyNames_pt_AO");
        publicIdentifiers.add("CurrencyNames_pt_CV");
        publicIdentifiers.add("CurrencyNames_pt_LU");
        publicIdentifiers.add("CurrencyNames_pt_MO");
        publicIdentifiers.add("CurrencyNames_pt_MZ");
        publicIdentifiers.add("CurrencyNames_pt_PT");
        publicIdentifiers.add("CurrencyNames_pt_ST");
        publicIdentifiers.add("CurrencyNames_qu");
        publicIdentifiers.add("CurrencyNames_qu_BO");
        publicIdentifiers.add("CurrencyNames_qu_EC");
        publicIdentifiers.add("CurrencyNames_rm");
        publicIdentifiers.add("CurrencyNames_rn");
        publicIdentifiers.add("CurrencyNames_ro");
        publicIdentifiers.add("CurrencyNames_rof");
        publicIdentifiers.add("CurrencyNames_ro_MD");
        publicIdentifiers.add("CurrencyNames_ru");
        publicIdentifiers.add("CurrencyNames_ru_BY");
        publicIdentifiers.add("CurrencyNames_ru_KG");
        publicIdentifiers.add("CurrencyNames_ru_KZ");
        publicIdentifiers.add("CurrencyNames_ru_MD");
        publicIdentifiers.add("CurrencyNames_rw");
        publicIdentifiers.add("CurrencyNames_rwk");
        publicIdentifiers.add("CurrencyNames_sa");
        publicIdentifiers.add("CurrencyNames_sah");
        publicIdentifiers.add("CurrencyNames_saq");
        publicIdentifiers.add("CurrencyNames_sat");
        publicIdentifiers.add("CurrencyNames_sbp");
        publicIdentifiers.add("CurrencyNames_sc");
        publicIdentifiers.add("CurrencyNames_sd");
        publicIdentifiers.add("CurrencyNames_sd_Deva");
        publicIdentifiers.add("CurrencyNames_se");
        publicIdentifiers.add("CurrencyNames_seh");
        publicIdentifiers.add("CurrencyNames_ses");
        publicIdentifiers.add("CurrencyNames_se_SE");
        publicIdentifiers.add("CurrencyNames_sg");
        publicIdentifiers.add("CurrencyNames_shi");
        publicIdentifiers.add("CurrencyNames_shi_Latn");
        publicIdentifiers.add("CurrencyNames_si");
        publicIdentifiers.add("CurrencyNames_sk");
        publicIdentifiers.add("CurrencyNames_sl");
        publicIdentifiers.add("CurrencyNames_smn");
        publicIdentifiers.add("CurrencyNames_sn");
        publicIdentifiers.add("CurrencyNames_so");
        publicIdentifiers.add("CurrencyNames_so_DJ");
        publicIdentifiers.add("CurrencyNames_so_ET");
        publicIdentifiers.add("CurrencyNames_so_KE");
        publicIdentifiers.add("CurrencyNames_sq");
        publicIdentifiers.add("CurrencyNames_sq_MK");
        publicIdentifiers.add("CurrencyNames_sr");
        publicIdentifiers.add("CurrencyNames_sr_Cyrl_BA");
        publicIdentifiers.add("CurrencyNames_sr_Latn");
        publicIdentifiers.add("CurrencyNames_sr_Latn_BA");
        publicIdentifiers.add("CurrencyNames_su");
        publicIdentifiers.add("CurrencyNames_sv");
        publicIdentifiers.add("CurrencyNames_sw");
        publicIdentifiers.add("CurrencyNames_sw_CD");
        publicIdentifiers.add("CurrencyNames_sw_KE");
        publicIdentifiers.add("CurrencyNames_sw_UG");
        publicIdentifiers.add("CurrencyNames_ta");
        publicIdentifiers.add("CurrencyNames_ta_LK");
        publicIdentifiers.add("CurrencyNames_ta_MY");
        publicIdentifiers.add("CurrencyNames_ta_SG");
        publicIdentifiers.add("CurrencyNames_te");
        publicIdentifiers.add("CurrencyNames_teo");
        publicIdentifiers.add("CurrencyNames_teo_KE");
        publicIdentifiers.add("CurrencyNames_tg");
        publicIdentifiers.add("CurrencyNames_th");
        publicIdentifiers.add("CurrencyNames_ti");
        publicIdentifiers.add("CurrencyNames_ti_ER");
        publicIdentifiers.add("CurrencyNames_tk");
        publicIdentifiers.add("CurrencyNames_to");
        publicIdentifiers.add("CurrencyNames_tr");
        publicIdentifiers.add("CurrencyNames_tt");
        publicIdentifiers.add("CurrencyNames_twq");
        publicIdentifiers.add("CurrencyNames_tzm");
        publicIdentifiers.add("CurrencyNames_ug");
        publicIdentifiers.add("CurrencyNames_uk");
        publicIdentifiers.add("CurrencyNames_ur");
        publicIdentifiers.add("CurrencyNames_ur_IN");
        publicIdentifiers.add("CurrencyNames_uz");
        publicIdentifiers.add("CurrencyNames_uz_Arab");
        publicIdentifiers.add("CurrencyNames_uz_Cyrl");
        publicIdentifiers.add("CurrencyNames_vai");
        publicIdentifiers.add("CurrencyNames_vai_Latn");
        publicIdentifiers.add("CurrencyNames_vi");
        publicIdentifiers.add("CurrencyNames_vun");
        publicIdentifiers.add("CurrencyNames_wae");
        publicIdentifiers.add("CurrencyNames_wo");
        publicIdentifiers.add("CurrencyNames_xh");
        publicIdentifiers.add("CurrencyNames_xog");
        publicIdentifiers.add("CurrencyNames_yav");
        publicIdentifiers.add("CurrencyNames_yi");
        publicIdentifiers.add("CurrencyNames_yo");
        publicIdentifiers.add("CurrencyNames_yo_BJ");
        publicIdentifiers.add("CurrencyNames_yrl");
        publicIdentifiers.add("CurrencyNames_yrl_CO");
        publicIdentifiers.add("CurrencyNames_yrl_VE");
        publicIdentifiers.add("CurrencyNames_yue");
        publicIdentifiers.add("CurrencyNames_yue_Hans");
        publicIdentifiers.add("CurrencyNames_zgh");
        publicIdentifiers.add("CurrencyNames_zh");
        publicIdentifiers.add("CurrencyNames_zh_Hans_HK");
        publicIdentifiers.add("CurrencyNames_zh_Hans_MO");
        publicIdentifiers.add("CurrencyNames_zh_Hans_SG");
        publicIdentifiers.add("CurrencyNames_zh_Hant");
        publicIdentifiers.add("CurrencyNames_zh_Hant_HK");
        publicIdentifiers.add("CurrencyNames_zh_Hant_MO");
        publicIdentifiers.add("CurrencyNames_zu");
        publicIdentifiers.add("CurrentNodeListFilter");
        publicIdentifiers.add("Cursor");
        publicIdentifiers.add("CursorSupport");
        publicIdentifiers.add("Curve");
        publicIdentifiers.add("CurveDB");
        publicIdentifiers.add("CustomCursor");
        publicIdentifiers.add("Customizer");
        publicIdentifiers.add("CustomMediaTray");
        publicIdentifiers.add("CustomStringPool");
        publicIdentifiers.add("Cutoff");
        publicIdentifiers.add("CVAttributes");
        publicIdentifiers.add("CyclicBarrier");
    }

    private void addPublicIdentifiersDE() {
        publicIdentifiers.add("Double");
        publicIdentifiers.add("D2F");
        publicIdentifiers.add("D2I");
        publicIdentifiers.add("D2L");
        publicIdentifiers.add("DADD");
        publicIdentifiers.add("DALOAD");
        publicIdentifiers.add("DASTORE");
        publicIdentifiers.add("Data");
        publicIdentifiers.add("DataAmount");
        publicIdentifiers.add("DatabaseMetaData");
        publicIdentifiers.add("DataBuffer");
        publicIdentifiers.add("DataBufferNative");
        publicIdentifiers.add("DataDirectory");
        publicIdentifiers.add("DataFlavor");
        publicIdentifiers.add("DataFlavorUtil");
        publicIdentifiers.add("DataFlavorUtil$RMI");
        publicIdentifiers.add("DataFormatException");
        publicIdentifiers.add("DataFrame");
        publicIdentifiers.add("DatagramChannel");
        publicIdentifiers.add("DatagramSocket");
        publicIdentifiers.add("DatagramSocketAdaptor");
        publicIdentifiers.add("DatagramSocketImpl");
        publicIdentifiers.add("DatagramSocketImplFactory");
        publicIdentifiers.add("DataInput");
        publicIdentifiers.add("DataInputStream");
        publicIdentifiers.add("DataLayout");
        publicIdentifiers.add("DataLine");
        publicIdentifiers.add("DataLine$Info");
        publicIdentifiers.add("DataOutput");
        publicIdentifiers.add("DataOutputStream");
        publicIdentifiers.add("DataSource");
        publicIdentifiers.add("DataTransferer");
        publicIdentifiers.add("DataTransferer$ReencodingInputStream");
        publicIdentifiers.add("DataTruncation");
        publicIdentifiers.add("DatatypeConfigurationException");
        publicIdentifiers.add("DatatypeException");
        publicIdentifiers.add("DatatypeFactory");
        publicIdentifiers.add("DatatypeFactoryImpl");
        publicIdentifiers.add("DatatypeMessageFormatter");
        publicIdentifiers.add("DatatypeValidator");
        publicIdentifiers.add("Date");
        publicIdentifiers.add("DateConverter");
        publicIdentifiers.add("DateDV");
        publicIdentifiers.add("DateFormat");
        publicIdentifiers.add("DateFormat$Field");
        publicIdentifiers.add("DateFormatProvider");
        publicIdentifiers.add("DateFormatProviderImpl");
        publicIdentifiers.add("DateFormatSymbols");
        publicIdentifiers.add("DateFormatSymbolsProvider");
        publicIdentifiers.add("DateFormatSymbolsProviderImpl");
        publicIdentifiers.add("DateFormatter");
        publicIdentifiers.add("DateTimeDV");
        publicIdentifiers.add("DateTimeException");
        publicIdentifiers.add("DateTimeParseException");
        publicIdentifiers.add("DateTimeSyntax");
        publicIdentifiers.add("DayDV");
        publicIdentifiers.add("DCMPG");
        publicIdentifiers.add("DCMPL");
        publicIdentifiers.add("DCONST");
        publicIdentifiers.add("DCTree");
        publicIdentifiers.add("DCTree$DCAttribute");
        publicIdentifiers.add("DCTree$DCAuthor");
        publicIdentifiers.add("DCTree$DCBlockTag");
        publicIdentifiers.add("DCTree$DCComment");
        publicIdentifiers.add("DCTree$DCDeprecated");
        publicIdentifiers.add("DCTree$DCDocComment");
        publicIdentifiers.add("DCTree$DCDocRoot");
        publicIdentifiers.add("DCTree$DCDocType");
        publicIdentifiers.add("DCTree$DCEndElement");
        publicIdentifiers.add("DCTree$DCEndPosTree");
        publicIdentifiers.add("DCTree$DCEntity");
        publicIdentifiers.add("DCTree$DCErroneous");
        publicIdentifiers.add("DCTree$DCHidden");
        publicIdentifiers.add("DCTree$DCIdentifier");
        publicIdentifiers.add("DCTree$DCIndex");
        publicIdentifiers.add("DCTree$DCInheritDoc");
        publicIdentifiers.add("DCTree$DCInlineTag");
        publicIdentifiers.add("DCTree$DCLink");
        publicIdentifiers.add("DCTree$DCLiteral");
        publicIdentifiers.add("DCTree$DCParam");
        publicIdentifiers.add("DCTree$DCProvides");
        publicIdentifiers.add("DCTree$DCReference");
        publicIdentifiers.add("DCTree$DCReturn");
        publicIdentifiers.add("DCTree$DCSee");
        publicIdentifiers.add("DCTree$DCSerial");
        publicIdentifiers.add("DCTree$DCSerialData");
        publicIdentifiers.add("DCTree$DCSerialField");
        publicIdentifiers.add("DCTree$DCSince");
        publicIdentifiers.add("DCTree$DCSnippet");
        publicIdentifiers.add("DCTree$DCSpec");
        publicIdentifiers.add("DCTree$DCStartElement");
        publicIdentifiers.add("DCTree$DCSummary");
        publicIdentifiers.add("DCTree$DCSystemProperty");
        publicIdentifiers.add("DCTree$DCText");
        publicIdentifiers.add("DCTree$DCThrows");
        publicIdentifiers.add("DCTree$DCUnknownBlockTag");
        publicIdentifiers.add("DCTree$DCUnknownInlineTag");
        publicIdentifiers.add("DCTree$DCUses");
        publicIdentifiers.add("DCTree$DCValue");
        publicIdentifiers.add("DCTree$DCVersion");
        publicIdentifiers.add("DDIV");
        publicIdentifiers.add("DeadlockDetectionPanel");
        publicIdentifiers.add("DeadlockDetector");
        publicIdentifiers.add("Debug");
        publicIdentifiers.add("DebugDirectory");
        publicIdentifiers.add("DebugDirectoryEntry");
        publicIdentifiers.add("DebugEvent");
        publicIdentifiers.add("DebugEvent$Type");
        publicIdentifiers.add("Debugger");
        publicIdentifiers.add("DebuggerBase");
        publicIdentifiers.add("DebuggerConsolePanel");
        publicIdentifiers.add("DebuggerException");
        publicIdentifiers.add("DebuggerUtilities");
        publicIdentifiers.add("DebugGraphics");
        publicIdentifiers.add("DebugInfoReadStream");
        publicIdentifiers.add("DebugInformationRecorder");
        publicIdentifiers.add("DebugServer");
        publicIdentifiers.add("DebugTypes");
        publicIdentifiers.add("DebugVC50");
        publicIdentifiers.add("DebugVC50MemberAttributes");
        publicIdentifiers.add("DebugVC50ReservedTypes");
        publicIdentifiers.add("DebugVC50SegDesc");
        publicIdentifiers.add("DebugVC50SegDescEnums");
        publicIdentifiers.add("DebugVC50SegInfo");
        publicIdentifiers.add("DebugVC50SrcModFileDesc");
        publicIdentifiers.add("DebugVC50SrcModLineNumberMap");
        publicIdentifiers.add("DebugVC50SSAlignSym");
        publicIdentifiers.add("DebugVC50SSFileIndex");
        publicIdentifiers.add("DebugVC50SSGlobalPub");
        publicIdentifiers.add("DebugVC50SSGlobalSym");
        publicIdentifiers.add("DebugVC50SSGlobalTypes");
        publicIdentifiers.add("DebugVC50SSLibraries");
        publicIdentifiers.add("DebugVC50SSModule");
        publicIdentifiers.add("DebugVC50SSMPC");
        publicIdentifiers.add("DebugVC50SSOffsetMap16");
        publicIdentifiers.add("DebugVC50SSOffsetMap32");
        publicIdentifiers.add("DebugVC50SSPreComp");
        publicIdentifiers.add("DebugVC50SSPublic");
        publicIdentifiers.add("DebugVC50SSPublicSym");
        publicIdentifiers.add("DebugVC50SSSegMap");
        publicIdentifiers.add("DebugVC50SSSegName");
        publicIdentifiers.add("DebugVC50SSSrcLnSeg");
        publicIdentifiers.add("DebugVC50SSSrcModule");
        publicIdentifiers.add("DebugVC50SSStaticSym");
        publicIdentifiers.add("DebugVC50SSSymbolBase");
        publicIdentifiers.add("DebugVC50SSSymbols");
        publicIdentifiers.add("DebugVC50SSTypes");
        publicIdentifiers.add("DebugVC50Subsection");
        publicIdentifiers.add("DebugVC50SubsectionDirectory");
        publicIdentifiers.add("DebugVC50SubsectionTypes");
        publicIdentifiers.add("DebugVC50SymbolEnums");
        publicIdentifiers.add("DebugVC50SymbolIterator");
        publicIdentifiers.add("DebugVC50SymbolTypes");
        publicIdentifiers.add("DebugVC50TypeEnums");
        publicIdentifiers.add("DebugVC50TypeIterator");
        publicIdentifiers.add("DebugVC50TypeLeafIndices");
        publicIdentifiers.add("DebugVC50WrongNumericTypeException");
        publicIdentifiers.add("DebugVC50X86RegisterEnums");
        publicIdentifiers.add("DecimalDV");
        publicIdentifiers.add("DecimalFormat");
        publicIdentifiers.add("DecimalFormatSymbols");
        publicIdentifiers.add("DecimalFormatSymbolsProvider");
        publicIdentifiers.add("DecimalFormatSymbolsProviderImpl");
        publicIdentifiers.add("DeclarationSnippet");
        publicIdentifiers.add("DeclaredType");
        publicIdentifiers.add("DeclHandler");
        publicIdentifiers.add("DecodingCallback");
        publicIdentifiers.add("DeconstructionPatternTree");
        publicIdentifiers.add("Decoration");
        publicIdentifiers.add("Decoration$Label");
        publicIdentifiers.add("DeepNodeListImpl");
        publicIdentifiers.add("DefaultAsynchronousChannelProvider");
        publicIdentifiers.add("DefaultAttribute");
        publicIdentifiers.add("DefaultBoundedRangeModel");
        publicIdentifiers.add("DefaultButtonModel");
        publicIdentifiers.add("DefaultCaret");
        publicIdentifiers.add("DefaultCaseLabelTree");
        publicIdentifiers.add("DefaultCellEditor");
        publicIdentifiers.add("DefaultCellEditor$EditorDelegate");
        publicIdentifiers.add("DefaultColorSelectionModel");
        publicIdentifiers.add("DefaultComboBoxModel");
        publicIdentifiers.add("DefaultDesktopManager");
        publicIdentifiers.add("DefaultDisposerRecord");
        publicIdentifiers.add("DefaultDocument");
        publicIdentifiers.add("DefaultEditorKit");
        publicIdentifiers.add("DefaultEditorKit$BeepAction");
        publicIdentifiers.add("DefaultEditorKit$CopyAction");
        publicIdentifiers.add("DefaultEditorKit$CutAction");
        publicIdentifiers.add("DefaultEditorKit$DefaultKeyTypedAction");
        publicIdentifiers.add("DefaultEditorKit$InsertBreakAction");
        publicIdentifiers.add("DefaultEditorKit$InsertContentAction");
        publicIdentifiers.add("DefaultEditorKit$InsertTabAction");
        publicIdentifiers.add("DefaultEditorKit$PasteAction");
        publicIdentifiers.add("DefaultElement");
        publicIdentifiers.add("DefaultErrorHandler");
        publicIdentifiers.add("DefaultExpander");
        publicIdentifiers.add("DefaultFileSystemProvider");
        publicIdentifiers.add("DefaultFileTypeDetector");
        publicIdentifiers.add("DefaultFocusManager");
        publicIdentifiers.add("DefaultFocusTraversalPolicy");
        publicIdentifiers.add("DefaultFormatter");
        publicIdentifiers.add("DefaultFormatterFactory");
        publicIdentifiers.add("DefaultFtpClientProvider");
        publicIdentifiers.add("DefaultHandler");
        publicIdentifiers.add("DefaultHandler2");
        publicIdentifiers.add("DefaultHeapVisitor");
        publicIdentifiers.add("DefaultHighlighter");
        publicIdentifiers.add("DefaultHighlighter$DefaultHighlightPainter");
        publicIdentifiers.add("DefaultHistory");
        publicIdentifiers.add("DefaultHistory$EntryImpl");
        publicIdentifiers.add("DefaultHttpServerProvider");
        publicIdentifiers.add("DefaultInternalObjectFilter");
        publicIdentifiers.add("DefaultKeyboardFocusManager");
        publicIdentifiers.add("DefaultLayoutStyle");
        publicIdentifiers.add("DefaultLdapDnsProvider");
        publicIdentifiers.add("DefaultListCellRenderer");
        publicIdentifiers.add("DefaultListCellRenderer$UIResource");
        publicIdentifiers.add("DefaultListModel");
        publicIdentifiers.add("DefaultListSelectionModel");
        publicIdentifiers.add("DefaultLoaderRepository");
        publicIdentifiers.add("DefaultLoggerFinder");
        publicIdentifiers.add("DefaultLookup");
        publicIdentifiers.add("DefaultMBeanServerInterceptor");
        publicIdentifiers.add("DefaultMenuLayout");
        publicIdentifiers.add("DefaultMetadataVisitor");
        publicIdentifiers.add("DefaultMetalTheme");
        publicIdentifiers.add("DefaultMutableTreeNode");
        publicIdentifiers.add("DefaultMXBeanMappingFactory");
        publicIdentifiers.add("DefaultNode");
        publicIdentifiers.add("DefaultObjectVisitor");
        publicIdentifiers.add("DefaultOopVisitor");
        publicIdentifiers.add("DefaultParser");
        publicIdentifiers.add("DefaultParser$ArgumentList");
        publicIdentifiers.add("DefaultPersistenceDelegate");
        publicIdentifiers.add("DefaultProxySelector");
        publicIdentifiers.add("DefaultResponseControlFactory");
        publicIdentifiers.add("DefaultRowSorter");
        publicIdentifiers.add("DefaultRowSorter$ModelWrapper");
        publicIdentifiers.add("DefaultSelectorProvider");
        publicIdentifiers.add("DefaultSingleSelectionModel");
        publicIdentifiers.add("DefaultStripDebugPlugin$NativePluginFactory");
        publicIdentifiers.add("DefaultStyledDocument");
        publicIdentifiers.add("DefaultStyledDocument$AttributeUndoableEdit");
        publicIdentifiers.add("DefaultStyledDocument$ElementBuffer");
        publicIdentifiers.add("DefaultStyledDocument$ElementSpec");
        publicIdentifiers.add("DefaultStyledDocument$SectionElement");
        publicIdentifiers.add("DefaultSynthStyle");
        publicIdentifiers.add("DefaultSynthStyle$StateInfo");
        publicIdentifiers.add("DefaultTableCellHeaderRenderer");
        publicIdentifiers.add("DefaultTableCellRenderer");
        publicIdentifiers.add("DefaultTableCellRenderer$UIResource");
        publicIdentifiers.add("DefaultTableColumnModel");
        publicIdentifiers.add("DefaultTableModel");
        publicIdentifiers.add("DefaultText");
        publicIdentifiers.add("DefaultTextUI");
        publicIdentifiers.add("DefaultTreeCellEditor");
        publicIdentifiers.add("DefaultTreeCellEditor$DefaultTextField");
        publicIdentifiers.add("DefaultTreeCellEditor$EditorContainer");
        publicIdentifiers.add("DefaultTreeCellRenderer");
        publicIdentifiers.add("DefaultTreeModel");
        publicIdentifiers.add("DefaultTreeSelectionModel");
        publicIdentifiers.add("DefaultXMLDocumentHandler");
        publicIdentifiers.add("DeferredAttr");
        publicIdentifiers.add("DeferredAttr$DeferredType");
        publicIdentifiers.add("DeferredAttr$RecoveryDeferredTypeMap");
        publicIdentifiers.add("DeferredCDATASectionImpl");
        publicIdentifiers.add("DeferredCommentImpl");
        publicIdentifiers.add("DeferredCompletionFailureHandler");
        publicIdentifiers.add("DeferredCompletionFailureHandler$Handler");
        publicIdentifiers.add("DeferredDocumentImpl");
        publicIdentifiers.add("DeferredDocumentTypeImpl");
        publicIdentifiers.add("DeferredDOMImplementationImpl");
        publicIdentifiers.add("DeferredElementDefinitionImpl");
        publicIdentifiers.add("DeferredElementImpl");
        publicIdentifiers.add("DeferredElementNSImpl");
        publicIdentifiers.add("DeferredEntityImpl");
        publicIdentifiers.add("DeferredEntityReferenceImpl");
        publicIdentifiers.add("DeferredLintHandler");
        publicIdentifiers.add("DeferredLintHandler$LintLogger");
        publicIdentifiers.add("DeferredNode");
        publicIdentifiers.add("DeferredNotationImpl");
        publicIdentifiers.add("DeferredProcessingInstructionImpl");
        publicIdentifiers.add("DeferredTextImpl");
        publicIdentifiers.add("DefinedBy");
        publicIdentifiers.add("Deflater");
        publicIdentifiers.add("DeflaterInputStream");
        publicIdentifiers.add("DeflaterOutputStream");
        publicIdentifiers.add("DefNewGeneration");
        publicIdentifiers.add("Delayed");
        publicIdentifiers.add("DelayQueue");
        publicIdentifiers.add("DelegatableDecoder");
        publicIdentifiers.add("DelegateAction");
        publicIdentifiers.add("DelegateHttpsURLConnection");
        publicIdentifiers.add("DelegatingHttpExchange");
        publicIdentifiers.add("DelegatingJavaFileManager");
        publicIdentifiers.add("DeltaCRLIndicatorExtension");
        publicIdentifiers.add("DeoptimizationBlob");
        publicIdentifiers.add("Dependencies");
        publicIdentifiers.add("Dependencies$ClassFileError");
        publicIdentifiers.add("Dependencies$ClassFileNotFoundException");
        publicIdentifiers.add("Dependencies$ClassFileReader");
        publicIdentifiers.add("Dependencies$GraphDependencies");
        publicIdentifiers.add("Dependencies$GraphDependencies$CompletionNode");
        publicIdentifiers.add("Dependencies$GraphDependencies$Node");
        publicIdentifiers.add("Dependencies$Recorder");
        publicIdentifiers.add("Dependency");
        publicIdentifiers.add("Dependency$Filter");
        publicIdentifiers.add("Dependency$Finder");
        publicIdentifiers.add("Dependency$Location");
        publicIdentifiers.add("DeployParams");
        publicIdentifiers.add("DeprData");
        publicIdentifiers.add("DeprDB");
        publicIdentifiers.add("Deprecated");
        publicIdentifiers.add("DeprecatedAPIListBuilder");
        publicIdentifiers.add("Deprecated_attribute");
        publicIdentifiers.add("DeprecatedListWriter");
        publicIdentifiers.add("DeprecatedTaglet");
        publicIdentifiers.add("DeprecatedTree");
        publicIdentifiers.add("DepsAnalyzer");
        publicIdentifiers.add("DepsAnalyzer$Node");
        publicIdentifiers.add("Depth");
        publicIdentifiers.add("Deque");
        publicIdentifiers.add("DEREncodedKeyValue");
        publicIdentifiers.add("DEREncodedKeyValueResolver");
        publicIdentifiers.add("DerEncoder");
        publicIdentifiers.add("DerInputStream");
        publicIdentifiers.add("DerValue");
        publicIdentifiers.add("Des3");
        publicIdentifiers.add("Des3DkCrypto");
        publicIdentifiers.add("DesCbcCrcEType");
        publicIdentifiers.add("DescendantIterator");
        publicIdentifiers.add("DescendingVisitor");
        publicIdentifiers.add("Description");
        publicIdentifiers.add("Descriptor");
        publicIdentifiers.add("Descriptor$InvalidDescriptor");
        publicIdentifiers.add("DescriptorAccess");
        publicIdentifiers.add("DescriptorCache");
        publicIdentifiers.add("DescriptorException");
        publicIdentifiers.add("DescriptorKey");
        publicIdentifiers.add("DescriptorRead");
        publicIdentifiers.add("DescriptorSupport");
        publicIdentifiers.add("DESedeCipher");
        publicIdentifiers.add("DESedeKeySpec");
        publicIdentifiers.add("DeserializationChecker");
        publicIdentifiers.add("DesignMode");
        publicIdentifiers.add("DESKeySpec");
        publicIdentifiers.add("Desktop");
        publicIdentifiers.add("DesktopDatatransferService");
        publicIdentifiers.add("DesktopDatatransferServiceImpl");
        publicIdentifiers.add("DesktopIconUI");
        publicIdentifiers.add("DesktopManager");
        publicIdentifiers.add("DesktopPaneUI");
        publicIdentifiers.add("DesktopPeer");
        publicIdentifiers.add("DesktopProperty");
        publicIdentifiers.add("DesMacCksumType");
        publicIdentifiers.add("DesMacKCksumType");
        publicIdentifiers.add("Destroyable");
        publicIdentifiers.add("DestroyFailedException");
        publicIdentifiers.add("DestSurfaceProvider");
        publicIdentifiers.add("DFAContentModel");
        publicIdentifiers.add("DflCache");
        publicIdentifiers.add("DGC");
        publicIdentifiers.add("DGCAckHandler");
        publicIdentifiers.add("DHGenParameterSpec");
        publicIdentifiers.add("DHKey");
        publicIdentifiers.add("DHParameterSpec");
        publicIdentifiers.add("DHPrivateKey");
        publicIdentifiers.add("DHPrivateKeySpec");
        publicIdentifiers.add("DHPublicKey");
        publicIdentifiers.add("DHPublicKeySpec");
        publicIdentifiers.add("Diag");
        publicIdentifiers.add("Diagnostic");
        publicIdentifiers.add("DiagnosticCommandImpl");
        publicIdentifiers.add("DiagnosticCommandMBean");
        publicIdentifiers.add("DiagnosticFormatter");
        publicIdentifiers.add("DiagnosticFormatter$Configuration");
        publicIdentifiers.add("DiagnosticListener");
        publicIdentifiers.add("DiagnosticSource");
        publicIdentifiers.add("Dialog");
        publicIdentifiers.add("Dialog$AccessibleAWTDialog");
        publicIdentifiers.add("DialogOwnerAccessor");
        publicIdentifiers.add("DialogPeer");
        publicIdentifiers.add("Dictionary");
        publicIdentifiers.add("DictionaryBasedBreakIterator");
        publicIdentifiers.add("DiffHelper");
        publicIdentifiers.add("DiffHelper$Diff");
        publicIdentifiers.add("DigesterOutputStream");
        publicIdentifiers.add("DigestException");
        publicIdentifiers.add("DigestInputStream");
        publicIdentifiers.add("DigestMethod");
        publicIdentifiers.add("DigestMethodParameterSpec");
        publicIdentifiers.add("DigestOutputStream");
        publicIdentifiers.add("Dimension");
        publicIdentifiers.add("Dimension2D");
        publicIdentifiers.add("DimensionUIResource");
        publicIdentifiers.add("DirArchive");
        publicIdentifiers.add("DirContext");
        publicIdentifiers.add("DirectBuffer");
        publicIdentifiers.add("DirectColorModel");
        publicIdentifiers.add("DirectExecutionControl");
        publicIdentifiers.add("Directive");
        publicIdentifiers.add("Directive$ExportsDirective");
        publicIdentifiers.add("Directive$OpensDirective");
        publicIdentifiers.add("Directive$ProvidesDirective");
        publicIdentifiers.add("Directive$RequiresDirective");
        publicIdentifiers.add("Directive$UsesDirective");
        publicIdentifiers.add("DirectiveTree");
        publicIdentifiers.add("DirectMethodHandleDesc");
        publicIdentifiers.add("DirectoryManager");
        publicIdentifiers.add("DirectoryNotEmptyException");
        publicIdentifiers.add("DirectoryStream");
        publicIdentifiers.add("DirectoryStream$Filter");
        publicIdentifiers.add("DirObjectFactory");
        publicIdentifiers.add("DirSearch");
        publicIdentifiers.add("DirStateFactory");
        publicIdentifiers.add("DirStateFactory$Result");
        publicIdentifiers.add("DirtyRegion");
        publicIdentifiers.add("DisabledAlgorithmConstraints");
        publicIdentifiers.add("Disassembler");
        publicIdentifiers.add("DisassemblerTool");
        publicIdentifiers.add("DisassemblerTool$DisassemblerTask");
        publicIdentifiers.add("Dispatcher");
        publicIdentifiers.add("DispatcherWrapper");
        publicIdentifiers.add("Display");
        publicIdentifiers.add("DisplayChangedListener");
        publicIdentifiers.add("Disposer");
        publicIdentifiers.add("Disposer$PollDisposable");
        publicIdentifiers.add("DisposerRecord");
        publicIdentifiers.add("DisposerTarget");
        publicIdentifiers.add("DistributionPoint");
        publicIdentifiers.add("DistributionPointFetcher");
        publicIdentifiers.add("DistributionPointName");
        publicIdentifiers.add("Div");
        publicIdentifiers.add("DkCrypto");
        publicIdentifiers.add("DLL");
        publicIdentifiers.add("DLLCharacteristics");
        publicIdentifiers.add("DLOAD");
        publicIdentifiers.add("DMUL");
        publicIdentifiers.add("DNEG");
        publicIdentifiers.add("DnsClient");
        publicIdentifiers.add("DnsContext");
        publicIdentifiers.add("DnsContextFactory");
        publicIdentifiers.add("DNSName");
        publicIdentifiers.add("DnsUrl");
        publicIdentifiers.add("dnsURLContext");
        publicIdentifiers.add("dnsURLContextFactory");
        publicIdentifiers.add("Doc");
        publicIdentifiers.add("DocAttribute");
        publicIdentifiers.add("DocAttributeSet");
        publicIdentifiers.add("DocCommentParser");
        publicIdentifiers.add("DocCommentTable");
        publicIdentifiers.add("DocCommentTree");
        publicIdentifiers.add("DocEnvImpl");
        publicIdentifiers.add("DocFile");
        publicIdentifiers.add("DocFileElement");
        publicIdentifiers.add("DocFileFactory");
        publicIdentifiers.add("DocFileIOException");
        publicIdentifiers.add("DocFilesHandler");
        publicIdentifiers.add("DocFilesHandlerImpl");
        publicIdentifiers.add("DocFinder");
        publicIdentifiers.add("DocFinder$Criterion");
        publicIdentifiers.add("DocFinder$Result");
        publicIdentifiers.add("DocFinder$Result$Conclude");
        publicIdentifiers.add("DocFinder$Result$Continue");
        publicIdentifiers.add("DocFinder$Result$Skip");
        publicIdentifiers.add("DocFlavor");
        publicIdentifiers.add("DocFlavor$BYTE_ARRAY");
        publicIdentifiers.add("DocFlavor$CHAR_ARRAY");
        publicIdentifiers.add("DocFlavor$INPUT_STREAM");
        publicIdentifiers.add("DocFlavor$READER");
        publicIdentifiers.add("DocFlavor$SERVICE_FORMATTED");
        publicIdentifiers.add("DocFlavor$STRING");
        publicIdentifiers.add("DocFlavor$URL");
        publicIdentifiers.add("Doclet");
        publicIdentifiers.add("Doclet$Option");
        publicIdentifiers.add("DocletConstants");
        publicIdentifiers.add("DocletElement");
        publicIdentifiers.add("DocletEnvironment");
        publicIdentifiers.add("DocletException");
        publicIdentifiers.add("DocLink");
        publicIdentifiers.add("DocLint");
        publicIdentifiers.add("DocLint$BadArgs");
        publicIdentifiers.add("DocPath");
        publicIdentifiers.add("DocPaths");
        publicIdentifiers.add("DocPretty");
        publicIdentifiers.add("DocPrintJob");
        publicIdentifiers.add("DocRootTaglet");
        publicIdentifiers.add("DocRootTree");
        publicIdentifiers.add("DocSourcePositions");
        publicIdentifiers.add("DocTree");
        publicIdentifiers.add("DocTreeFactory");
        publicIdentifiers.add("DocTreeMaker");
        publicIdentifiers.add("DocTreePath");
        publicIdentifiers.add("DocTreePathScanner");
        publicIdentifiers.add("DocTrees");
        publicIdentifiers.add("DocTreeScanner");
        publicIdentifiers.add("DocTreeVisitor");
        publicIdentifiers.add("DocTypeTree");
        publicIdentifiers.add("Document");
        publicIdentifiers.add("DocumentationTool");
        publicIdentifiers.add("DocumentationTool$DocumentationTask");
        publicIdentifiers.add("DocumentBuilder");
        publicIdentifiers.add("DocumentBuilderFactory");
        publicIdentifiers.add("DocumentBuilderFactoryImpl");
        publicIdentifiers.add("DocumentBuilderImpl");
        publicIdentifiers.add("DocumentCSS");
        publicIdentifiers.add("Documented");
        publicIdentifiers.add("DocumentEvent");
        publicIdentifiers.add("DocumentEvent$ElementChange");
        publicIdentifiers.add("DocumentFilter");
        publicIdentifiers.add("DocumentFilter$FilterBypass");
        publicIdentifiers.add("DocumentFragment");
        publicIdentifiers.add("DocumentFragmentImpl");
        publicIdentifiers.add("DocumentHandler");
        publicIdentifiers.add("DocumentImpl");
        publicIdentifiers.add("DocumentListener");
        publicIdentifiers.add("DocumentParser");
        publicIdentifiers.add("DocumentPropertiesUI");
        publicIdentifiers.add("DocumentRange");
        publicIdentifiers.add("DocumentStyle");
        publicIdentifiers.add("DocumentTraversal");
        publicIdentifiers.add("DocumentType");
        publicIdentifiers.add("DocumentTypeImpl");
        publicIdentifiers.add("DocumentView");
        publicIdentifiers.add("DOM");
        publicIdentifiers.add("DOM2DTM");
        publicIdentifiers.add("DOM2DTM$CharacterNodeHandler");
        publicIdentifiers.add("DOM2DTMdefaultNamespaceDeclarationNode");
        publicIdentifiers.add("DOM2SAX");
        publicIdentifiers.add("DOM2TO");
        publicIdentifiers.add("DOM3Serializer");
        publicIdentifiers.add("DomainCombiner");
        publicIdentifiers.add("DOMBuilder");
        publicIdentifiers.add("DOMCache");
        publicIdentifiers.add("DOMCanonicalizationMethod");
        publicIdentifiers.add("DOMConfiguration");
        publicIdentifiers.add("DOMConfigurationImpl");
        publicIdentifiers.add("DOMCryptoContext");
        publicIdentifiers.add("DOMDigestMethod");
        publicIdentifiers.add("DOMEnhancedForDTM");
        publicIdentifiers.add("DOMEntityResolverWrapper");
        publicIdentifiers.add("DOMError");
        publicIdentifiers.add("DOMErrorHandler");
        publicIdentifiers.add("DOMErrorHandlerWrapper");
        publicIdentifiers.add("DOMErrorImpl");
        publicIdentifiers.add("DOMException");
        publicIdentifiers.add("DOMHMACSignatureMethod");
        publicIdentifiers.add("DOMImplementation");
        publicIdentifiers.add("DOMImplementationCSS");
        publicIdentifiers.add("DOMImplementationImpl");
        publicIdentifiers.add("DOMImplementationList");
        publicIdentifiers.add("DOMImplementationListImpl");
        publicIdentifiers.add("DOMImplementationLS");
        publicIdentifiers.add("DOMImplementationSource");
        publicIdentifiers.add("DOMImplementationSourceImpl");
        publicIdentifiers.add("DOMInputImpl");
        publicIdentifiers.add("DOMKeyValue");
        publicIdentifiers.add("DOMLocator");
        publicIdentifiers.add("DOMLocatorImpl");
        publicIdentifiers.add("DOMMessageFormatter");
        publicIdentifiers.add("DOMNamespaceContext");
        publicIdentifiers.add("DOMNormalizer");
        publicIdentifiers.add("DOMOutputImpl");
        publicIdentifiers.add("DOMParser");
        publicIdentifiers.add("DOMParserImpl");
        publicIdentifiers.add("DOMResult");
        publicIdentifiers.add("DOMRSAPSSSignatureMethod");
        publicIdentifiers.add("DOMSerializer");
        publicIdentifiers.add("DOMSerializerImpl");
        publicIdentifiers.add("DOMSignatureMethod");
        publicIdentifiers.add("DOMSignContext");
        publicIdentifiers.add("DOMSource");
        publicIdentifiers.add("DOMStringList");
        publicIdentifiers.add("DOMStringListImpl");
        publicIdentifiers.add("DOMStructure");
        publicIdentifiers.add("DOMSubTreeData");
        publicIdentifiers.add("DOMTransform");
        publicIdentifiers.add("DOMURIReference");
        publicIdentifiers.add("DOMUtil");
        publicIdentifiers.add("DOMValidateContext");
        publicIdentifiers.add("DOMWSFilter");
        publicIdentifiers.add("DOMXMLSignature$DOMSignatureValue");
        publicIdentifiers.add("DOMXSImplementationSourceImpl");
        publicIdentifiers.add("DontInline");
        publicIdentifiers.add("DosFileAttributes");
        publicIdentifiers.add("DosFileAttributeView");
        publicIdentifiers.add("DoubleAccumulator");
        publicIdentifiers.add("DoubleAdder");
        publicIdentifiers.add("DoubleBinaryOperator");
        publicIdentifiers.add("DoubleBuffer");
        publicIdentifiers.add("DoubleByte");
        publicIdentifiers.add("DoubleByte$Decoder");
        publicIdentifiers.add("DoubleByte$Decoder_DBCSONLY");
        publicIdentifiers.add("DoubleByte$Decoder_EBCDIC");
        publicIdentifiers.add("DoubleByte$Decoder_EUC_SIM");
        publicIdentifiers.add("DoubleByte$Encoder");
        publicIdentifiers.add("DoubleByte$Encoder_DBCSONLY");
        publicIdentifiers.add("DoubleByte$Encoder_EBCDIC");
        publicIdentifiers.add("DoubleByte$Encoder_EUC_SIM");
        publicIdentifiers.add("DoubleByteEncoder");
        publicIdentifiers.add("DoubleConsts");
        publicIdentifiers.add("DoubleConsumer");
        publicIdentifiers.add("DoubleDV");
        publicIdentifiers.add("DoubleEditor");
        publicIdentifiers.add("DoubleField");
        publicIdentifiers.add("DoubleFunction");
        publicIdentifiers.add("DoublePredicate");
        publicIdentifiers.add("DoubleSignature");
        publicIdentifiers.add("DoubleStream");
        publicIdentifiers.add("DoubleStream$Builder");
        publicIdentifiers.add("DoubleStream$DoubleMapMultiConsumer");
        publicIdentifiers.add("DoubleSummaryStatistics");
        publicIdentifiers.add("DoubleSupplier");
        publicIdentifiers.add("DoubleToIntFunction");
        publicIdentifiers.add("DoubleToLongFunction");
        publicIdentifiers.add("DoubleTreeNodeAdapter");
        publicIdentifiers.add("DoubleType");
        publicIdentifiers.add("DoubleTypeImpl");
        publicIdentifiers.add("DoubleUnaryOperator");
        publicIdentifiers.add("DoubleValue");
        publicIdentifiers.add("DoubleValueImpl");
        publicIdentifiers.add("DoubleVector");
        publicIdentifiers.add("DoWhileLoopTree");
        publicIdentifiers.add("DowncallLinker");
        publicIdentifiers.add("DPathConsumer2D");
        publicIdentifiers.add("DraconianErrorHandler");
        publicIdentifiers.add("DragGestureEvent");
        publicIdentifiers.add("DragGestureListener");
        publicIdentifiers.add("DragGestureRecognizer");
        publicIdentifiers.add("DragRecognitionSupport$BeforeDrag");
        publicIdentifiers.add("DragSource");
        publicIdentifiers.add("DragSourceAdapter");
        publicIdentifiers.add("DragSourceContext");
        publicIdentifiers.add("DragSourceContextPeer");
        publicIdentifiers.add("DragSourceContextWrapper");
        publicIdentifiers.add("DragSourceDragEvent");
        publicIdentifiers.add("DragSourceDropEvent");
        publicIdentifiers.add("DragSourceEvent");
        publicIdentifiers.add("DragSourceListener");
        publicIdentifiers.add("DragSourceMotionListener");
        publicIdentifiers.add("DrawGlyphList");
        publicIdentifiers.add("DrawGlyphListAA");
        publicIdentifiers.add("DrawGlyphListAA$General");
        publicIdentifiers.add("DrawGlyphListColor");
        publicIdentifiers.add("DrawGlyphListLCD");
        publicIdentifiers.add("DrawImage");
        publicIdentifiers.add("DrawImagePipe");
        publicIdentifiers.add("DrawLine");
        publicIdentifiers.add("DrawParallelogram");
        publicIdentifiers.add("DrawPath");
        publicIdentifiers.add("DrawPolygons");
        publicIdentifiers.add("DrawRect");
        publicIdentifiers.add("DrbgParameters");
        publicIdentifiers.add("DREM");
        publicIdentifiers.add("DRETURN");
        publicIdentifiers.add("Driver");
        publicIdentifiers.add("DriverAction");
        publicIdentifiers.add("DriverManager");
        publicIdentifiers.add("DriverPropertyInfo");
        publicIdentifiers.add("DropTarget");
        publicIdentifiers.add("DropTarget$DropTargetAutoScroller");
        publicIdentifiers.add("DropTargetAdapter");
        publicIdentifiers.add("DropTargetContext$TransferableProxy");
        publicIdentifiers.add("DropTargetContextPeer");
        publicIdentifiers.add("DropTargetContextWrapper");
        publicIdentifiers.add("DropTargetDragEvent");
        publicIdentifiers.add("DropTargetDropEvent");
        publicIdentifiers.add("DropTargetEvent");
        publicIdentifiers.add("DropTargetListener");
        publicIdentifiers.add("DropTargetPeer");
        publicIdentifiers.add("DSAKey");
        publicIdentifiers.add("DSAKeyFactory");
        publicIdentifiers.add("DSAKeyPairGenerator");
        publicIdentifiers.add("DSAKeyValue");
        publicIdentifiers.add("DSAKeyValueResolver");
        publicIdentifiers.add("DSAParameterGenerator");
        publicIdentifiers.add("DSAParameters");
        publicIdentifiers.add("DSAParameterSpec");
        publicIdentifiers.add("DSAParams");
        publicIdentifiers.add("DSAPrivateKey");
        publicIdentifiers.add("DSAPrivateKeySpec");
        publicIdentifiers.add("DSAPublicKey");
        publicIdentifiers.add("DSAPublicKeySpec");
        publicIdentifiers.add("DSO");
        publicIdentifiers.add("DSTORE");
        publicIdentifiers.add("DSUB");
        publicIdentifiers.add("DTD");
        publicIdentifiers.add("DTDConfiguration");
        publicIdentifiers.add("DTDConstants");
        publicIdentifiers.add("DTDDVFactory");
        publicIdentifiers.add("DTDDVFactoryImpl");
        publicIdentifiers.add("DTDEvent");
        publicIdentifiers.add("DTDGrammar");
        publicIdentifiers.add("DTDGrammarBucket");
        publicIdentifiers.add("DTDGrammarUtil");
        publicIdentifiers.add("DTDHandler");
        publicIdentifiers.add("DTDParser");
        publicIdentifiers.add("DTM");
        publicIdentifiers.add("DTMAxisIterator");
        publicIdentifiers.add("DTMAxisIteratorBase");
        publicIdentifiers.add("DTMAxisIterNodeList");
        publicIdentifiers.add("DTMAxisTraverser");
        publicIdentifiers.add("DTMChildIterNodeList");
        publicIdentifiers.add("DTMDefaultBase");
        publicIdentifiers.add("DTMDefaultBaseIterators");
        publicIdentifiers.add("DTMDefaultBaseIterators$AncestorIterator");
        publicIdentifiers.add("DTMDefaultBaseIterators$DescendantIterator");
        publicIdentifiers.add("DTMDefaultBaseIterators$FollowingIterator");
        publicIdentifiers.add("DTMDefaultBaseIterators$FollowingSiblingIterator");
        publicIdentifiers.add("DTMDefaultBaseIterators$InternalAxisIteratorBase");
        publicIdentifiers.add("DTMDefaultBaseIterators$NamespaceIterator");
        publicIdentifiers.add("DTMDefaultBaseIterators$NthDescendantIterator");
        publicIdentifiers.add("DTMDefaultBaseIterators$PrecedingIterator");
        publicIdentifiers.add("DTMDefaultBaseIterators$PrecedingSiblingIterator");
        publicIdentifiers.add("DTMDefaultBaseIterators$RootIterator");
        publicIdentifiers.add("DTMDefaultBaseIterators$SingletonIterator");
        publicIdentifiers.add("DTMDefaultBaseIterators$TypedNamespaceIterator");
        publicIdentifiers.add("DTMDefaultBaseIterators$TypedRootIterator");
        publicIdentifiers.add("DTMDefaultBaseTraversers");
        publicIdentifiers.add("DTMDocumentImpl");
        publicIdentifiers.add("DTMDOMException");
        publicIdentifiers.add("DTMException");
        publicIdentifiers.add("DTMFilter");
        publicIdentifiers.add("DTMIterator");
        publicIdentifiers.add("DTMManager");
        publicIdentifiers.add("DTMManagerDefault");
        publicIdentifiers.add("DTMNamedNodeMap");
        publicIdentifiers.add("DTMNamedNodeMap$DTMException");
        publicIdentifiers.add("DTMNodeIterator");
        publicIdentifiers.add("DTMNodeList");
        publicIdentifiers.add("DTMNodeListBase");
        publicIdentifiers.add("DTMNodeProxy");
        publicIdentifiers.add("DTMSafeStringPool");
        publicIdentifiers.add("DTMStringPool");
        publicIdentifiers.add("DTMTreeWalker");
        publicIdentifiers.add("DTMWSFilter");
        publicIdentifiers.add("DumbTerminal");
        publicIdentifiers.add("DummyDebugger");
        publicIdentifiers.add("DummyEvent");
        publicIdentifiers.add("DummyScope");
        publicIdentifiers.add("DummySymbolFinder");
        publicIdentifiers.add("DumpExports");
        publicIdentifiers.add("DUP");
        publicIdentifiers.add("DUP2");
        publicIdentifiers.add("DUP2_X1");
        publicIdentifiers.add("DUP2_X2");
        publicIdentifiers.add("DuplicateFormatFlagsException");
        publicIdentifiers.add("DuplicateRequestException");
        publicIdentifiers.add("DUP_X1");
        publicIdentifiers.add("DUP_X2");
        publicIdentifiers.add("Duration");
        publicIdentifiers.add("DurationDV");
        publicIdentifiers.add("DVFactoryException");
        publicIdentifiers.add("DwarfParser");
        publicIdentifiers.add("DynamicCallSiteDesc");
        publicIdentifiers.add("DynamicConstantDesc");
        publicIdentifiers.add("DynamicMBean");
        publicIdentifiers.add("DynamicMBean2");
        publicIdentifiers.add("Enum.EnumDesc");
        publicIdentifiers.add("ECDSAOperations");
        publicIdentifiers.add("ECDSAOperations$Nonce");
        publicIdentifiers.add("ECDSAOperations$Seed");
        publicIdentifiers.add("ECDSAUtils$ECCurveDefinition");
        publicIdentifiers.add("ECField");
        publicIdentifiers.add("ECFieldF2m");
        publicIdentifiers.add("ECFieldFp");
        publicIdentifiers.add("ECGenParameterSpec");
        publicIdentifiers.add("ECKey");
        publicIdentifiers.add("ECKeySizeParameterSpec");
        publicIdentifiers.add("ECKeyValue");
        publicIdentifiers.add("ECKeyValueResolver");
        publicIdentifiers.add("ECOperations");
        publicIdentifiers.add("ECParameterSpec");
        publicIdentifiers.add("ECPoint");
        publicIdentifiers.add("ECPrivateKey");
        publicIdentifiers.add("ECPrivateKeySpec");
        publicIdentifiers.add("ECPublicKey");
        publicIdentifiers.add("ECPublicKeySpec");
        publicIdentifiers.add("Ed25519Operations");
        publicIdentifiers.add("Ed448Operations");
        publicIdentifiers.add("EdDSAAlgorithmParameters");
        publicIdentifiers.add("EdDSAKeyFactory");
        publicIdentifiers.add("EdDSAKeyFactory$Ed25519");
        publicIdentifiers.add("EdDSAKeyFactory$Ed448");
        publicIdentifiers.add("EdDSAKeyPairGenerator");
        publicIdentifiers.add("EdDSAKeyPairGenerator$Ed25519");
        publicIdentifiers.add("EdDSAKeyPairGenerator$Ed448");
        publicIdentifiers.add("EdDSAOperations");
        publicIdentifiers.add("EdDSAParameters");
        publicIdentifiers.add("EdDSAParameters$Digester");
        publicIdentifiers.add("EdDSAParameters$DigesterFactory");
        publicIdentifiers.add("EdDSAParameterSpec");
        publicIdentifiers.add("EdDSASignature");
        publicIdentifiers.add("EdDSASignature$Ed25519");
        publicIdentifiers.add("EdDSASignature$Ed448");
        publicIdentifiers.add("EdECKey");
        publicIdentifiers.add("EdECOperations");
        publicIdentifiers.add("EdECPrivateKey");
        publicIdentifiers.add("EdECPublicKey");
        publicIdentifiers.add("EDIPartyName");
        publicIdentifiers.add("EditableAtEndDocument");
        publicIdentifiers.add("Editor");
        publicIdentifiers.add("EditorCommands");
        publicIdentifiers.add("EditorFactory");
        publicIdentifiers.add("EditorKit");
        publicIdentifiers.add("EditPadProvider");
        publicIdentifiers.add("Effect$ArrayCache");
        publicIdentifiers.add("Element");
        publicIdentifiers.add("ElementCSSInlineStyle");
        publicIdentifiers.add("ElementDefinitionImpl");
        publicIdentifiers.add("ElementFilter");
        publicIdentifiers.add("ElementHandler");
        publicIdentifiers.add("ElementImpl");
        publicIdentifiers.add("ElementIterator");
        publicIdentifiers.add("ElementKindVisitor14");
        publicIdentifiers.add("ElementKindVisitor6");
        publicIdentifiers.add("ElementKindVisitor7");
        publicIdentifiers.add("ElementKindVisitor8");
        publicIdentifiers.add("ElementKindVisitor9");
        publicIdentifiers.add("ElementListWriter");
        publicIdentifiers.add("ElementNSImpl");
        publicIdentifiers.add("ElementProxy");
        publicIdentifiers.add("ElementPSVI");
        publicIdentifiers.add("ElementPSVImpl");
        publicIdentifiers.add("Elements");
        publicIdentifiers.add("ElementScanner14");
        publicIdentifiers.add("ElementScanner6");
        publicIdentifiers.add("ElementScanner7");
        publicIdentifiers.add("ElementScanner8");
        publicIdentifiers.add("ElementScanner9");
        publicIdentifiers.add("ElementsTable");
        publicIdentifiers.add("ElementState");
        publicIdentifiers.add("ElementTraversal");
        publicIdentifiers.add("ElementValue");
        publicIdentifiers.add("ElementValueGen");
        publicIdentifiers.add("ElementValuePair");
        publicIdentifiers.add("ElementValuePairGen");
        publicIdentifiers.add("ElementVisitor");
        publicIdentifiers.add("ELFException");
        publicIdentifiers.add("ELFFile");
        publicIdentifiers.add("ELFFileParser");
        publicIdentifiers.add("ELFHashTable");
        publicIdentifiers.add("ELFHeader");
        publicIdentifiers.add("ELFProgramHeader");
        publicIdentifiers.add("ELFSectionHeader");
        publicIdentifiers.add("ELFStringTable");
        publicIdentifiers.add("ELFSymbol");
        publicIdentifiers.add("Ellipse2D");
        publicIdentifiers.add("Ellipse2D$Double");
        publicIdentifiers.add("Ellipse2D$Float");
        publicIdentifiers.add("EllipticCurve");
        publicIdentifiers.add("EmbeddedFrame");
        publicIdentifiers.add("Empty");
        publicIdentifiers.add("EmptyBorder");
        publicIdentifiers.add("EmptySerializer");
        publicIdentifiers.add("EmptyStackException");
        publicIdentifiers.add("EmptyStatementTree");
        publicIdentifiers.add("EmptyVisitor");
        publicIdentifiers.add("Enabled");
        publicIdentifiers.add("EncAPRepPart");
        publicIdentifiers.add("EncASRepPart");
        publicIdentifiers.add("EncKDCRepPart");
        publicIdentifiers.add("EncKrbCredPart");
        publicIdentifiers.add("EnclosingMethod");
        publicIdentifiers.add("EnclosingMethod_attribute");
        publicIdentifiers.add("EncodedKeySpec");
        publicIdentifiers.add("EncodedSpeculationReason");
        publicIdentifiers.add("Encoder");
        publicIdentifiers.add("EncodingInfo");
        publicIdentifiers.add("EncodingMap");
        publicIdentifiers.add("EncryptedData");
        publicIdentifiers.add("EncryptedPrivateKeyInfo");
        publicIdentifiers.add("EncryptionKey");
        publicIdentifiers.add("EncTGSRepPart");
        publicIdentifiers.add("EncTicketPart");
        publicIdentifiers.add("EndDocument");
        publicIdentifiers.add("EndDocumentEvent");
        publicIdentifiers.add("EndElement");
        publicIdentifiers.add("EndElementEvent");
        publicIdentifiers.add("EndElementTree");
        publicIdentifiers.add("EndOfFileException");
        publicIdentifiers.add("Endpoint");
        publicIdentifiers.add("EndPosTable");
        publicIdentifiers.add("EnhancedForLoopTree");
        publicIdentifiers.add("Enter");
        publicIdentifiers.add("Entity");
        publicIdentifiers.add("Entity$ExternalEntity");
        publicIdentifiers.add("Entity$InternalEntity");
        publicIdentifiers.add("Entity$ScannedEntity");
        publicIdentifiers.add("ENTITYDatatypeValidator");
        publicIdentifiers.add("EntityDeclaration");
        publicIdentifiers.add("EntityDeclarationImpl");
        publicIdentifiers.add("EntityDV");
        publicIdentifiers.add("EntityImpl");
        publicIdentifiers.add("EntityReference");
        publicIdentifiers.add("EntityReferenceEvent");
        publicIdentifiers.add("EntityReferenceImpl");
        publicIdentifiers.add("EntityResolver");
        publicIdentifiers.add("EntityResolver2");
        publicIdentifiers.add("EntityResolver2Wrapper");
        publicIdentifiers.add("EntityResolverWrapper");
        publicIdentifiers.add("EntityState");
        publicIdentifiers.add("EntityTree");
        publicIdentifiers.add("EntropySource");
        publicIdentifiers.add("Enum");
        publicIdentifiers.add("EnumCompleter");
        publicIdentifiers.add("EnumConstantBuilder");
        publicIdentifiers.add("EnumConstantNotPresentException");
        publicIdentifiers.add("EnumConstantNotPresentExceptionProxy");
        publicIdentifiers.add("EnumConstantWriter");
        publicIdentifiers.add("EnumConstantWriterImpl");
        publicIdentifiers.add("EnumControl");
        publicIdentifiers.add("EnumControl$Type");
        publicIdentifiers.add("EnumConverter");
        publicIdentifiers.add("EnumElementValue");
        publicIdentifiers.add("EnumElementValueGen");
        publicIdentifiers.add("Enumeration");
        publicIdentifiers.add("EnumMap");
        publicIdentifiers.add("EnumSet");
        publicIdentifiers.add("EnumSyntax");
        publicIdentifiers.add("EnumType");
        publicIdentifiers.add("Env");
        publicIdentifiers.add("EnvHelp");
        publicIdentifiers.add("EnvUtils");
        publicIdentifiers.add("EOFError");
        publicIdentifiers.add("EOFException");
        publicIdentifiers.add("EPollSelectorProvider");
        publicIdentifiers.add("EpsilonHeap");
        publicIdentifiers.add("Equals");
        publicIdentifiers.add("Era");
        publicIdentifiers.add("ErroneousSnippet");
        publicIdentifiers.add("ErroneousTree");
        publicIdentifiers.add("Error");
        publicIdentifiers.add("ErrorFrame");
        publicIdentifiers.add("ErrorHandler");
        publicIdentifiers.add("ErrorHandlerAdaptor");
        publicIdentifiers.add("ErrorHandlerProxy");
        publicIdentifiers.add("ErrorHandlerWrapper");
        publicIdentifiers.add("ErrorListener");
        publicIdentifiers.add("ErrorManager");
        publicIdentifiers.add("ErrorMessages");
        publicIdentifiers.add("ErrorMessages_de");
        publicIdentifiers.add("ErrorMessages_ja");
        publicIdentifiers.add("ErrorMessages_zh_CN");
        publicIdentifiers.add("ErrorType");
        publicIdentifiers.add("EtchedBorder");
        publicIdentifiers.add("EType");
        publicIdentifiers.add("ETypeInfo");
        publicIdentifiers.add("ETypeInfo2");
        publicIdentifiers.add("EUC_CN");
        publicIdentifiers.add("EUC_JP");
        publicIdentifiers.add("EUC_JP_LINUX");
        publicIdentifiers.add("EUC_JP_Open");
        publicIdentifiers.add("EUC_KR");
        publicIdentifiers.add("EUC_TW");
        publicIdentifiers.add("EUC_TW$Decoder");
        publicIdentifiers.add("EUC_TW$Encoder");
        publicIdentifiers.add("EvalException");
        publicIdentifiers.add("Event");
        publicIdentifiers.add("Event$Reporter");
        publicIdentifiers.add("EventByteStream");
        publicIdentifiers.add("EventContext");
        publicIdentifiers.add("EventDirContext");
        publicIdentifiers.add("EventException");
        publicIdentifiers.add("EventFilter");
        publicIdentifiers.add("EventFilterSupport");
        publicIdentifiers.add("EventHandler");
        publicIdentifiers.add("EventID");
        publicIdentifiers.add("EventImpl");
        publicIdentifiers.add("EventIterator");
        publicIdentifiers.add("EventListener");
        publicIdentifiers.add("EventListenerList");
        publicIdentifiers.add("EventListenerProxy");
        publicIdentifiers.add("EventObject");
        publicIdentifiers.add("EventProvider");
        publicIdentifiers.add("EventProvider$CompilationEvent");
        publicIdentifiers.add("EventProvider$CompilerFailureEvent");
        publicIdentifiers.add("EventProvider$InstantEvent");
        publicIdentifiers.add("EventProvider$TimedEvent");
        publicIdentifiers.add("EventQueue");
        publicIdentifiers.add("EventQueueImpl");
        publicIdentifiers.add("EventQueueItem");
        publicIdentifiers.add("EventQueueMonitor");
        publicIdentifiers.add("EventReaderDelegate");
        publicIdentifiers.add("EventRequest");
        publicIdentifiers.add("EventRequestManager");
        publicIdentifiers.add("EventSet");
        publicIdentifiers.add("EventSetDescriptor");
        publicIdentifiers.add("EventSetImpl");
        publicIdentifiers.add("EventSetImpl$Itr");
        publicIdentifiers.add("EventSettings");
        publicIdentifiers.add("EventSettingsModifier");
        publicIdentifiers.add("EventStream");
        publicIdentifiers.add("EventTarget");
        publicIdentifiers.add("Exception");
        publicIdentifiers.add("ExceptionBlob");
        publicIdentifiers.add("ExceptionEvent");
        publicIdentifiers.add("ExceptionInInitializerError");
        publicIdentifiers.add("ExceptionListener");
        publicIdentifiers.add("ExceptionProxy");
        publicIdentifiers.add("ExceptionRequest");
        publicIdentifiers.add("Exceptions_attribute");
        publicIdentifiers.add("ExceptionTableElement");
        publicIdentifiers.add("ExceptionThrower");
        publicIdentifiers.add("Exchanger");
        publicIdentifiers.add("ExecPty");
        publicIdentifiers.add("Executable");
        publicIdentifiers.add("ExecutableElement");
        publicIdentifiers.add("ExecutableImage");
        publicIdentifiers.add("ExecutableType");
        publicIdentifiers.add("ExecutionControl");
        publicIdentifiers.add("ExecutionControl$ClassInstallException");
        publicIdentifiers.add("ExecutionControl$EngineTerminationException");
        publicIdentifiers.add("ExecutionControl$ExecutionControlException");
        publicIdentifiers.add("ExecutionControl$InternalException");
        publicIdentifiers.add("ExecutionControl$NotImplementedException");
        publicIdentifiers.add("ExecutionControl$ResolutionException");
        publicIdentifiers.add("ExecutionControl$RunException");
        publicIdentifiers.add("ExecutionControl$StoppedException");
        publicIdentifiers.add("ExecutionControl$UserException");
        publicIdentifiers.add("ExecutionControlProvider");
        publicIdentifiers.add("ExecutionEnv");
        publicIdentifiers.add("ExecutionException");
        publicIdentifiers.add("Executor");
        publicIdentifiers.add("ExecutorCompletionService");
        publicIdentifiers.add("Executors");
        publicIdentifiers.add("ExecutorService");
        publicIdentifiers.add("ExemptionMechanism");
        publicIdentifiers.add("ExemptionMechanismException");
        publicIdentifiers.add("ExemptionMechanismSpi");
        publicIdentifiers.add("ExitAction");
        publicIdentifiers.add("ExpandedNameTable");
        publicIdentifiers.add("Expander");
        publicIdentifiers.add("ExpandVetoException");
        publicIdentifiers.add("Experimental");
        publicIdentifiers.add("ExportDirectoryTable");
        publicIdentifiers.add("ExportException");
        publicIdentifiers.add("ExportsTree");
        publicIdentifiers.add("Expression");
        publicIdentifiers.add("ExpressionContext");
        publicIdentifiers.add("ExpressionExecuter");
        publicIdentifiers.add("ExpressionNode");
        publicIdentifiers.add("ExpressionOwner");
        publicIdentifiers.add("ExpressionParser");
        publicIdentifiers.add("ExpressionParser$GetFrame");
        publicIdentifiers.add("ExpressionParserConstants");
        publicIdentifiers.add("ExpressionParserTokenManager");
        publicIdentifiers.add("ExpressionResolver");
        publicIdentifiers.add("ExpressionSnippet");
        publicIdentifiers.add("ExpressionStatementTree");
        publicIdentifiers.add("ExpressionToTypeInfo$ExpressionInfo");
        publicIdentifiers.add("ExpressionTree");
        publicIdentifiers.add("ExsltBase");
        publicIdentifiers.add("ExsltCommon");
        publicIdentifiers.add("ExsltDatetime");
        publicIdentifiers.add("ExsltDynamic");
        publicIdentifiers.add("ExsltMath");
        publicIdentifiers.add("ExsltSets");
        publicIdentifiers.add("ExsltStrings");
        publicIdentifiers.add("ExtendedBufferCapabilities");
        publicIdentifiers.add("ExtendedCharsets");
        publicIdentifiers.add("ExtendedGSSContext");
        publicIdentifiers.add("ExtendedGSSCredential");
        publicIdentifiers.add("ExtendedHomogeneousPoint");
        publicIdentifiers.add("ExtendedHomogeneousPoint$Immutable");
        publicIdentifiers.add("ExtendedHomogeneousPoint$Mutable");
        publicIdentifiers.add("ExtendedKeyCodes");
        publicIdentifiers.add("ExtendedKeyUsageExtension");
        publicIdentifiers.add("ExtendedMapMode");
        publicIdentifiers.add("ExtendedRequest");
        publicIdentifiers.add("ExtendedResponse");
        publicIdentifiers.add("ExtendedSAX");
        publicIdentifiers.add("ExtendedSchemaDVFactoryImpl");
        publicIdentifiers.add("ExtendedSocketOptions");
        publicIdentifiers.add("ExtendedSSLSession");
        publicIdentifiers.add("ExtendedTextLabel");
        publicIdentifiers.add("Extension");
        publicIdentifiers.add("Extensions");
        publicIdentifiers.add("ExtensionsProvider");
        publicIdentifiers.add("Extern");
        publicIdentifiers.add("ExternalEditor");
        publicIdentifiers.add("Externalizable");
        publicIdentifiers.add("ExternalSpecsWriter");
        publicIdentifiers.add("ExternalSubsetResolver");
        publicIdentifiers.add("ExternalTerminal");
        publicIdentifiers.add("ExternalVFrame");
    }

    private void addPublicIdentifiersFH() {
        publicIdentifiers.add("Float");
        publicIdentifiers.add("F2D");
        publicIdentifiers.add("F2I");
        publicIdentifiers.add("F2L");
        publicIdentifiers.add("FactoryConfigurationError");
        publicIdentifiers.add("FADD");
        publicIdentifiers.add("FailedLoginException");
        publicIdentifiers.add("FailOverExecutionControlProvider");
        publicIdentifiers.add("FallbackLocaleProviderAdapter");
        publicIdentifiers.add("FALOAD");
        publicIdentifiers.add("FASTORE");
        publicIdentifiers.add("FastStringBuffer");
        publicIdentifiers.add("FatalError");
        publicIdentifiers.add("FcFontConfiguration");
        publicIdentifiers.add("FcFontManager");
        publicIdentifiers.add("FCMPG");
        publicIdentifiers.add("FCMPL");
        publicIdentifiers.add("FCONST");
        publicIdentifiers.add("FDBigInteger");
        publicIdentifiers.add("FDIV");
        publicIdentifiers.add("FdLibm$Cbrt");
        publicIdentifiers.add("FdLibm$Hypot");
        publicIdentifiers.add("FdLibm$Pow");
        publicIdentifiers.add("FeatureDescriptor");
        publicIdentifiers.add("FeaturePropertyBase");
        publicIdentifiers.add("FeatureState");
        publicIdentifiers.add("Field");
        publicIdentifiers.add("Field$Matcher");
        publicIdentifiers.add("Field$XPath");
        publicIdentifiers.add("FieldAccessor");
        publicIdentifiers.add("FieldActivator");
        publicIdentifiers.add("FieldBuilder");
        publicIdentifiers.add("FieldGen");
        publicIdentifiers.add("FieldGenOrMethodGen");
        publicIdentifiers.add("FieldIdentifier");
        publicIdentifiers.add("FieldImpl");
        publicIdentifiers.add("FieldInsnNode");
        publicIdentifiers.add("FieldInstruction");
        publicIdentifiers.add("FieldNode");
        publicIdentifiers.add("FieldObserver");
        publicIdentifiers.add("FieldOrMethod");
        publicIdentifiers.add("FieldPosition");
        publicIdentifiers.add("FieldRemapper");
        publicIdentifiers.add("FieldRepository");
        publicIdentifiers.add("FieldTreeNodeAdapter");
        publicIdentifiers.add("FieldType");
        publicIdentifiers.add("FieldType$ArrayInfo");
        publicIdentifiers.add("FieldTypeSignature");
        publicIdentifiers.add("FieldView");
        publicIdentifiers.add("FieldVisitor");
        publicIdentifiers.add("FieldWriter");
        publicIdentifiers.add("FieldWriterImpl");
        publicIdentifiers.add("File");
        publicIdentifiers.add("FileAccess");
        publicIdentifiers.add("FileAlreadyExistsException");
        publicIdentifiers.add("FileAttribute");
        publicIdentifiers.add("FileAttributeView");
        publicIdentifiers.add("FileCacheImageInputStream");
        publicIdentifiers.add("FileCacheImageOutputStream");
        publicIdentifiers.add("FileCCacheConstants");
        publicIdentifiers.add("FileChannel");
        publicIdentifiers.add("FileChannel$MapMode");
        publicIdentifiers.add("FileChannelImpl");
        publicIdentifiers.add("FileChooserUI");
        publicIdentifiers.add("FileCredentialsCache");
        publicIdentifiers.add("FileDialog");
        publicIdentifiers.add("FileDialogPeer");
        publicIdentifiers.add("FileFilter");
        publicIdentifiers.add("FileFont");
        publicIdentifiers.add("FileFontStrike");
        publicIdentifiers.add("FileHandler");
        publicIdentifiers.add("FileImageInputStream");
        publicIdentifiers.add("FileImageInputStreamSpi");
        publicIdentifiers.add("FileImageOutputStream");
        publicIdentifiers.add("FileImageOutputStreamSpi");
        publicIdentifiers.add("FileImageSource");
        publicIdentifiers.add("FileInputStream");
        publicIdentifiers.add("FileKey");
        publicIdentifiers.add("FileLock");
        publicIdentifiers.add("FileLockImpl");
        publicIdentifiers.add("FileLockInterruptionException");
        publicIdentifiers.add("FileLoginModule");
        publicIdentifiers.add("FileMapInfo");
        publicIdentifiers.add("FileMapInfo$FileMapHeader");
        publicIdentifiers.add("FileMenu");
        publicIdentifiers.add("FileMonitoredVm");
        publicIdentifiers.add("FileNameCompleter");
        publicIdentifiers.add("FilenameFilter");
        publicIdentifiers.add("FileNameMap");
        publicIdentifiers.add("FileNotFoundException");
        publicIdentifiers.add("FileObject");
        publicIdentifiers.add("FileOutputStream");
        publicIdentifiers.add("FileOwnerAttributeView");
        publicIdentifiers.add("FilePane");
        publicIdentifiers.add("FilePane$FileChooserUIAccessor");
        publicIdentifiers.add("FilePane$FileRenderer");
        publicIdentifiers.add("FilePaths");
        publicIdentifiers.add("FilePermCompat");
        publicIdentifiers.add("Filer");
        publicIdentifiers.add("FileReader");
        publicIdentifiers.add("FilerException");
        publicIdentifiers.add("FilesEvent");
        publicIdentifiers.add("FileStore");
        publicIdentifiers.add("FileStoreAttributeView");
        publicIdentifiers.add("FileSystem");
        publicIdentifiers.add("FileSystemAlreadyExistsException");
        publicIdentifiers.add("FileSystemException");
        publicIdentifiers.add("FileSystemImpl");
        publicIdentifiers.add("FileSystemLoopException");
        publicIdentifiers.add("FileSystemNotFoundException");
        publicIdentifiers.add("FileSystemProvider");
        publicIdentifiers.add("FileSystemView");
        publicIdentifiers.add("FileTypeDetector");
        publicIdentifiers.add("FileURLConnection");
        publicIdentifiers.add("FileURLMapper");
        publicIdentifiers.add("FileView");
        publicIdentifiers.add("FileVisitor");
        publicIdentifiers.add("FileWriter");
        publicIdentifiers.add("FillParallelogram");
        publicIdentifiers.add("FillPath");
        publicIdentifiers.add("FillRect");
        publicIdentifiers.add("FillRect$General");
        publicIdentifiers.add("FillSpans");
        publicIdentifiers.add("Filter");
        publicIdentifiers.add("Filter$Chain");
        publicIdentifiers.add("FilteredImageSource");
        publicIdentifiers.add("FilteredMemberList");
        publicIdentifiers.add("FilteredRowSet");
        publicIdentifiers.add("FilteredRowSetImpl");
        publicIdentifiers.add("FilterExprIterator");
        publicIdentifiers.add("FilterExprIteratorSimple");
        publicIdentifiers.add("FilterExprWalker");
        publicIdentifiers.add("FilterInputStream");
        publicIdentifiers.add("FilterOutputStream");
        publicIdentifiers.add("FilterReader");
        publicIdentifiers.add("Filters");
        publicIdentifiers.add("FilterWriter");
        publicIdentifiers.add("FinalizerInfo");
        publicIdentifiers.add("FindAction");
        publicIdentifiers.add("FindClassesAction");
        publicIdentifiers.add("FindCrashesAction");
        publicIdentifiers.add("FindException");
        publicIdentifiers.add("FindInCodeCachePanel");
        publicIdentifiers.add("FindInHeapPanel");
        publicIdentifiers.add("FindObjectByType");
        publicIdentifiers.add("FindPanel");
        publicIdentifiers.add("FinishAction");
        publicIdentifiers.add("Finishings");
        publicIdentifiers.add("FixedHeightLayoutCache");
        publicIdentifiers.add("FlagDumper");
        publicIdentifiers.add("Flags");
        publicIdentifiers.add("Flags$Flag");
        publicIdentifiers.add("FlatteningPathIterator");
        publicIdentifiers.add("FlavorEvent");
        publicIdentifiers.add("FlavorException");
        publicIdentifiers.add("FlavorListener");
        publicIdentifiers.add("FlavorMap");
        publicIdentifiers.add("FlavorTable");
        publicIdentifiers.add("FlightRecorderListener");
        publicIdentifiers.add("FlightRecorderMXBean");
        publicIdentifiers.add("FLOAD");
        publicIdentifiers.add("FloatBuffer");
        publicIdentifiers.add("FloatConsts");
        publicIdentifiers.add("FloatControl");
        publicIdentifiers.add("FloatControl$Type");
        publicIdentifiers.add("FloatDV");
        publicIdentifiers.add("FloatEditor");
        publicIdentifiers.add("FloatField");
        publicIdentifiers.add("FloatingDecimal");
        publicIdentifiers.add("FloatingDecimal$BinaryToASCIIConverter");
        publicIdentifiers.add("FloatSignature");
        publicIdentifiers.add("FloatTreeNodeAdapter");
        publicIdentifiers.add("FloatType");
        publicIdentifiers.add("FloatTypeImpl");
        publicIdentifiers.add("FloatValue");
        publicIdentifiers.add("FloatValueImpl");
        publicIdentifiers.add("FloatVector");
        publicIdentifiers.add("Flow");
        publicIdentifiers.add("Flow$AssignAnalyzer");
        publicIdentifiers.add("Flow$AssignAnalyzer$AssignPendingExit");
        publicIdentifiers.add("Flow$Processor");
        publicIdentifiers.add("Flow$Publisher");
        publicIdentifiers.add("Flow$Subscriber");
        publicIdentifiers.add("Flow$Subscription");
        publicIdentifiers.add("FlowLayout");
        publicIdentifiers.add("FlowTube");
        publicIdentifiers.add("FlowTube$AbstractTubePublisher");
        publicIdentifiers.add("FlowTube$AbstractTubeSubscriber");
        publicIdentifiers.add("FlowTube$TubePublisher");
        publicIdentifiers.add("FlowTube$TubeSubscriber");
        publicIdentifiers.add("FlowView");
        publicIdentifiers.add("FlowView$FlowStrategy");
        publicIdentifiers.add("Flushable");
        publicIdentifiers.add("FMUL");
        publicIdentifiers.add("FNEG");
        publicIdentifiers.add("FocusAdapter");
        publicIdentifiers.add("FocusEvent");
        publicIdentifiers.add("FocusListener");
        publicIdentifiers.add("FocusManager");
        publicIdentifiers.add("FocusTraversalPolicy");
        publicIdentifiers.add("Font");
        publicIdentifiers.add("Font2D");
        publicIdentifiers.add("FontAccess");
        publicIdentifiers.add("FontConfigManager");
        publicIdentifiers.add("FontConfigManager$FcCompFont");
        publicIdentifiers.add("FontConfigManager$FontConfigFont");
        publicIdentifiers.add("FontConfigManager$FontConfigInfo");
        publicIdentifiers.add("FontConfiguration");
        publicIdentifiers.add("FontDescriptor");
        publicIdentifiers.add("FontEditor");
        publicIdentifiers.add("FontFamily");
        publicIdentifiers.add("FontFormatException");
        publicIdentifiers.add("FontInfo");
        publicIdentifiers.add("FontManager");
        publicIdentifiers.add("FontManagerForSGE");
        publicIdentifiers.add("FontManagerNativeLibrary");
        publicIdentifiers.add("FontMetrics");
        publicIdentifiers.add("FontPeer");
        publicIdentifiers.add("FontRenderContext");
        publicIdentifiers.add("FontScaler");
        publicIdentifiers.add("FontScalerException");
        publicIdentifiers.add("FontStrike");
        publicIdentifiers.add("FontStrikeDesc");
        publicIdentifiers.add("FontSubstitution");
        publicIdentifiers.add("FontSupport");
        publicIdentifiers.add("FontUIResource");
        publicIdentifiers.add("ForceInline");
        publicIdentifiers.add("ForkJoinPool");
        publicIdentifiers.add("ForkJoinPool$ForkJoinWorkerThreadFactory");
        publicIdentifiers.add("ForkJoinPool$ManagedBlocker");
        publicIdentifiers.add("ForkJoinTask");
        publicIdentifiers.add("ForkJoinWorkerThread");
        publicIdentifiers.add("ForLoopTree");
        publicIdentifiers.add("FormalTypeParameter");
        publicIdentifiers.add("Format");
        publicIdentifiers.add("Format$Field");
        publicIdentifiers.add("FormatConversionProvider");
        publicIdentifiers.add("FormatData");
        publicIdentifiers.add("FormatData_af");
        publicIdentifiers.add("FormatData_af_NA");
        publicIdentifiers.add("FormatData_agq");
        publicIdentifiers.add("FormatData_ak");
        publicIdentifiers.add("FormatData_am");
        publicIdentifiers.add("FormatData_ar");
        publicIdentifiers.add("FormatData_ar_AE");
        publicIdentifiers.add("FormatData_ar_DZ");
        publicIdentifiers.add("FormatData_ar_EH");
        publicIdentifiers.add("FormatData_ar_IL");
        publicIdentifiers.add("FormatData_ar_IQ");
        publicIdentifiers.add("FormatData_ar_JO");
        publicIdentifiers.add("FormatData_ar_KM");
        publicIdentifiers.add("FormatData_ar_LB");
        publicIdentifiers.add("FormatData_ar_LY");
        publicIdentifiers.add("FormatData_ar_MA");
        publicIdentifiers.add("FormatData_ar_MR");
        publicIdentifiers.add("FormatData_ar_PS");
        publicIdentifiers.add("FormatData_ar_SA");
        publicIdentifiers.add("FormatData_ar_SO");
        publicIdentifiers.add("FormatData_ar_SY");
        publicIdentifiers.add("FormatData_ar_TN");
        publicIdentifiers.add("FormatData_as");
        publicIdentifiers.add("FormatData_asa");
        publicIdentifiers.add("FormatData_ast");
        publicIdentifiers.add("FormatData_az");
        publicIdentifiers.add("FormatData_az_Cyrl");
        publicIdentifiers.add("FormatData_bas");
        publicIdentifiers.add("FormatData_be");
        publicIdentifiers.add("FormatData_be_BY");
        publicIdentifiers.add("FormatData_bem");
        publicIdentifiers.add("FormatData_be_TARASK");
        publicIdentifiers.add("FormatData_bez");
        publicIdentifiers.add("FormatData_bg");
        publicIdentifiers.add("FormatData_bg_BG");
        publicIdentifiers.add("FormatData_bgc");
        publicIdentifiers.add("FormatData_bho");
        publicIdentifiers.add("FormatData_bm");
        publicIdentifiers.add("FormatData_bn");
        publicIdentifiers.add("FormatData_bn_IN");
        publicIdentifiers.add("FormatData_bo");
        publicIdentifiers.add("FormatData_bo_IN");
        publicIdentifiers.add("FormatData_br");
        publicIdentifiers.add("FormatData_brx");
        publicIdentifiers.add("FormatData_bs");
        publicIdentifiers.add("FormatData_bs_Cyrl");
        publicIdentifiers.add("FormatData_ca");
        publicIdentifiers.add("FormatData_ca_ES");
        publicIdentifiers.add("FormatData_ccp");
        publicIdentifiers.add("FormatData_ce");
        publicIdentifiers.add("FormatData_ceb");
        publicIdentifiers.add("FormatData_cgg");
        publicIdentifiers.add("FormatData_chr");
        publicIdentifiers.add("FormatData_ckb");
        publicIdentifiers.add("FormatData_ckb_IR");
        publicIdentifiers.add("FormatData_cs");
        publicIdentifiers.add("FormatData_cs_CZ");
        publicIdentifiers.add("FormatData_cv");
        publicIdentifiers.add("FormatData_cy");
        publicIdentifiers.add("FormatData_da");
        publicIdentifiers.add("FormatData_da_DK");
        publicIdentifiers.add("FormatData_dav");
        publicIdentifiers.add("FormatData_de");
        publicIdentifiers.add("FormatData_de_AT");
        publicIdentifiers.add("FormatData_de_CH");
        publicIdentifiers.add("FormatData_de_DE");
        publicIdentifiers.add("FormatData_de_IT");
        publicIdentifiers.add("FormatData_de_LI");
        publicIdentifiers.add("FormatData_de_LU");
        publicIdentifiers.add("FormatData_dje");
        publicIdentifiers.add("FormatData_doi");
        publicIdentifiers.add("FormatData_dsb");
        publicIdentifiers.add("FormatData_dua");
        publicIdentifiers.add("FormatData_dyo");
        publicIdentifiers.add("FormatData_dz");
        publicIdentifiers.add("FormatData_ebu");
        publicIdentifiers.add("FormatData_ee");
        publicIdentifiers.add("FormatData_ee_TG");
        publicIdentifiers.add("FormatData_el");
        publicIdentifiers.add("FormatData_el_CY");
        publicIdentifiers.add("FormatData_el_GR");
        publicIdentifiers.add("FormatData_en");
        publicIdentifiers.add("FormatData_en_001");
        publicIdentifiers.add("FormatData_en_150");
        publicIdentifiers.add("FormatData_en_AE");
        publicIdentifiers.add("FormatData_en_AI");
        publicIdentifiers.add("FormatData_en_AT");
        publicIdentifiers.add("FormatData_en_AU");
        publicIdentifiers.add("FormatData_en_BE");
        publicIdentifiers.add("FormatData_en_BI");
        publicIdentifiers.add("FormatData_en_BW");
        publicIdentifiers.add("FormatData_en_BZ");
        publicIdentifiers.add("FormatData_en_CA");
        publicIdentifiers.add("FormatData_en_CC");
        publicIdentifiers.add("FormatData_en_CH");
        publicIdentifiers.add("FormatData_en_CK");
        publicIdentifiers.add("FormatData_en_CM");
        publicIdentifiers.add("FormatData_en_CX");
        publicIdentifiers.add("FormatData_en_DE");
        publicIdentifiers.add("FormatData_en_DG");
        publicIdentifiers.add("FormatData_en_DK");
        publicIdentifiers.add("FormatData_en_FI");
        publicIdentifiers.add("FormatData_en_FK");
        publicIdentifiers.add("FormatData_en_GB");
        publicIdentifiers.add("FormatData_en_GG");
        publicIdentifiers.add("FormatData_en_GI");
        publicIdentifiers.add("FormatData_en_HK");
        publicIdentifiers.add("FormatData_en_IE");
        publicIdentifiers.add("FormatData_en_IL");
        publicIdentifiers.add("FormatData_en_IM");
        publicIdentifiers.add("FormatData_en_IN");
        publicIdentifiers.add("FormatData_en_IO");
        publicIdentifiers.add("FormatData_en_JE");
        publicIdentifiers.add("FormatData_en_KE");
        publicIdentifiers.add("FormatData_en_MG");
        publicIdentifiers.add("FormatData_en_MS");
        publicIdentifiers.add("FormatData_en_MT");
        publicIdentifiers.add("FormatData_en_MU");
        publicIdentifiers.add("FormatData_en_MV");
        publicIdentifiers.add("FormatData_en_NF");
        publicIdentifiers.add("FormatData_en_NG");
        publicIdentifiers.add("FormatData_en_NL");
        publicIdentifiers.add("FormatData_en_NR");
        publicIdentifiers.add("FormatData_en_NU");
        publicIdentifiers.add("FormatData_en_NZ");
        publicIdentifiers.add("FormatData_en_PH");
        publicIdentifiers.add("FormatData_en_PK");
        publicIdentifiers.add("FormatData_en_PN");
        publicIdentifiers.add("FormatData_en_RW");
        publicIdentifiers.add("FormatData_en_SC");
        publicIdentifiers.add("FormatData_en_SE");
        publicIdentifiers.add("FormatData_en_SG");
        publicIdentifiers.add("FormatData_en_SH");
        publicIdentifiers.add("FormatData_en_SI");
        publicIdentifiers.add("FormatData_en_SX");
        publicIdentifiers.add("FormatData_en_TK");
        publicIdentifiers.add("FormatData_en_TV");
        publicIdentifiers.add("FormatData_en_TZ");
        publicIdentifiers.add("FormatData_en_UG");
        publicIdentifiers.add("FormatData_en_US");
        publicIdentifiers.add("FormatData_en_US_POSIX");
        publicIdentifiers.add("FormatData_en_ZA");
        publicIdentifiers.add("FormatData_en_ZW");
        publicIdentifiers.add("FormatData_eo");
        publicIdentifiers.add("FormatData_es");
        publicIdentifiers.add("FormatData_es_419");
        publicIdentifiers.add("FormatData_es_AR");
        publicIdentifiers.add("FormatData_es_BO");
        publicIdentifiers.add("FormatData_es_CL");
        publicIdentifiers.add("FormatData_es_CO");
        publicIdentifiers.add("FormatData_es_CR");
        publicIdentifiers.add("FormatData_es_DO");
        publicIdentifiers.add("FormatData_es_EC");
        publicIdentifiers.add("FormatData_es_ES");
        publicIdentifiers.add("FormatData_es_GQ");
        publicIdentifiers.add("FormatData_es_GT");
        publicIdentifiers.add("FormatData_es_HN");
        publicIdentifiers.add("FormatData_es_MX");
        publicIdentifiers.add("FormatData_es_NI");
        publicIdentifiers.add("FormatData_es_PA");
        publicIdentifiers.add("FormatData_es_PE");
        publicIdentifiers.add("FormatData_es_PH");
        publicIdentifiers.add("FormatData_es_PR");
        publicIdentifiers.add("FormatData_es_PY");
        publicIdentifiers.add("FormatData_es_SV");
        publicIdentifiers.add("FormatData_es_US");
        publicIdentifiers.add("FormatData_es_UY");
        publicIdentifiers.add("FormatData_es_VE");
        publicIdentifiers.add("FormatData_et");
        publicIdentifiers.add("FormatData_et_EE");
        publicIdentifiers.add("FormatData_eu");
        publicIdentifiers.add("FormatData_ewo");
        publicIdentifiers.add("FormatData_fa");
        publicIdentifiers.add("FormatData_fa_AF");
        publicIdentifiers.add("FormatData_ff");
        publicIdentifiers.add("FormatData_ff_Adlm");
        publicIdentifiers.add("FormatData_ff_Adlm_GH");
        publicIdentifiers.add("FormatData_ff_Adlm_GM");
        publicIdentifiers.add("FormatData_ff_Adlm_LR");
        publicIdentifiers.add("FormatData_ff_Adlm_MR");
        publicIdentifiers.add("FormatData_ff_Adlm_SL");
        publicIdentifiers.add("FormatData_ff_Latn_GH");
        publicIdentifiers.add("FormatData_ff_Latn_GM");
        publicIdentifiers.add("FormatData_ff_Latn_LR");
        publicIdentifiers.add("FormatData_ff_Latn_MR");
        publicIdentifiers.add("FormatData_ff_Latn_SL");
        publicIdentifiers.add("FormatData_fi");
        publicIdentifiers.add("FormatData_fi_FI");
        publicIdentifiers.add("FormatData_fil");
        publicIdentifiers.add("FormatData_fo");
        publicIdentifiers.add("FormatData_fr");
        publicIdentifiers.add("FormatData_fr_BE");
        publicIdentifiers.add("FormatData_fr_CA");
        publicIdentifiers.add("FormatData_fr_CD");
        publicIdentifiers.add("FormatData_fr_CH");
        publicIdentifiers.add("FormatData_fr_CM");
        publicIdentifiers.add("FormatData_fr_DJ");
        publicIdentifiers.add("FormatData_fr_DZ");
        publicIdentifiers.add("FormatData_fr_FR");
        publicIdentifiers.add("FormatData_fr_HT");
        publicIdentifiers.add("FormatData_fr_LU");
        publicIdentifiers.add("FormatData_fr_MA");
        publicIdentifiers.add("FormatData_fr_ML");
        publicIdentifiers.add("FormatData_fr_MR");
        publicIdentifiers.add("FormatData_frr");
        publicIdentifiers.add("FormatData_fr_RE");
        publicIdentifiers.add("FormatData_fr_SN");
        publicIdentifiers.add("FormatData_fr_SY");
        publicIdentifiers.add("FormatData_fr_TD");
        publicIdentifiers.add("FormatData_fr_TN");
        publicIdentifiers.add("FormatData_fr_VU");
        publicIdentifiers.add("FormatData_fur");
        publicIdentifiers.add("FormatData_fy");
        publicIdentifiers.add("FormatData_ga");
        publicIdentifiers.add("FormatData_ga_IE");
        publicIdentifiers.add("FormatData_gd");
        publicIdentifiers.add("FormatData_gl");
        publicIdentifiers.add("FormatData_gsw");
        publicIdentifiers.add("FormatData_gu");
        publicIdentifiers.add("FormatData_guz");
        publicIdentifiers.add("FormatData_gv");
        publicIdentifiers.add("FormatData_ha");
        publicIdentifiers.add("FormatData_ha_GH");
        publicIdentifiers.add("FormatData_haw");
        publicIdentifiers.add("FormatData_he");
        publicIdentifiers.add("FormatData_he_IL");
        publicIdentifiers.add("FormatData_hi");
        publicIdentifiers.add("FormatData_hi_IN");
        publicIdentifiers.add("FormatData_hi_Latn");
        publicIdentifiers.add("FormatData_hr");
        publicIdentifiers.add("FormatData_hr_BA");
        publicIdentifiers.add("FormatData_hr_HR");
        publicIdentifiers.add("FormatData_hsb");
        publicIdentifiers.add("FormatData_hu");
        publicIdentifiers.add("FormatData_hu_HU");
        publicIdentifiers.add("FormatData_hy");
        publicIdentifiers.add("FormatData_ia");
        publicIdentifiers.add("FormatData_id");
        publicIdentifiers.add("FormatData_id_ID");
        publicIdentifiers.add("FormatData_ig");
        publicIdentifiers.add("FormatData_ii");
        publicIdentifiers.add("FormatData_is");
        publicIdentifiers.add("FormatData_is_IS");
        publicIdentifiers.add("FormatData_it");
        publicIdentifiers.add("FormatData_it_CH");
        publicIdentifiers.add("FormatData_it_IT");
        publicIdentifiers.add("FormatData_ja");
        publicIdentifiers.add("FormatData_ja_JP");
        publicIdentifiers.add("FormatData_jgo");
        publicIdentifiers.add("FormatData_jmc");
        publicIdentifiers.add("FormatData_jv");
        publicIdentifiers.add("FormatData_ka");
        publicIdentifiers.add("FormatData_kab");
        publicIdentifiers.add("FormatData_kam");
        publicIdentifiers.add("FormatData_kde");
        publicIdentifiers.add("FormatData_kea");
        publicIdentifiers.add("FormatData_kgp");
        publicIdentifiers.add("FormatData_khq");
        publicIdentifiers.add("FormatData_ki");
        publicIdentifiers.add("FormatData_kk");
        publicIdentifiers.add("FormatData_kkj");
        publicIdentifiers.add("FormatData_kl");
        publicIdentifiers.add("FormatData_kln");
        publicIdentifiers.add("FormatData_km");
        publicIdentifiers.add("FormatData_kn");
        publicIdentifiers.add("FormatData_ko");
        publicIdentifiers.add("FormatData_kok");
        publicIdentifiers.add("FormatData_ko_KR");
        publicIdentifiers.add("FormatData_ks");
        publicIdentifiers.add("FormatData_ksb");
        publicIdentifiers.add("FormatData_ks_Deva");
        publicIdentifiers.add("FormatData_ksf");
        publicIdentifiers.add("FormatData_ksh");
        publicIdentifiers.add("FormatData_ku");
        publicIdentifiers.add("FormatData_kw");
        publicIdentifiers.add("FormatData_ky");
        publicIdentifiers.add("FormatData_lag");
        publicIdentifiers.add("FormatData_lb");
        publicIdentifiers.add("FormatData_lg");
        publicIdentifiers.add("FormatData_lkt");
        publicIdentifiers.add("FormatData_ln");
        publicIdentifiers.add("FormatData_lo");
        publicIdentifiers.add("FormatData_lrc");
        publicIdentifiers.add("FormatData_lrc_IQ");
        publicIdentifiers.add("FormatData_lt");
        publicIdentifiers.add("FormatData_lt_LT");
        publicIdentifiers.add("FormatData_lu");
        publicIdentifiers.add("FormatData_luo");
        publicIdentifiers.add("FormatData_luy");
        publicIdentifiers.add("FormatData_lv");
        publicIdentifiers.add("FormatData_lv_LV");
        publicIdentifiers.add("FormatData_mai");
        publicIdentifiers.add("FormatData_mas");
        publicIdentifiers.add("FormatData_mer");
        publicIdentifiers.add("FormatData_mfe");
        publicIdentifiers.add("FormatData_mg");
        publicIdentifiers.add("FormatData_mgh");
        publicIdentifiers.add("FormatData_mgo");
        publicIdentifiers.add("FormatData_mi");
        publicIdentifiers.add("FormatData_mk");
        publicIdentifiers.add("FormatData_mk_MK");
        publicIdentifiers.add("FormatData_ml");
        publicIdentifiers.add("FormatData_mn");
        publicIdentifiers.add("FormatData_mni");
        publicIdentifiers.add("FormatData_mr");
        publicIdentifiers.add("FormatData_ms");
        publicIdentifiers.add("FormatData_ms_BN");
        publicIdentifiers.add("FormatData_ms_ID");
        publicIdentifiers.add("FormatData_ms_MY");
        publicIdentifiers.add("FormatData_mt");
        publicIdentifiers.add("FormatData_mt_MT");
        publicIdentifiers.add("FormatData_mua");
        publicIdentifiers.add("FormatData_my");
        publicIdentifiers.add("FormatData_mzn");
        publicIdentifiers.add("FormatData_naq");
        publicIdentifiers.add("FormatData_nb");
        publicIdentifiers.add("FormatData_nd");
        publicIdentifiers.add("FormatData_nds");
        publicIdentifiers.add("FormatData_ne");
        publicIdentifiers.add("FormatData_ne_IN");
        publicIdentifiers.add("FormatData_nl");
        publicIdentifiers.add("FormatData_nl_BE");
        publicIdentifiers.add("FormatData_nl_NL");
        publicIdentifiers.add("FormatData_nmg");
        publicIdentifiers.add("FormatData_nn");
        publicIdentifiers.add("FormatData_nnh");
        publicIdentifiers.add("FormatData_no");
        publicIdentifiers.add("FormatData_no_NO");
        publicIdentifiers.add("FormatData_no_NO_NY");
        publicIdentifiers.add("FormatData_nus");
        publicIdentifiers.add("FormatData_nyn");
        publicIdentifiers.add("FormatData_oc");
        publicIdentifiers.add("FormatData_oc_ES");
        publicIdentifiers.add("FormatData_om");
        publicIdentifiers.add("FormatData_om_KE");
        publicIdentifiers.add("FormatData_or");
        publicIdentifiers.add("FormatData_os");
        publicIdentifiers.add("FormatData_pa");
        publicIdentifiers.add("FormatData_pa_Arab");
        publicIdentifiers.add("FormatData_pcm");
        publicIdentifiers.add("FormatData_pis");
        publicIdentifiers.add("FormatData_pl");
        publicIdentifiers.add("FormatData_pl_PL");
        publicIdentifiers.add("FormatDataProvider");
        publicIdentifiers.add("FormatData_ps");
        publicIdentifiers.add("FormatData_ps_PK");
        publicIdentifiers.add("FormatData_pt");
        publicIdentifiers.add("FormatData_pt_BR");
        publicIdentifiers.add("FormatData_pt_MO");
        publicIdentifiers.add("FormatData_pt_PT");
        publicIdentifiers.add("FormatData_qu");
        publicIdentifiers.add("FormatData_qu_BO");
        publicIdentifiers.add("FormatData_raj");
        publicIdentifiers.add("FormatData_rm");
        publicIdentifiers.add("FormatData_rn");
        publicIdentifiers.add("FormatData_ro");
        publicIdentifiers.add("FormatData_rof");
        publicIdentifiers.add("FormatData_ro_MD");
        publicIdentifiers.add("FormatData_ro_RO");
        publicIdentifiers.add("FormatData_ru");
        publicIdentifiers.add("FormatData_ru_RU");
        publicIdentifiers.add("FormatData_ru_UA");
        publicIdentifiers.add("FormatData_rw");
        publicIdentifiers.add("FormatData_rwk");
        publicIdentifiers.add("FormatData_sa");
        publicIdentifiers.add("FormatData_sah");
        publicIdentifiers.add("FormatData_saq");
        publicIdentifiers.add("FormatData_sat");
        publicIdentifiers.add("FormatData_sbp");
        publicIdentifiers.add("FormatData_sc");
        publicIdentifiers.add("FormatData_sd");
        publicIdentifiers.add("FormatData_sd_Deva");
        publicIdentifiers.add("FormatData_se");
        publicIdentifiers.add("FormatData_se_FI");
        publicIdentifiers.add("FormatData_seh");
        publicIdentifiers.add("FormatData_ses");
        publicIdentifiers.add("FormatData_sg");
        publicIdentifiers.add("FormatData_shi");
        publicIdentifiers.add("FormatData_shi_Latn");
        publicIdentifiers.add("FormatData_si");
        publicIdentifiers.add("FormatData_sk");
        publicIdentifiers.add("FormatData_sk_SK");
        publicIdentifiers.add("FormatData_sl");
        publicIdentifiers.add("FormatData_sl_SI");
        publicIdentifiers.add("FormatData_smn");
        publicIdentifiers.add("FormatData_sms");
        publicIdentifiers.add("FormatData_sn");
        publicIdentifiers.add("FormatData_so");
        publicIdentifiers.add("FormatData_so_KE");
        publicIdentifiers.add("FormatData_sq");
        publicIdentifiers.add("FormatData_sq_AL");
        publicIdentifiers.add("FormatData_sq_MK");
        publicIdentifiers.add("FormatData_sq_XK");
        publicIdentifiers.add("FormatData_sr");
        publicIdentifiers.add("FormatData_sr_BA");
        publicIdentifiers.add("FormatData_sr_CS");
        publicIdentifiers.add("FormatData_sr_Cyrl_BA");
        publicIdentifiers.add("FormatData_sr_Cyrl_ME");
        publicIdentifiers.add("FormatData_sr_Cyrl_XK");
        publicIdentifiers.add("FormatData_sr_Latn");
        publicIdentifiers.add("FormatData_sr_Latn_BA");
        publicIdentifiers.add("FormatData_sr_Latn_ME");
        publicIdentifiers.add("FormatData_sr_Latn_XK");
        publicIdentifiers.add("FormatData_sr_ME");
        publicIdentifiers.add("FormatData_sr_RS");
        publicIdentifiers.add("FormatData_su");
        publicIdentifiers.add("FormatData_sv");
        publicIdentifiers.add("FormatData_sv_FI");
        publicIdentifiers.add("FormatData_sv_SE");
        publicIdentifiers.add("FormatData_sw");
        publicIdentifiers.add("FormatData_sw_CD");
        publicIdentifiers.add("FormatData_sw_KE");
        publicIdentifiers.add("FormatData_ta");
        publicIdentifiers.add("FormatData_ta_LK");
        publicIdentifiers.add("FormatData_ta_MY");
        publicIdentifiers.add("FormatData_ta_SG");
        publicIdentifiers.add("FormatData_te");
        publicIdentifiers.add("FormatData_teo");
        publicIdentifiers.add("FormatData_tg");
        publicIdentifiers.add("FormatData_th");
        publicIdentifiers.add("FormatData_th_TH");
        publicIdentifiers.add("FormatData_ti");
        publicIdentifiers.add("FormatData_ti_ER");
        publicIdentifiers.add("FormatData_tk");
        publicIdentifiers.add("FormatData_to");
        publicIdentifiers.add("FormatData_tr");
        publicIdentifiers.add("FormatData_tr_CY");
        publicIdentifiers.add("FormatData_tr_TR");
        publicIdentifiers.add("FormatData_tt");
        publicIdentifiers.add("FormatData_twq");
        publicIdentifiers.add("FormatData_tzm");
        publicIdentifiers.add("FormatData_ug");
        publicIdentifiers.add("FormatData_uk");
        publicIdentifiers.add("FormatData_uk_UA");
        publicIdentifiers.add("FormatData_ur");
        publicIdentifiers.add("FormatData_ur_IN");
        publicIdentifiers.add("FormatData_uz");
        publicIdentifiers.add("FormatData_uz_Arab");
        publicIdentifiers.add("FormatData_uz_Cyrl");
        publicIdentifiers.add("FormatData_vai");
        publicIdentifiers.add("FormatData_vai_Latn");
        publicIdentifiers.add("FormatData_vi");
        publicIdentifiers.add("FormatData_vi_VN");
        publicIdentifiers.add("FormatData_vun");
        publicIdentifiers.add("FormatData_wae");
        publicIdentifiers.add("FormatData_wo");
        publicIdentifiers.add("FormatData_xh");
        publicIdentifiers.add("FormatData_xog");
        publicIdentifiers.add("FormatData_yav");
        publicIdentifiers.add("FormatData_yi");
        publicIdentifiers.add("FormatData_yo");
        publicIdentifiers.add("FormatData_yo_BJ");
        publicIdentifiers.add("FormatData_yrl");
        publicIdentifiers.add("FormatData_yrl_CO");
        publicIdentifiers.add("FormatData_yrl_VE");
        publicIdentifiers.add("FormatData_yue");
        publicIdentifiers.add("FormatData_yue_Hans");
        publicIdentifiers.add("FormatData_zgh");
        publicIdentifiers.add("FormatData_zh");
        publicIdentifiers.add("FormatData_zh_CN");
        publicIdentifiers.add("FormatData_zh_Hans_HK");
        publicIdentifiers.add("FormatData_zh_Hans_MO");
        publicIdentifiers.add("FormatData_zh_Hans_SG");
        publicIdentifiers.add("FormatData_zh_Hant");
        publicIdentifiers.add("FormatData_zh_Hant_HK");
        publicIdentifiers.add("FormatData_zh_HK");
        publicIdentifiers.add("FormatData_zh_SG");
        publicIdentifiers.add("FormatData_zh_TW");
        publicIdentifiers.add("FormatData_zu");
        publicIdentifiers.add("FormatFlagsConversionMismatchException");
        publicIdentifiers.add("Formattable");
        publicIdentifiers.add("Formattable$LocalizedString");
        publicIdentifiers.add("FormattableFlags");
        publicIdentifiers.add("FormattedFloatingDecimal");
        publicIdentifiers.add("Formatter");
        publicIdentifiers.add("FormatterClosedException");
        publicIdentifiers.add("FormView");
        publicIdentifiers.add("FormView$MouseEventListener");
        publicIdentifiers.add("ForwardingDiagnosticFormatter");
        publicIdentifiers.add("ForwardingDiagnosticFormatter$ForwardingConfiguration");
        publicIdentifiers.add("ForwardingFileObject");
        publicIdentifiers.add("ForwardingJavaFileManager");
        publicIdentifiers.add("ForwardingJavaFileObject");
        publicIdentifiers.add("FoundIndex");
        publicIdentifiers.add("Frame");
        publicIdentifiers.add("Frame$AccessibleAWTFrame");
        publicIdentifiers.add("FrameEditorPaneTag");
        publicIdentifiers.add("FrameNode");
        publicIdentifiers.add("FramePeer");
        publicIdentifiers.add("FramesDecoder");
        publicIdentifiers.add("FramesDecoder$FrameProcessor");
        publicIdentifiers.add("FramesEncoder");
        publicIdentifiers.add("FrameWrapper");
        publicIdentifiers.add("FREM");
        publicIdentifiers.add("Frequency");
        publicIdentifiers.add("FreshestCRLExtension");
        publicIdentifiers.add("FRETURN");
        publicIdentifiers.add("FSInfo");
        publicIdentifiers.add("FSTORE");
        publicIdentifiers.add("FSUB");
        publicIdentifiers.add("FtpClient");
        publicIdentifiers.add("FtpClientProvider");
        publicIdentifiers.add("FtpDirEntry");
        publicIdentifiers.add("FtpDirParser");
        publicIdentifiers.add("FtpLoginException");
        publicIdentifiers.add("FtpProtocolException");
        publicIdentifiers.add("FtpURLConnection");
        publicIdentifiers.add("FtpURLConnection$FtpInputStream");
        publicIdentifiers.add("FtpURLConnection$FtpOutputStream");
        publicIdentifiers.add("FullDVFactory");
        publicIdentifiers.add("FuncBoolean");
        publicIdentifiers.add("FuncCeiling");
        publicIdentifiers.add("FuncConcat");
        publicIdentifiers.add("FuncContains");
        publicIdentifiers.add("FuncCount");
        publicIdentifiers.add("FuncCurrent");
        publicIdentifiers.add("FuncDoclocation");
        publicIdentifiers.add("FuncExtElementAvailable");
        publicIdentifiers.add("FuncExtFunction");
        publicIdentifiers.add("FuncExtFunctionAvailable");
        publicIdentifiers.add("FuncFalse");
        publicIdentifiers.add("FuncFloor");
        publicIdentifiers.add("FuncGenerateId");
        publicIdentifiers.add("FuncHere");
        publicIdentifiers.add("FuncId");
        publicIdentifiers.add("FuncLang");
        publicIdentifiers.add("FuncLast");
        publicIdentifiers.add("FuncLoader");
        publicIdentifiers.add("FuncLocalPart");
        publicIdentifiers.add("FuncNamespace");
        publicIdentifiers.add("FuncNormalizeSpace");
        publicIdentifiers.add("FuncNot");
        publicIdentifiers.add("FuncNumber");
        publicIdentifiers.add("FuncPosition");
        publicIdentifiers.add("FuncQname");
        publicIdentifiers.add("FuncRound");
        publicIdentifiers.add("FuncStartsWith");
        publicIdentifiers.add("FuncString");
        publicIdentifiers.add("FuncStringLength");
        publicIdentifiers.add("FuncSubstring");
        publicIdentifiers.add("FuncSubstringAfter");
        publicIdentifiers.add("FuncSubstringBefore");
        publicIdentifiers.add("FuncSum");
        publicIdentifiers.add("FuncSystemProperty");
        publicIdentifiers.add("Function");
        publicIdentifiers.add("Function2Args");
        publicIdentifiers.add("Function3Args");
        publicIdentifiers.add("FunctionalInterface");
        publicIdentifiers.add("FunctionDef1Arg");
        publicIdentifiers.add("FunctionDescriptor");
        publicIdentifiers.add("FunctionMultiArgs");
        publicIdentifiers.add("FunctionOneArg");
        publicIdentifiers.add("FunctionPattern");
        publicIdentifiers.add("Functions");
        publicIdentifiers.add("FunctionSym");
        publicIdentifiers.add("FunctionTable");
        publicIdentifiers.add("FunctionType");
        publicIdentifiers.add("FuncTranslate");
        publicIdentifiers.add("FuncTrue");
        publicIdentifiers.add("FuncUnparsedEntityURI");
        publicIdentifiers.add("Future");
        publicIdentifiers.add("FutureTask");
        publicIdentifiers.add("FwDispatcher");
        publicIdentifiers.add("G1CollectedHeap");
        publicIdentifiers.add("G1HeapRegionTable");
        publicIdentifiers.add("G1MonitoringSupport");
        publicIdentifiers.add("GaloisCounterMode$GCMOperation");
        publicIdentifiers.add("GapContent");
        publicIdentifiers.add("GarbageCollectionNotificationInfo");
        publicIdentifiers.add("GarbageCollectionNotifInfoCompositeData");
        publicIdentifiers.add("GarbageCollectorExtImpl");
        publicIdentifiers.add("GarbageCollectorImpl");
        publicIdentifiers.add("GarbageCollectorMXBean");
        publicIdentifiers.add("GatheringByteChannel");
        publicIdentifiers.add("GaugeMonitor");
        publicIdentifiers.add("GaugeMonitorMBean");
        publicIdentifiers.add("GB18030");
        publicIdentifiers.add("GBK");
        publicIdentifiers.add("GC$LatencyRequest");
        publicIdentifiers.add("GcInfo");
        publicIdentifiers.add("GcInfoBuilder");
        publicIdentifiers.add("GcInfoCompositeData");
        publicIdentifiers.add("GCM");
        publicIdentifiers.add("GCMParameterSpec");
        publicIdentifiers.add("Gen");
        publicIdentifiers.add("Gen$CodeSizeOverflow");
        publicIdentifiers.add("GenCollectedHeap");
        publicIdentifiers.add("GeneralCompositePipe");
        publicIdentifiers.add("GeneralName");
        publicIdentifiers.add("GeneralNameInterface");
        publicIdentifiers.add("GeneralNames");
        publicIdentifiers.add("GeneralSecurityException");
        publicIdentifiers.add("GeneralSubtree");
        publicIdentifiers.add("GeneralSubtrees");
        publicIdentifiers.add("Generated");
        publicIdentifiers.add("GenerateOopMap");
        publicIdentifiers.add("Generation");
        publicIdentifiers.add("Generation$Name");
        publicIdentifiers.add("Generation$StatRecord");
        publicIdentifiers.add("GenerationFactory");
        publicIdentifiers.add("GenerationSpec");
        publicIdentifiers.add("GeneratorAdapter");
        publicIdentifiers.add("Generic");
        publicIdentifiers.add("GenericArray");
        publicIdentifiers.add("GenericArrayType");
        publicIdentifiers.add("GenericArrayTypeImpl");
        publicIdentifiers.add("GenericAttachingConnector");
        publicIdentifiers.add("GenericDeclaration");
        publicIdentifiers.add("GenericDeclRepository");
        publicIdentifiers.add("GenericGrowableArray");
        publicIdentifiers.add("GenericListeningConnector");
        publicIdentifiers.add("GenericsFactory");
        publicIdentifiers.add("GenericSignatureFormatError");
        publicIdentifiers.add("GenericURLContext");
        publicIdentifiers.add("GenericURLDirContext");
        publicIdentifiers.add("GetBooleanAction");
        publicIdentifiers.add("GETFIELD");
        publicIdentifiers.add("GetInstance");
        publicIdentifiers.add("GetIntegerAction");
        publicIdentifiers.add("GetLongAction");
        publicIdentifiers.add("GetPropertyAction");
        publicIdentifiers.add("GETSTATIC");
        publicIdentifiers.add("gif");
        publicIdentifiers.add("GifImageDecoder");
        publicIdentifiers.add("GIFImageMetadata");
        publicIdentifiers.add("GIFImageMetadataFormat");
        publicIdentifiers.add("GIFImageMetadataFormatResources");
        publicIdentifiers.add("GIFImageReader");
        publicIdentifiers.add("GIFImageReaderSpi");
        publicIdentifiers.add("GIFImageWriter");
        publicIdentifiers.add("GIFImageWriterSpi");
        publicIdentifiers.add("GIFStreamMetadata");
        publicIdentifiers.add("GIFStreamMetadataFormat");
        publicIdentifiers.add("GIFStreamMetadataFormatResources");
        publicIdentifiers.add("GlobalCursorManager");
        publicIdentifiers.add("GlobalSym");
        publicIdentifiers.add("Globs");
        publicIdentifiers.add("GLXSurfaceData");
        publicIdentifiers.add("GLXSurfaceData$GLXOffScreenSurfaceData");
        publicIdentifiers.add("GLXSurfaceData$GLXVSyncOffScreenSurfaceData");
        publicIdentifiers.add("GLXSurfaceData$GLXWindowSurfaceData");
        publicIdentifiers.add("GLXVolatileSurfaceManager");
        publicIdentifiers.add("GlyphDisposedListener");
        publicIdentifiers.add("GlyphLayout$LayoutEngine");
        publicIdentifiers.add("GlyphLayout$LayoutEngineFactory");
        publicIdentifiers.add("GlyphListLoopPipe");
        publicIdentifiers.add("GlyphListPipe");
        publicIdentifiers.add("GlyphVector");
        publicIdentifiers.add("GlyphView");
        publicIdentifiers.add("GlyphView$GlyphPainter");
        publicIdentifiers.add("GoAwayFrame");
        publicIdentifiers.add("GOTO");
        publicIdentifiers.add("GotoInstruction");
        publicIdentifiers.add("GOTO_W");
        publicIdentifiers.add("GradientPaint");
        publicIdentifiers.add("Grammar");
        publicIdentifiers.add("GraphicAttribute");
        publicIdentifiers.add("Graphics");
        publicIdentifiers.add("Graphics2D");
        publicIdentifiers.add("GraphicsConfigTemplate");
        publicIdentifiers.add("GraphicsConfiguration");
        publicIdentifiers.add("GraphicsDevice");
        publicIdentifiers.add("GraphicsEnvironment");
        publicIdentifiers.add("GraphicsPrimitive");
        publicIdentifiers.add("GraphicsPrimitive$GeneralBinaryOp");
        publicIdentifiers.add("GraphicsPrimitive$GeneralUnaryOp");
        publicIdentifiers.add("GraphicsPrimitive$TraceReporter");
        publicIdentifiers.add("GraphicsPrimitiveProxy");
        publicIdentifiers.add("GraphicsUtilities");
        publicIdentifiers.add("GraphUtils");
        publicIdentifiers.add("GraphUtils$AbstractNode");
        publicIdentifiers.add("GraphUtils$DependencyKind");
        publicIdentifiers.add("GraphUtils$DottableNode");
        publicIdentifiers.add("GraphUtils$DotVisitor");
        publicIdentifiers.add("GraphUtils$Node");
        publicIdentifiers.add("GraphUtils$TarjanNode");
        publicIdentifiers.add("GrayFilter");
        publicIdentifiers.add("Gregorian");
        publicIdentifiers.add("GregorianCalendar");
        publicIdentifiers.add("GridBagConstraints");
        publicIdentifiers.add("GridBagLayout");
        publicIdentifiers.add("GridLayout");
        publicIdentifiers.add("Group");
        publicIdentifiers.add("GroupLayout");
        publicIdentifiers.add("GroupLayout$Group");
        publicIdentifiers.add("GroupLayout$ParallelGroup");
        publicIdentifiers.add("GroupPrincipal");
        publicIdentifiers.add("GrowableArray");
        publicIdentifiers.add("GrowableByteArray");
        publicIdentifiers.add("GrowableEltArray");
        publicIdentifiers.add("GrowableIntArray");
        publicIdentifiers.add("GrowablePointArray");
        publicIdentifiers.add("GrowableRectArray");
        publicIdentifiers.add("GSSCaller");
        publicIdentifiers.add("GSSContext");
        publicIdentifiers.add("GSSContextImpl");
        publicIdentifiers.add("GSSContextSpi");
        publicIdentifiers.add("GSSCredElement");
        publicIdentifiers.add("GSSCredential");
        publicIdentifiers.add("GSSCredentialImpl");
        publicIdentifiers.add("GSSCredentialSpi");
        publicIdentifiers.add("GSSException");
        publicIdentifiers.add("GSSExceptionImpl");
        publicIdentifiers.add("GSSHeader");
        publicIdentifiers.add("GSSManager");
        publicIdentifiers.add("GSSManagerImpl");
        publicIdentifiers.add("GSSName");
        publicIdentifiers.add("GSSNameElement");
        publicIdentifiers.add("GSSNameSpi");
        publicIdentifiers.add("GSSToken");
        publicIdentifiers.add("GSSUtil");
        publicIdentifiers.add("Gt");
        publicIdentifiers.add("Gte");
        publicIdentifiers.add("GTKColorType");
        publicIdentifiers.add("GTKConstants");
        publicIdentifiers.add("GTKFileChooserUI$DirectoryCellRenderer");
        publicIdentifiers.add("GTKFileChooserUI$DirectoryComboBoxAction");
        publicIdentifiers.add("GTKFileChooserUI$DirectoryComboBoxModel");
        publicIdentifiers.add("GTKFileChooserUI$FileCellRenderer");
        publicIdentifiers.add("GTKFileChooserUI$FilterComboBoxModel");
        publicIdentifiers.add("GTKFileChooserUI$FilterComboBoxRenderer");
        publicIdentifiers.add("GTKFileChooserUI$GTKDirectoryListModel");
        publicIdentifiers.add("GTKFileChooserUI$GTKFileListModel");
        publicIdentifiers.add("GTKFileChooserUI$SelectionListener");
        publicIdentifiers.add("GTKKeybindings");
        publicIdentifiers.add("GTKLookAndFeel");
        publicIdentifiers.add("Guard");
        publicIdentifiers.add("GuardedInvocation");
        publicIdentifiers.add("GuardedInvocationTransformer");
        publicIdentifiers.add("GuardedObject");
        publicIdentifiers.add("GuardingDynamicLinker");
        publicIdentifiers.add("GuardingDynamicLinkerExporter");
        publicIdentifiers.add("GuardingTypeConverterFactory");
        publicIdentifiers.add("GUIInitializedListener");
        publicIdentifiers.add("GZIPInputStream");
        publicIdentifiers.add("GZIPOutputStream");
        publicIdentifiers.add("HaltNode");
        publicIdentifiers.add("Handler");
        publicIdentifiers.add("HandlerBase");
        publicIdentifiers.add("HandshakeCompletedEvent");
        publicIdentifiers.add("HandshakeCompletedListener");
        publicIdentifiers.add("HandshakeOutStream");
        publicIdentifiers.add("HasControls");
        publicIdentifiers.add("HashAttributeSet");
        publicIdentifiers.add("HashDocAttributeSet");
        publicIdentifiers.add("HashDrbg");
        publicIdentifiers.add("HashMap");
        publicIdentifiers.add("HashPrintJobAttributeSet");
        publicIdentifiers.add("HashPrintRequestAttributeSet");
        publicIdentifiers.add("HashPrintServiceAttributeSet");
        publicIdentifiers.add("HashSet");
        publicIdentifiers.add("Hashtable");
        publicIdentifiers.add("HasPositionalPredChecker");
        publicIdentifiers.add("Head");
        publicIdentifiers.add("HeaderClosure");
        publicIdentifiers.add("HeaderFrame");
        publicIdentifiers.add("HeaderParser");
        publicIdentifiers.add("Headers");
        publicIdentifiers.add("HeadersFrame");
        publicIdentifiers.add("HeadlessException");
        publicIdentifiers.add("HeadTail");
        publicIdentifiers.add("HeapBlock");
        publicIdentifiers.add("HeapBlock$Header");
        publicIdentifiers.add("HeapDumper");
        publicIdentifiers.add("HeapGraphWriter");
        publicIdentifiers.add("HeapGXLWriter");
        publicIdentifiers.add("HeapHprofBinWriter");
        publicIdentifiers.add("HeapMemorySegmentImpl");
        publicIdentifiers.add("HeapParametersPanel");
        publicIdentifiers.add("HeapPrinter");
        publicIdentifiers.add("HeapProgressThunk");
        publicIdentifiers.add("HeapRegion");
        publicIdentifiers.add("HeapRegionClosure");
        publicIdentifiers.add("HeapRegionManager");
        publicIdentifiers.add("HeapRegionSetBase");
        publicIdentifiers.add("HeapRegionType");
        publicIdentifiers.add("HeapSummary");
        publicIdentifiers.add("HeapVisitor");
        publicIdentifiers.add("HelloWorld");
        publicIdentifiers.add("HelpAction");
        publicIdentifiers.add("HelperNodeList");
        publicIdentifiers.add("HelpFormatter");
        publicIdentifiers.add("HelpMenu");
        publicIdentifiers.add("HelpWriter");
        publicIdentifiers.add("HexBinaryDV");
        publicIdentifiers.add("HexDumpEncoder");
        publicIdentifiers.add("Hidden");
        publicIdentifiers.add("HiddenTree");
        publicIdentifiers.add("HierarchyBoundsAdapter");
        publicIdentifiers.add("HierarchyBoundsListener");
        publicIdentifiers.add("HierarchyEvent");
        publicIdentifiers.add("HierarchyListener");
        publicIdentifiers.add("HierMemDirCtx");
        publicIdentifiers.add("HierMemDirCtx$HierContextEnumerator");
        publicIdentifiers.add("Highlighter");
        publicIdentifiers.add("Highlighter$Highlight");
        publicIdentifiers.add("Highlighter$HighlightPainter");
        publicIdentifiers.add("HighPrecisionJScrollBar");
        publicIdentifiers.add("HistoricallyNamedCharset");
        publicIdentifiers.add("History");
        publicIdentifiers.add("History$Entry");
        publicIdentifiers.add("HistoryComboBox");
        publicIdentifiers.add("HKSCS");
        publicIdentifiers.add("HKSCS$Decoder");
        publicIdentifiers.add("HKSCS$Encoder");
        publicIdentifiers.add("HKSCSMapping");
        publicIdentifiers.add("HmacDrbg");
        publicIdentifiers.add("HmacMd5ArcFourCksumType");
        publicIdentifiers.add("HmacSha1Aes128CksumType");
        publicIdentifiers.add("HmacSha1Aes256CksumType");
        publicIdentifiers.add("HmacSha1Des3KdCksumType");
        publicIdentifiers.add("HmacSha2Aes128CksumType");
        publicIdentifiers.add("HmacSha2Aes256CksumType");
        publicIdentifiers.add("HostAddress");
        publicIdentifiers.add("HostAddresses");
        publicIdentifiers.add("HostEvent");
        publicIdentifiers.add("HostIdentifier");
        publicIdentifiers.add("HostListener");
        publicIdentifiers.add("HostLocaleProviderAdapter");
        publicIdentifiers.add("HostnameChecker");
        publicIdentifiers.add("HostnameVerifier");
        publicIdentifiers.add("HotSpotAgent");
        publicIdentifiers.add("HotSpotAttachProvider");
        publicIdentifiers.add("HotspotClassLoadingMBean");
        publicIdentifiers.add("HotSpotCodeCacheProvider");
        publicIdentifiers.add("HotspotCompilationMBean");
        publicIdentifiers.add("HotSpotCompilationRequest");
        publicIdentifiers.add("HotSpotCompiledCode");
        publicIdentifiers.add("HotSpotCompiledCode$Comment");
        publicIdentifiers.add("HotSpotConstant");
        publicIdentifiers.add("HotSpotConstantPool$Bytecodes");
        publicIdentifiers.add("HotSpotConstantReflectionProvider");
        publicIdentifiers.add("HotSpotDiagnostic");
        publicIdentifiers.add("HotSpotDiagnosticMXBean");
        publicIdentifiers.add("HotSpotForeignCallTarget");
        publicIdentifiers.add("HotSpotInstalledCode");
        publicIdentifiers.add("HotspotInternal");
        publicIdentifiers.add("HotspotInternalMBean");
        publicIdentifiers.add("HotSpotJavaType");
        publicIdentifiers.add("HotSpotJVMCIBackendFactory");
        publicIdentifiers.add("HotSpotJVMCICompilerFactory");
        publicIdentifiers.add("HotSpotJVMCIUnsupportedOperationError");
        publicIdentifiers.add("HotSpotMemoryAccessProvider");
        publicIdentifiers.add("HotspotMemoryMBean");
        publicIdentifiers.add("HotSpotMetaAccessProvider");
        publicIdentifiers.add("HotSpotMetaspaceConstant");
        publicIdentifiers.add("HotSpotMethodHandleAccessProvider");
        publicIdentifiers.add("HotSpotModifiers");
        publicIdentifiers.add("HotSpotNmethod");
        publicIdentifiers.add("HotSpotObjectConstant");
        publicIdentifiers.add("HotSpotResolvedJavaField");
        publicIdentifiers.add("HotSpotResolvedJavaMethod");
        publicIdentifiers.add("HotSpotResolvedJavaType");
        publicIdentifiers.add("HotSpotResolvedObjectType");
        publicIdentifiers.add("HotspotRuntimeMBean");
        publicIdentifiers.add("HotSpotRuntimeStub");
        publicIdentifiers.add("HotSpotSignature");
        publicIdentifiers.add("HotSpotSpeculationLog");
        publicIdentifiers.add("HotSpotStackFrameReference");
        publicIdentifiers.add("HotSpotStackIntrospection");
        publicIdentifiers.add("HotSpotThreadImpl");
        publicIdentifiers.add("HotspotThreadMBean");
        publicIdentifiers.add("HotSpotTypeDataBase");
        publicIdentifiers.add("HotSpotVirtualMachine");
        publicIdentifiers.add("HotSpotVMConfigAccess");
        publicIdentifiers.add("HotSpotVMEventListener");
        publicIdentifiers.add("HPACK$Logger");
        publicIdentifiers.add("HSDB");
        publicIdentifiers.add("HSDBActionManager");
        publicIdentifiers.add("HTML");
        publicIdentifiers.add("HTML$Tag");
        publicIdentifiers.add("HTML$UnknownTag");
        publicIdentifiers.add("HTMLAnchorElement");
        publicIdentifiers.add("HTMLAppletElement");
        publicIdentifiers.add("HTMLAreaElement");
        publicIdentifiers.add("HTMLBaseElement");
        publicIdentifiers.add("HTMLBaseFontElement");
        publicIdentifiers.add("HTMLBodyElement");
        publicIdentifiers.add("HTMLBRElement");
        publicIdentifiers.add("HTMLButtonElement");
        publicIdentifiers.add("HTMLCollection");
        publicIdentifiers.add("HtmlConfiguration");
        publicIdentifiers.add("HTMLDirectoryElement");
        publicIdentifiers.add("HTMLDivElement");
        publicIdentifiers.add("HTMLDListElement");
        publicIdentifiers.add("HtmlDoclet");
        publicIdentifiers.add("HtmlDocletWriter");
        publicIdentifiers.add("HtmlDocument");
        publicIdentifiers.add("HTMLDocument");
        publicIdentifiers.add("HTMLDocument$BlockElement");
        publicIdentifiers.add("HTMLDocument$HTMLReader");
        publicIdentifiers.add("HTMLDocument$HTMLReader$BlockAction");
        publicIdentifiers.add("HTMLDocument$HTMLReader$CharacterAction");
        publicIdentifiers.add("HTMLDocument$HTMLReader$FormAction");
        publicIdentifiers.add("HTMLDocument$HTMLReader$HiddenAction");
        publicIdentifiers.add("HTMLDocument$HTMLReader$IsindexAction");
        publicIdentifiers.add("HTMLDocument$HTMLReader$ParagraphAction");
        publicIdentifiers.add("HTMLDocument$HTMLReader$PreAction");
        publicIdentifiers.add("HTMLDocument$HTMLReader$SpecialAction");
        publicIdentifiers.add("HTMLDocument$HTMLReader$TagAction");
        publicIdentifiers.add("HTMLDocument$Iterator");
        publicIdentifiers.add("HTMLDocument$RunElement");
        publicIdentifiers.add("HTMLDOMImplementation");
        publicIdentifiers.add("HTMLEditorKit");
        publicIdentifiers.add("HTMLEditorKit$HTMLFactory");
        publicIdentifiers.add("HTMLEditorKit$HTMLTextAction");
        publicIdentifiers.add("HTMLEditorKit$InsertHTMLTextAction");
        publicIdentifiers.add("HTMLEditorKit$LinkController");
        publicIdentifiers.add("HTMLEditorKit$Parser");
        publicIdentifiers.add("HTMLEditorKit$ParserCallback");
        publicIdentifiers.add("HTMLElement");
        publicIdentifiers.add("HTMLFieldSetElement");
        publicIdentifiers.add("HTMLFontElement");
        publicIdentifiers.add("HTMLFormElement");
        publicIdentifiers.add("HTMLFrameElement");
        publicIdentifiers.add("HTMLFrameHyperlinkEvent");
        publicIdentifiers.add("HTMLFrameSetElement");
        publicIdentifiers.add("HTMLGenerator");
        publicIdentifiers.add("HTMLHeadElement");
        publicIdentifiers.add("HTMLHeadingElement");
        publicIdentifiers.add("HTMLHRElement");
        publicIdentifiers.add("HTMLHtmlElement");
        publicIdentifiers.add("HtmlId");
        publicIdentifiers.add("HtmlIds");
        publicIdentifiers.add("HTMLIFrameElement");
        publicIdentifiers.add("HTMLImageElement");
        publicIdentifiers.add("HtmlIndexBuilder");
        publicIdentifiers.add("HTMLInputElement");
        publicIdentifiers.add("HTMLIsIndexElement");
        publicIdentifiers.add("HTMLLabelElement");
        publicIdentifiers.add("HTMLLegendElement");
        publicIdentifiers.add("HTMLLIElement");
        publicIdentifiers.add("HTMLLinkElement");
        publicIdentifiers.add("HtmlLinkFactory");
        publicIdentifiers.add("HtmlLinkInfo");
        publicIdentifiers.add("HTMLMapElement");
        publicIdentifiers.add("HTMLMenuElement");
        publicIdentifiers.add("HTMLMetaElement");
        publicIdentifiers.add("HTMLModElement");
        publicIdentifiers.add("HTMLObjectElement");
        publicIdentifiers.add("HTMLOListElement");
        publicIdentifiers.add("HTMLOptGroupElement");
        publicIdentifiers.add("HTMLOptionElement");
        publicIdentifiers.add("HtmlOptions");
        publicIdentifiers.add("HTMLPane");
        publicIdentifiers.add("HTMLParagraphElement");
        publicIdentifiers.add("HTMLParamElement");
        publicIdentifiers.add("HTMLPreElement");
        publicIdentifiers.add("HTMLQuoteElement");
        publicIdentifiers.add("HTMLScriptElement");
        publicIdentifiers.add("HTMLSelectElement");
        publicIdentifiers.add("HtmlSerialFieldWriter");
        publicIdentifiers.add("HTMLSerializer");
        publicIdentifiers.add("HtmlSerialMethodWriter");
        publicIdentifiers.add("HTMLStyleElement");
        publicIdentifiers.add("HTMLTableCaptionElement");
        publicIdentifiers.add("HTMLTableCellElement");
        publicIdentifiers.add("HTMLTableColElement");
        publicIdentifiers.add("HTMLTableElement");
        publicIdentifiers.add("HTMLTableRowElement");
        publicIdentifiers.add("HTMLTableSectionElement");
        publicIdentifiers.add("HtmlTag");
        publicIdentifiers.add("HTMLTextAreaElement");
        publicIdentifiers.add("HTMLTitleElement");
        publicIdentifiers.add("HtmlTree");
        publicIdentifiers.add("HTMLUListElement");
        publicIdentifiers.add("HTMLWriter");
        publicIdentifiers.add("Http2Frame");
        publicIdentifiers.add("HttpAuthenticator");
        publicIdentifiers.add("HttpBodySubscriberWrapper");
        publicIdentifiers.add("HttpCapture");
        publicIdentifiers.add("HttpCaptureInputStream");
        publicIdentifiers.add("HttpCaptureOutputStream");
        publicIdentifiers.add("HttpClient");
        publicIdentifiers.add("HttpClient$Builder");
        publicIdentifiers.add("HttpClientBuilderImpl");
        publicIdentifiers.add("HttpConnectTimeoutException");
        publicIdentifiers.add("HttpContext");
        publicIdentifiers.add("HttpExchange");
        publicIdentifiers.add("HttpHandler");
        publicIdentifiers.add("HttpHeadersBuilder");
        publicIdentifiers.add("HttpLogFormatter");
        publicIdentifiers.add("HttpPrincipal");
        publicIdentifiers.add("HttpRequest");
        publicIdentifiers.add("HttpRequest$BodyPublisher");
        publicIdentifiers.add("HttpRequest$BodyPublishers");
        publicIdentifiers.add("HttpRequest$Builder");
        publicIdentifiers.add("HttpRequestBuilderImpl");
        publicIdentifiers.add("HttpRequestImpl");
        publicIdentifiers.add("HttpResponse");
        publicIdentifiers.add("HttpResponse$BodyHandler");
        publicIdentifiers.add("HttpResponse$BodyHandlers");
        publicIdentifiers.add("HttpResponse$BodySubscriber");
        publicIdentifiers.add("HttpResponse$BodySubscribers");
        publicIdentifiers.add("HttpResponse$PushPromiseHandler");
        publicIdentifiers.add("HttpResponse$ResponseInfo");
        publicIdentifiers.add("HttpRetryException");
        publicIdentifiers.add("HttpsConfigurator");
        publicIdentifiers.add("HttpServer");
        publicIdentifiers.add("HttpServerImpl");
        publicIdentifiers.add("HttpServerProvider");
        publicIdentifiers.add("HttpsExchange");
        publicIdentifiers.add("HttpsParameters");
        publicIdentifiers.add("HttpsServer");
        publicIdentifiers.add("HttpsServerImpl");
        publicIdentifiers.add("HttpsURLConnection");
        publicIdentifiers.add("HttpsURLConnectionImpl");
        publicIdentifiers.add("HttpTimeoutException");
        publicIdentifiers.add("HttpTimestamper");
        publicIdentifiers.add("HttpURLConnection");
        publicIdentifiers.add("Huffman$Reader");
        publicIdentifiers.add("Huffman$Writer");
        publicIdentifiers.add("Hurryable");
        publicIdentifiers.add("HyperlinkEvent");
        publicIdentifiers.add("HyperlinkListener");
    }

    private void addPublicIdentifiersIJ() {
        publicIdentifiers.add("I18NImpl");
        publicIdentifiers.add("I2B");
        publicIdentifiers.add("I2C");
        publicIdentifiers.add("I2D");
        publicIdentifiers.add("I2F");
        publicIdentifiers.add("I2L");
        publicIdentifiers.add("I2S");
        publicIdentifiers.add("IADD");
        publicIdentifiers.add("IALOAD");
        publicIdentifiers.add("IAND");
        publicIdentifiers.add("IASTORE");
        publicIdentifiers.add("IBM037");
        publicIdentifiers.add("IBM1006");
        publicIdentifiers.add("IBM1025");
        publicIdentifiers.add("IBM1026");
        publicIdentifiers.add("IBM1046");
        publicIdentifiers.add("IBM1047");
        publicIdentifiers.add("IBM1097");
        publicIdentifiers.add("IBM1098");
        publicIdentifiers.add("IBM1112");
        publicIdentifiers.add("IBM1122");
        publicIdentifiers.add("IBM1123");
        publicIdentifiers.add("IBM1124");
        publicIdentifiers.add("IBM1129");
        publicIdentifiers.add("IBM1140");
        publicIdentifiers.add("IBM1141");
        publicIdentifiers.add("IBM1142");
        publicIdentifiers.add("IBM1143");
        publicIdentifiers.add("IBM1144");
        publicIdentifiers.add("IBM1145");
        publicIdentifiers.add("IBM1146");
        publicIdentifiers.add("IBM1147");
        publicIdentifiers.add("IBM1148");
        publicIdentifiers.add("IBM1149");
        publicIdentifiers.add("IBM1166");
        publicIdentifiers.add("IBM1364");
        publicIdentifiers.add("IBM1381");
        publicIdentifiers.add("IBM1383");
        publicIdentifiers.add("IBM273");
        publicIdentifiers.add("IBM277");
        publicIdentifiers.add("IBM278");
        publicIdentifiers.add("IBM280");
        publicIdentifiers.add("IBM284");
        publicIdentifiers.add("IBM285");
        publicIdentifiers.add("IBM290");
        publicIdentifiers.add("IBM29626C");
        publicIdentifiers.add("IBM297");
        publicIdentifiers.add("IBM300");
        publicIdentifiers.add("IBM33722");
        publicIdentifiers.add("IBM33722$Decoder");
        publicIdentifiers.add("IBM33722$Encoder");
        publicIdentifiers.add("IBM420");
        publicIdentifiers.add("IBM424");
        publicIdentifiers.add("IBM437");
        publicIdentifiers.add("IBM500");
        publicIdentifiers.add("IBM737");
        publicIdentifiers.add("IBM775");
        publicIdentifiers.add("IBM833");
        publicIdentifiers.add("IBM834");
        publicIdentifiers.add("IBM834$Encoder");
        publicIdentifiers.add("IBM838");
        publicIdentifiers.add("IBM850");
        publicIdentifiers.add("IBM852");
        publicIdentifiers.add("IBM855");
        publicIdentifiers.add("IBM856");
        publicIdentifiers.add("IBM857");
        publicIdentifiers.add("IBM858");
        publicIdentifiers.add("IBM860");
        publicIdentifiers.add("IBM861");
        publicIdentifiers.add("IBM862");
        publicIdentifiers.add("IBM863");
        publicIdentifiers.add("IBM864");
        publicIdentifiers.add("IBM865");
        publicIdentifiers.add("IBM866");
        publicIdentifiers.add("IBM868");
        publicIdentifiers.add("IBM869");
        publicIdentifiers.add("IBM870");
        publicIdentifiers.add("IBM871");
        publicIdentifiers.add("IBM874");
        publicIdentifiers.add("IBM875");
        publicIdentifiers.add("IBM918");
        publicIdentifiers.add("IBM921");
        publicIdentifiers.add("IBM922");
        publicIdentifiers.add("IBM930");
        publicIdentifiers.add("IBM933");
        publicIdentifiers.add("IBM935");
        publicIdentifiers.add("IBM937");
        publicIdentifiers.add("IBM939");
        publicIdentifiers.add("IBM942");
        publicIdentifiers.add("IBM942C");
        publicIdentifiers.add("IBM943");
        publicIdentifiers.add("IBM943C");
        publicIdentifiers.add("IBM948");
        publicIdentifiers.add("IBM949");
        publicIdentifiers.add("IBM949C");
        publicIdentifiers.add("IBM950");
        publicIdentifiers.add("IBM964");
        publicIdentifiers.add("IBM964$Decoder");
        publicIdentifiers.add("IBM964$Encoder");
        publicIdentifiers.add("IBM970");
        publicIdentifiers.add("ICC_ColorSpace");
        publicIdentifiers.add("ICC_Profile");
        publicIdentifiers.add("Icon");
        publicIdentifiers.add("IconInfo");
        publicIdentifiers.add("IconManager");
        publicIdentifiers.add("ICONST");
        publicIdentifiers.add("IconUIResource");
        publicIdentifiers.add("IconView");
        publicIdentifiers.add("ICUBinary$Authenticate");
        publicIdentifiers.add("IDDatatypeValidator");
        publicIdentifiers.add("IDDV");
        publicIdentifiers.add("Identifier");
        publicIdentifiers.add("IdentifierTree");
        publicIdentifiers.add("Identity");
        publicIdentifiers.add("IdentityArrayList");
        publicIdentifiers.add("IdentityConstraint");
        publicIdentifiers.add("IdentityHashMap");
        publicIdentifiers.add("IdentityLinkedList");
        publicIdentifiers.add("IdentityScope");
        publicIdentifiers.add("IDIV");
        publicIdentifiers.add("IDREFDatatypeValidator");
        publicIdentifiers.add("IDREFDV");
        publicIdentifiers.add("IF_ACMPEQ");
        publicIdentifiers.add("IF_ACMPNE");
        publicIdentifiers.add("IFEQ");
        publicIdentifiers.add("IFGE");
        publicIdentifiers.add("IFGT");
        publicIdentifiers.add("IF_ICMPEQ");
        publicIdentifiers.add("IF_ICMPGE");
        publicIdentifiers.add("IF_ICMPGT");
        publicIdentifiers.add("IF_ICMPLE");
        publicIdentifiers.add("IF_ICMPLT");
        publicIdentifiers.add("IF_ICMPNE");
        publicIdentifiers.add("IfInstruction");
        publicIdentifiers.add("IFLE");
        publicIdentifiers.add("IFLT");
        publicIdentifiers.add("IFNE");
        publicIdentifiers.add("IFNONNULL");
        publicIdentifiers.add("IFNULL");
        publicIdentifiers.add("IfTree");
        publicIdentifiers.add("IgnoreAllErrorHandler");
        publicIdentifiers.add("IgnorePaintEvent");
        publicIdentifiers.add("IINC");
        publicIdentifiers.add("IincInsnNode");
        publicIdentifiers.add("IIOByteBuffer");
        publicIdentifiers.add("IIOException");
        publicIdentifiers.add("IIOImage");
        publicIdentifiers.add("IIOInvalidTreeException");
        publicIdentifiers.add("IIOMetadata");
        publicIdentifiers.add("IIOMetadataController");
        publicIdentifiers.add("IIOMetadataFormat");
        publicIdentifiers.add("IIOMetadataFormatImpl");
        publicIdentifiers.add("IIOMetadataNode");
        publicIdentifiers.add("IIOParam");
        publicIdentifiers.add("IIOParamController");
        publicIdentifiers.add("IIOReadProgressListener");
        publicIdentifiers.add("IIOReadUpdateListener");
        publicIdentifiers.add("IIOReadWarningListener");
        publicIdentifiers.add("IIOServiceProvider");
        publicIdentifiers.add("IIOWriteProgressListener");
        publicIdentifiers.add("IIOWriteWarningListener");
        publicIdentifiers.add("IllegalAccessError");
        publicIdentifiers.add("IllegalAccessException");
        publicIdentifiers.add("IllegalArgumentException");
        publicIdentifiers.add("IllegalBlockingModeException");
        publicIdentifiers.add("IllegalBlockSizeException");
        publicIdentifiers.add("IllegalCallerException");
        publicIdentifiers.add("IllegalChannelGroupException");
        publicIdentifiers.add("IllegalCharsetNameException");
        publicIdentifiers.add("IllegalClassFormatException");
        publicIdentifiers.add("IllegalComponentStateException");
        publicIdentifiers.add("IllegalConnectorArgumentsException");
        publicIdentifiers.add("IllegalFormatCodePointException");
        publicIdentifiers.add("IllegalFormatConversionException");
        publicIdentifiers.add("IllegalFormatException");
        publicIdentifiers.add("IllegalFormatFlagsException");
        publicIdentifiers.add("IllegalFormatPrecisionException");
        publicIdentifiers.add("IllegalFormatWidthException");
        publicIdentifiers.add("IllegalMonitorStateException");
        publicIdentifiers.add("IllegalPathStateException");
        publicIdentifiers.add("IllegalReceiveException");
        publicIdentifiers.add("IllegalSelectorException");
        publicIdentifiers.add("IllegalStateException");
        publicIdentifiers.add("IllegalThreadStateException");
        publicIdentifiers.add("IllegalUnbindException");
        publicIdentifiers.add("IllformedLocaleException");
        publicIdentifiers.add("ILOAD");
        publicIdentifiers.add("Image");
        publicIdentifiers.add("ImageAccessException");
        publicIdentifiers.add("ImageBuilder");
        publicIdentifiers.add("ImageCache");
        publicIdentifiers.add("ImageCache$PixelsKey");
        publicIdentifiers.add("ImageCapabilities");
        publicIdentifiers.add("ImageConsumer");
        publicIdentifiers.add("ImageDecoder");
        publicIdentifiers.add("ImageFetchable");
        publicIdentifiers.add("ImageFilter");
        publicIdentifiers.add("ImageFormatException");
        publicIdentifiers.add("ImageIcon");
        publicIdentifiers.add("ImageIcon$AccessibleImageIcon");
        publicIdentifiers.add("ImageIconUIResource");
        publicIdentifiers.add("ImageInputStream");
        publicIdentifiers.add("ImageInputStreamImpl");
        publicIdentifiers.add("ImageInputStreamSpi");
        publicIdentifiers.add("ImageLocation");
        publicIdentifiers.add("ImageObserver");
        publicIdentifiers.add("ImageOutputStream");
        publicIdentifiers.add("ImageOutputStreamImpl");
        publicIdentifiers.add("ImageOutputStreamSpi");
        publicIdentifiers.add("ImagePluginStack$ImageProvider");
        publicIdentifiers.add("ImageProducer");
        publicIdentifiers.add("ImageReader");
        publicIdentifiers.add("ImageReader$Node");
        publicIdentifiers.add("ImageReaderFactory");
        publicIdentifiers.add("ImageReaderSpi");
        publicIdentifiers.add("ImageReaderWriterSpi");
        publicIdentifiers.add("ImageReadParam");
        publicIdentifiers.add("ImageRepresentation");
        publicIdentifiers.add("ImageStream");
        publicIdentifiers.add("ImageStrings");
        publicIdentifiers.add("ImageStringsReader");
        publicIdentifiers.add("ImageTranscoder");
        publicIdentifiers.add("ImageTranscoderSpi");
        publicIdentifiers.add("ImageTypeSpecifier");
        publicIdentifiers.add("ImageUtil");
        publicIdentifiers.add("ImageView");
        publicIdentifiers.add("ImageWatched");
        publicIdentifiers.add("ImageWatched$Link");
        publicIdentifiers.add("ImageWatched$WeakLink");
        publicIdentifiers.add("ImageWriteParam");
        publicIdentifiers.add("ImageWriter");
        publicIdentifiers.add("ImageWriterSpi");
        publicIdentifiers.add("ImagingLib");
        publicIdentifiers.add("ImagingOpException");
        publicIdentifiers.add("ImmediateOrRegister");
        publicIdentifiers.add("ImmutableDescriptor");
        publicIdentifiers.add("ImmutableExtendedSSLSession");
        publicIdentifiers.add("ImmutableIntegerModuloP");
        publicIdentifiers.add("ImmutableOopMap");
        publicIdentifiers.add("ImmutableOopMapPair");
        publicIdentifiers.add("ImmutableOopMapSet");
        publicIdentifiers.add("ImmutablePoint");
        publicIdentifiers.add("ImmutableSSLSession");
        publicIdentifiers.add("IMPDEP1");
        publicIdentifiers.add("IMPDEP2");
        publicIdentifiers.add("ImportSnippet");
        publicIdentifiers.add("ImportTree");
        publicIdentifiers.add("IMUL");
        publicIdentifiers.add("InaccessibleObjectException");
        publicIdentifiers.add("InclusiveNamespaces");
        publicIdentifiers.add("IncompatibleClassChangeError");
        publicIdentifiers.add("IncompatibleThreadStateException");
        publicIdentifiers.add("IncompleteAnnotationException");
        publicIdentifiers.add("InconsistentDebugInfoException");
        publicIdentifiers.add("IncrementalSAXSource");
        publicIdentifiers.add("IncrementalSAXSource_Xerces");
        publicIdentifiers.add("IndentPrinter");
        publicIdentifiers.add("IndexableFieldIdentifier");
        publicIdentifiers.add("IndexBuilder");
        publicIdentifiers.add("IndexColorModel");
        publicIdentifiers.add("IndexedCollectionCertStore");
        publicIdentifiers.add("IndexedInstruction");
        publicIdentifiers.add("IndexedPropertyChangeEvent");
        publicIdentifiers.add("IndexedPropertyDescriptor");
        publicIdentifiers.add("IndexItem");
        publicIdentifiers.add("IndexOutOfBoundsException");
        publicIdentifiers.add("IndexRedirectWriter");
        publicIdentifiers.add("IndexTaglet");
        publicIdentifiers.add("IndexTree");
        publicIdentifiers.add("IndexWriter");
        publicIdentifiers.add("INEG");
        publicIdentifiers.add("InetAddress");
        publicIdentifiers.add("InetAddressConverter");
        publicIdentifiers.add("InetAddressResolver");
        publicIdentifiers.add("InetAddressResolverProvider");
        publicIdentifiers.add("InetAddressResolverProvider$Configuration");
        publicIdentifiers.add("InetSocketAddress");
        publicIdentifiers.add("Infer");
        publicIdentifiers.add("Infer$BoundFilter");
        publicIdentifiers.add("Infer$GraphStrategy$NodeNotFoundException");
        publicIdentifiers.add("Infer$IncorporationAction");
        publicIdentifiers.add("Infer$InferenceException");
        publicIdentifiers.add("Infer$PartiallyInferredMethodType");
        publicIdentifiers.add("InferenceContext");
        publicIdentifiers.add("Inflater");
        publicIdentifiers.add("InflaterInputStream");
        publicIdentifiers.add("InflaterOutputStream");
        publicIdentifiers.add("Infopoint");
        publicIdentifiers.add("InfoWindow");
        publicIdentifiers.add("InfoWindow$Balloon");
        publicIdentifiers.add("InfoWindow$Balloon$LiveArguments");
        publicIdentifiers.add("InfoWindow$Tooltip");
        publicIdentifiers.add("InfoWindow$Tooltip$LiveArguments");
        publicIdentifiers.add("InheritableTaglet");
        publicIdentifiers.add("InheritableThreadLocal");
        publicIdentifiers.add("InheritDocTaglet");
        publicIdentifiers.add("InheritDocTree");
        publicIdentifiers.add("Inherited");
        publicIdentifiers.add("InheritedChannel$InheritedDatagramChannelImpl");
        publicIdentifiers.add("InheritedChannel$InheritedServerSocketChannelImpl");
        publicIdentifiers.add("InheritedChannel$InheritedSocketChannelImpl");
        publicIdentifiers.add("InhibitAnyPolicyExtension");
        publicIdentifiers.add("Init");
        publicIdentifiers.add("InitialContext");
        publicIdentifiers.add("InitialContextFactory");
        publicIdentifiers.add("InitialContextFactoryBuilder");
        publicIdentifiers.add("InitialDirContext");
        publicIdentifiers.add("InitialLdapContext");
        publicIdentifiers.add("InitialToken$OverloadedChecksum");
        publicIdentifiers.add("InlineTagTree");
        publicIdentifiers.add("InlineTree");
        publicIdentifiers.add("InlineView");
        publicIdentifiers.add("InnerClasses_attribute");
        publicIdentifiers.add("InnerClasses_attribute$Info");
        publicIdentifiers.add("InnerClassNode");
        publicIdentifiers.add("Input");
        publicIdentifiers.add("InputContext");
        publicIdentifiers.add("InputEvent");
        publicIdentifiers.add("InputLexer");
        publicIdentifiers.add("InputMap");
        publicIdentifiers.add("InputMapUIResource");
        publicIdentifiers.add("InputMethod");
        publicIdentifiers.add("InputMethodAdapter");
        publicIdentifiers.add("InputMethodContext");
        publicIdentifiers.add("InputMethodDescriptor");
        publicIdentifiers.add("InputMethodEvent");
        publicIdentifiers.add("InputMethodHighlight");
        publicIdentifiers.add("InputMethodJFrame");
        publicIdentifiers.add("InputMethodListener");
        publicIdentifiers.add("InputMethodManager");
        publicIdentifiers.add("InputMethodRequests");
        publicIdentifiers.add("InputMethodSupport");
        publicIdentifiers.add("InputMethodWindow");
        publicIdentifiers.add("InputMismatchException");
        publicIdentifiers.add("InputSource");
        publicIdentifiers.add("InputStream");
        publicIdentifiers.add("InputStreamAdapter");
        publicIdentifiers.add("InputStreamImageInputStreamSpi");
        publicIdentifiers.add("InputStreamImageSource");
        publicIdentifiers.add("InputStreamReader");
        publicIdentifiers.add("InputVerifier");
        publicIdentifiers.add("InsertRow");
        publicIdentifiers.add("Insets");
        publicIdentifiers.add("InsetsUIResource");
        publicIdentifiers.add("InsnList");
        publicIdentifiers.add("InsnNode");
        publicIdentifiers.add("InspectAction");
        publicIdentifiers.add("InspectedFrame");
        publicIdentifiers.add("InspectedFrameVisitor");
        publicIdentifiers.add("Inspector");
        publicIdentifiers.add("InstalledCode");
        publicIdentifiers.add("Instance");
        publicIdentifiers.add("InstanceAlreadyExistsException");
        publicIdentifiers.add("InstanceClassLoaderKlass");
        publicIdentifiers.add("InstanceConstructor");
        publicIdentifiers.add("InstanceKlass");
        publicIdentifiers.add("InstanceKlass$ClassState");
        publicIdentifiers.add("InstanceKlass$StaticField");
        publicIdentifiers.add("InstanceMirrorKlass");
        publicIdentifiers.add("InstanceNotFoundException");
        publicIdentifiers.add("INSTANCEOF");
        publicIdentifiers.add("InstanceOfTree");
        publicIdentifiers.add("InstanceRefKlass");
        publicIdentifiers.add("InstanceStackChunkKlass");
        publicIdentifiers.add("InstantiationError");
        publicIdentifiers.add("InstantiationException");
        publicIdentifiers.add("InstantSource");
        publicIdentifiers.add("Instruction");
        publicIdentifiers.add("Instruction$KindVisitor");
        publicIdentifiers.add("InstructionAdapter");
        publicIdentifiers.add("InstructionComparator");
        publicIdentifiers.add("InstructionDetailWriter");
        publicIdentifiers.add("InstructionFactory");
        publicIdentifiers.add("InstructionFinder");
        publicIdentifiers.add("InstructionFinder$CodeConstraint");
        publicIdentifiers.add("InstructionHandle");
        publicIdentifiers.add("InstructionList");
        publicIdentifiers.add("InstructionListObserver");
        publicIdentifiers.add("InstructionTargeter");
        publicIdentifiers.add("InstructionVisitor");
        publicIdentifiers.add("Instrument");
        publicIdentifiers.add("Instrumentation");
        publicIdentifiers.add("InstrumentationException");
        publicIdentifiers.add("InstrumentationImpl");
        publicIdentifiers.add("InsufficientResourcesException");
        publicIdentifiers.add("IntArray");
        publicIdentifiers.add("IntArrayWrapper");
        publicIdentifiers.add("IntBinaryOperator");
        publicIdentifiers.add("IntBuffer");
        publicIdentifiers.add("IntConsumer");
        publicIdentifiers.add("Integer");
        publicIdentifiers.add("IntegerComponentRaster");
        publicIdentifiers.add("IntegerDV");
        publicIdentifiers.add("IntegerEditor");
        publicIdentifiers.add("IntegerEnum");
        publicIdentifiers.add("IntegerFieldModuloP");
        publicIdentifiers.add("IntegerInterleavedRaster");
        publicIdentifiers.add("IntegerModuloP");
        publicIdentifiers.add("IntegerModuloP$MultiplicativeInverser");
        publicIdentifiers.add("IntegerMonitor");
        publicIdentifiers.add("IntegerPolynomial");
        publicIdentifiers.add("IntegerPolynomial$MutableElement");
        publicIdentifiers.add("IntegerPolynomialModBinP");
        publicIdentifiers.add("IntegerSyntax");
        publicIdentifiers.add("IntegerType");
        publicIdentifiers.add("IntegerTypeImpl");
        publicIdentifiers.add("IntegerValue");
        publicIdentifiers.add("IntegerValueImpl");
        publicIdentifiers.add("IntegratedParserConfiguration");
        publicIdentifiers.add("IntegrityHmac");
        publicIdentifiers.add("IntegrityHmac$IntegrityHmacMD5");
        publicIdentifiers.add("IntegrityHmac$IntegrityHmacRIPEMD160");
        publicIdentifiers.add("IntegrityHmac$IntegrityHmacSHA1");
        publicIdentifiers.add("IntegrityHmac$IntegrityHmacSHA224");
        publicIdentifiers.add("IntegrityHmac$IntegrityHmacSHA256");
        publicIdentifiers.add("IntegrityHmac$IntegrityHmacSHA384");
        publicIdentifiers.add("IntegrityHmac$IntegrityHmacSHA512");
        publicIdentifiers.add("InterfaceAddress");
        publicIdentifiers.add("InterfaceType");
        publicIdentifiers.add("InternalDebugControl");
        publicIdentifiers.add("InternalDialog");
        publicIdentifiers.add("InternalDialog$MastheadIcon");
        publicIdentifiers.add("InternalError");
        publicIdentifiers.add("InternalEventHandler");
        publicIdentifiers.add("InternalException");
        publicIdentifiers.add("InternalFrameAdapter");
        publicIdentifiers.add("InternalFrameEvent");
        publicIdentifiers.add("InternalFrameFocusTraversalPolicy");
        publicIdentifiers.add("InternalFrameListener");
        publicIdentifiers.add("InternalFrameUI");
        publicIdentifiers.add("InternalLock");
        publicIdentifiers.add("InternalRuntimeError");
        publicIdentifiers.add("InternalTypeUtilities");
        publicIdentifiers.add("InternationalFormatter");
        publicIdentifiers.add("InteropProvider");
        publicIdentifiers.add("InteropProviderImpl");
        publicIdentifiers.add("InterpretedVFrame");
        publicIdentifiers.add("Interpreter");
        publicIdentifiers.add("InterpreterCodelet");
        publicIdentifiers.add("InterruptedByTimeoutException");
        publicIdentifiers.add("InterruptedException");
        publicIdentifiers.add("InterruptedIOException");
        publicIdentifiers.add("InterruptedNamingException");
        publicIdentifiers.add("Interruptible");
        publicIdentifiers.add("InterruptibleChannel");
        publicIdentifiers.add("IntersectionType");
        publicIdentifiers.add("IntersectionTypeTree");
        publicIdentifiers.add("Interval");
        publicIdentifiers.add("IntervalNode");
        publicIdentifiers.add("IntervalTree");
        publicIdentifiers.add("IntField");
        publicIdentifiers.add("IntFunction");
        publicIdentifiers.add("IntHashTable");
        publicIdentifiers.add("IntInsnNode");
        publicIdentifiers.add("IntPredicate");
        publicIdentifiers.add("IntrinsicCandidate");
        publicIdentifiers.add("IntrospectionException");
        publicIdentifiers.add("Introspector");
        publicIdentifiers.add("IntSignature");
        publicIdentifiers.add("IntStack");
        publicIdentifiers.add("IntStream");
        publicIdentifiers.add("IntStream$Builder");
        publicIdentifiers.add("IntStream$IntMapMultiConsumer");
        publicIdentifiers.add("IntSummaryStatistics");
        publicIdentifiers.add("IntSupplier");
        publicIdentifiers.add("IntToDoubleFunction");
        publicIdentifiers.add("IntToLongFunction");
        publicIdentifiers.add("IntType");
        publicIdentifiers.add("IntUnaryOperator");
        publicIdentifiers.add("IntVector");
        publicIdentifiers.add("InvalidAlgorithmParameterException");
        publicIdentifiers.add("InvalidApplicationException");
        publicIdentifiers.add("InvalidAttributeIdentifierException");
        publicIdentifiers.add("InvalidAttributesException");
        publicIdentifiers.add("InvalidAttributeValueException");
        publicIdentifiers.add("InvalidCanonicalizerException");
        publicIdentifiers.add("InvalidClassException");
        publicIdentifiers.add("InvalidCodeIndexException");
        publicIdentifiers.add("InvalidDataException");
        publicIdentifiers.add("InvalidDatatypeFacetException");
        publicIdentifiers.add("InvalidDatatypeValueException");
        publicIdentifiers.add("InvalidDigestValueException");
        publicIdentifiers.add("InvalidDnDOperationException");
        publicIdentifiers.add("InvalidFormatException");
        publicIdentifiers.add("InvalidityDateExtension");
        publicIdentifiers.add("InvalidJarIndexError");
        publicIdentifiers.add("InvalidKeyException");
        publicIdentifiers.add("InvalidKeySpecException");
        publicIdentifiers.add("InvalidLineNumberException");
        publicIdentifiers.add("InvalidMarkException");
        publicIdentifiers.add("InvalidMidiDataException");
        publicIdentifiers.add("InvalidModuleDescriptorException");
        publicIdentifiers.add("InvalidModuleException");
        publicIdentifiers.add("InvalidNameException");
        publicIdentifiers.add("InvalidObjectException");
        publicIdentifiers.add("InvalidOpenTypeException");
        publicIdentifiers.add("InvalidParameterException");
        publicIdentifiers.add("InvalidParameterSpecException");
        publicIdentifiers.add("InvalidPathException");
        publicIdentifiers.add("InvalidPipeException");
        publicIdentifiers.add("InvalidPreferencesFormatException");
        publicIdentifiers.add("InvalidPropertiesFormatException");
        publicIdentifiers.add("InvalidRelationIdException");
        publicIdentifiers.add("InvalidRelationServiceException");
        publicIdentifiers.add("InvalidRelationTypeException");
        publicIdentifiers.add("InvalidRequestStateException");
        publicIdentifiers.add("InvalidRoleInfoException");
        publicIdentifiers.add("InvalidRoleValueException");
        publicIdentifiers.add("InvalidSearchControlsException");
        publicIdentifiers.add("InvalidSearchFilterException");
        publicIdentifiers.add("InvalidSignatureValueException");
        publicIdentifiers.add("InvalidStackFrameException");
        publicIdentifiers.add("InvalidStreamException");
        publicIdentifiers.add("InvalidTargetObjectTypeException");
        publicIdentifiers.add("InvalidTransformException");
        publicIdentifiers.add("InvalidTypeException");
        publicIdentifiers.add("InverseDepsAnalyzer");
        publicIdentifiers.add("Invocable");
        publicIdentifiers.add("InvocationEvent");
        publicIdentifiers.add("InvocationException");
        publicIdentifiers.add("InvocationHandler");
        publicIdentifiers.add("InvocationTargetException");
        publicIdentifiers.add("INVOKEDYNAMIC");
        publicIdentifiers.add("InvokeDynamicInsnNode");
        publicIdentifiers.add("InvokeInstruction");
        publicIdentifiers.add("INVOKESPECIAL");
        publicIdentifiers.add("INVOKESTATIC");
        publicIdentifiers.add("InvokeTarget");
        publicIdentifiers.add("INVOKEVIRTUAL");
        publicIdentifiers.add("IOError");
        publicIdentifiers.add("IOException");
        publicIdentifiers.add("IOR");
        publicIdentifiers.add("IOUtils");
        publicIdentifiers.add("IOUtils$XmlConsumer");
        publicIdentifiers.add("IPAddressName");
        publicIdentifiers.add("IPAddressUtil");
        publicIdentifiers.add("IPPPrintService");
        publicIdentifiers.add("IREM");
        publicIdentifiers.add("IRETURN");
        publicIdentifiers.add("ISCII91");
        publicIdentifiers.add("ISHL");
        publicIdentifiers.add("ISHR");
        publicIdentifiers.add("ISO2022$Encoder");
        publicIdentifiers.add("ISO2022_CN");
        publicIdentifiers.add("ISO2022_CN_CNS");
        publicIdentifiers.add("ISO2022_CN_GB");
        publicIdentifiers.add("ISO2022_JP");
        publicIdentifiers.add("ISO2022_JP_2");
        publicIdentifiers.add("ISO2022_KR");
        publicIdentifiers.add("ISO_8859_1");
        publicIdentifiers.add("ISO_8859_11");
        publicIdentifiers.add("ISO_8859_13");
        publicIdentifiers.add("ISO_8859_15");
        publicIdentifiers.add("ISO_8859_16");
        publicIdentifiers.add("ISO_8859_2");
        publicIdentifiers.add("ISO_8859_3");
        publicIdentifiers.add("ISO_8859_4");
        publicIdentifiers.add("ISO_8859_5");
        publicIdentifiers.add("ISO_8859_6");
        publicIdentifiers.add("ISO_8859_7");
        publicIdentifiers.add("ISO_8859_8");
        publicIdentifiers.add("ISO_8859_9");
        publicIdentifiers.add("IssuerAlternativeNameExtension");
        publicIdentifiers.add("IssuingDistributionPointExtension");
        publicIdentifiers.add("ISTORE");
        publicIdentifiers.add("ISUB");
        publicIdentifiers.add("ItemEvent");
        publicIdentifiers.add("ItemListener");
        publicIdentifiers.add("ItemPSVI");
        publicIdentifiers.add("Items");
        publicIdentifiers.add("ItemSelectable");
        publicIdentifiers.add("Iterable");
        publicIdentifiers.add("Iterator");
        publicIdentifiers.add("Iterators");
        publicIdentifiers.add("IUSHR");
        publicIdentifiers.add("IvParameterSpec");
        publicIdentifiers.add("IXOR");
        publicIdentifiers.add("JansiSupport");
        publicIdentifiers.add("JApplet");
        publicIdentifiers.add("JApplet$AccessibleJApplet");
        publicIdentifiers.add("JarArchive");
        publicIdentifiers.add("JarArchive$JarEntry");
        publicIdentifiers.add("JarConstraintsParameters");
        publicIdentifiers.add("JarEntry");
        publicIdentifiers.add("JarException");
        publicIdentifiers.add("JarFile");
        publicIdentifiers.add("JarIndex");
        publicIdentifiers.add("JarInputStream");
        publicIdentifiers.add("JarOutputStream");
        publicIdentifiers.add("JarSigner$Builder");
        publicIdentifiers.add("JarSignerException");
        publicIdentifiers.add("JarToolProvider");
        publicIdentifiers.add("JarURLConnection");
        publicIdentifiers.add("JavaAWTAccess");
        publicIdentifiers.add("JavaAWTFontAccess");
        publicIdentifiers.add("JavaBean");
        publicIdentifiers.add("JavaBeansAccess");
        publicIdentifiers.add("JavaCallWrapper");
        publicIdentifiers.add("JavacElements");
        publicIdentifiers.add("JavacFileManager");
        publicIdentifiers.add("JavacFileManager$SortFiles");
        publicIdentifiers.add("JavacFiler");
        publicIdentifiers.add("JavaCharStream");
        publicIdentifiers.add("JavaClass");
        publicIdentifiers.add("JavacMessager");
        publicIdentifiers.add("JavacMessages");
        publicIdentifiers.add("JavacMessages$ResourceBundleHelper");
        publicIdentifiers.add("JavaCompiler");
        publicIdentifiers.add("JavaCompiler$CompilationTask");
        publicIdentifiers.add("JavaCompiler$InitialFileParser");
        publicIdentifiers.add("JavaCompiler$InitialFileParserIntf");
        publicIdentifiers.add("JavaConstant");
        publicIdentifiers.add("JavacParser");
        publicIdentifiers.add("JavacParser$AbstractEndPosTable");
        publicIdentifiers.add("JavacParser$EmptyEndPosTable");
        publicIdentifiers.add("JavacParser$SimpleEndPosTable");
        publicIdentifiers.add("JavacProcessingEnvironment");
        publicIdentifiers.add("JavacProcessingEnvironment$ComputeAnnotationSet");
        publicIdentifiers.add("JavacRoundEnvironment");
        publicIdentifiers.add("JavacScope");
        publicIdentifiers.add("JavacTask");
        publicIdentifiers.add("JavacTaskImpl");
        publicIdentifiers.add("JavacTaskPool");
        publicIdentifiers.add("JavacTaskPool$Worker");
        publicIdentifiers.add("JavacToolProvider");
        publicIdentifiers.add("JavacTrees");
        publicIdentifiers.add("JavacTrees$Copier");
        publicIdentifiers.add("JavacTypes");
        publicIdentifiers.add("JavadocClassFinder");
        publicIdentifiers.add("JavadocEnter");
        publicIdentifiers.add("JavadocFormatter");
        publicIdentifiers.add("JavadocHelper");
        publicIdentifiers.add("JavadocLog");
        publicIdentifiers.add("JavadocMemberEnter");
        publicIdentifiers.add("JavadocTaskImpl");
        publicIdentifiers.add("JavadocTodo");
        publicIdentifiers.add("JavadocTokenizer");
        publicIdentifiers.add("JavadocTokenizer$JavadocComment");
        publicIdentifiers.add("JavadocTool");
        publicIdentifiers.add("JavadocToolProvider");
        publicIdentifiers.add("JavaField");
        publicIdentifiers.add("JavaFileManager");
        publicIdentifiers.add("JavaFileManager$Location");
        publicIdentifiers.add("JavaFileObject");
        publicIdentifiers.add("JavaIOAccess");
        publicIdentifiers.add("JavaIOFileDescriptorAccess");
        publicIdentifiers.add("JavaIOFilePermissionAccess");
        publicIdentifiers.add("JavaIOPrintStreamAccess");
        publicIdentifiers.add("JavaIOPrintWriterAccess");
        publicIdentifiers.add("JavaIORandomAccessFileAccess");
        publicIdentifiers.add("JavaKeyStore");
        publicIdentifiers.add("JavaKind$FormatWithToString");
        publicIdentifiers.add("JavaLangAccess");
        publicIdentifiers.add("java_lang_Class");
        publicIdentifiers.add("JavaLangInvokeAccess");
        publicIdentifiers.add("JavaLangModuleAccess");
        publicIdentifiers.add("JavaLangRefAccess");
        publicIdentifiers.add("JavaLangReflectAccess");
        publicIdentifiers.add("JavaMethod");
        publicIdentifiers.add("JavaMethodProfile$ProfiledMethod");
        publicIdentifiers.add("JavaNetHttpCookieAccess");
        publicIdentifiers.add("JavaNetInetAddressAccess");
        publicIdentifiers.add("JavaNetUriAccess");
        publicIdentifiers.add("JavaNetURLAccess");
        publicIdentifiers.add("JavaNioAccess");
        publicIdentifiers.add("JavaObjectInputFilterAccess");
        publicIdentifiers.add("JavaObjectInputStreamAccess");
        publicIdentifiers.add("JavaObjectInputStreamReadString");
        publicIdentifiers.add("JavapFileManager");
        publicIdentifiers.add("JavapTask");
        publicIdentifiers.add("JavapTask$BadArgs");
        publicIdentifiers.add("JavapTask$ClassFileInfo");
        publicIdentifiers.add("JavaRuntimeURLConnection");
        publicIdentifiers.add("JavaScriptScanner");
        publicIdentifiers.add("JavaScriptScanner$Fault");
        publicIdentifiers.add("JavaSecurityAccess");
        publicIdentifiers.add("JavaSecurityAccess$ProtectionDomainCache");
        publicIdentifiers.add("JavaSecurityPropertiesAccess");
        publicIdentifiers.add("JavaSecuritySignatureAccess");
        publicIdentifiers.add("JavaSecuritySpecAccess");
        publicIdentifiers.add("JavaShellToolBuilder");
        publicIdentifiers.add("JavaStackTraceAction");
        publicIdentifiers.add("JavaStackTracePanel");
        publicIdentifiers.add("JavaThread");
        publicIdentifiers.add("JavaThreadFactory");
        publicIdentifiers.add("JavaThreadPDAccess");
        publicIdentifiers.add("JavaThreadsPanel");
        publicIdentifiers.add("JavaThreadState");
        publicIdentifiers.add("JavaTimeDateTimePatternImpl");
        publicIdentifiers.add("JavaTimeDateTimePatternProvider");
        publicIdentifiers.add("JavaTimeSupplementary");
        publicIdentifiers.add("JavaTimeSupplementary_ar");
        publicIdentifiers.add("JavaTimeSupplementary_ar_JO");
        publicIdentifiers.add("JavaTimeSupplementary_ar_LB");
        publicIdentifiers.add("JavaTimeSupplementary_ar_SY");
        publicIdentifiers.add("JavaTimeSupplementary_be");
        publicIdentifiers.add("JavaTimeSupplementary_bg");
        publicIdentifiers.add("JavaTimeSupplementary_ca");
        publicIdentifiers.add("JavaTimeSupplementary_cs");
        publicIdentifiers.add("JavaTimeSupplementary_da");
        publicIdentifiers.add("JavaTimeSupplementary_de");
        publicIdentifiers.add("JavaTimeSupplementary_de_AT");
        publicIdentifiers.add("JavaTimeSupplementary_el");
        publicIdentifiers.add("JavaTimeSupplementary_en");
        publicIdentifiers.add("JavaTimeSupplementary_en_AU");
        publicIdentifiers.add("JavaTimeSupplementary_en_CA");
        publicIdentifiers.add("JavaTimeSupplementary_en_GB");
        publicIdentifiers.add("JavaTimeSupplementary_en_IE");
        publicIdentifiers.add("JavaTimeSupplementary_en_IN");
        publicIdentifiers.add("JavaTimeSupplementary_en_MT");
        publicIdentifiers.add("JavaTimeSupplementary_en_NZ");
        publicIdentifiers.add("JavaTimeSupplementary_en_SG");
        publicIdentifiers.add("JavaTimeSupplementary_en_ZA");
        publicIdentifiers.add("JavaTimeSupplementary_es");
        publicIdentifiers.add("JavaTimeSupplementary_es_AR");
        publicIdentifiers.add("JavaTimeSupplementary_es_BO");
        publicIdentifiers.add("JavaTimeSupplementary_es_CL");
        publicIdentifiers.add("JavaTimeSupplementary_es_CO");
        publicIdentifiers.add("JavaTimeSupplementary_es_CR");
        publicIdentifiers.add("JavaTimeSupplementary_es_DO");
        publicIdentifiers.add("JavaTimeSupplementary_es_EC");
        publicIdentifiers.add("JavaTimeSupplementary_es_GT");
        publicIdentifiers.add("JavaTimeSupplementary_es_HN");
        publicIdentifiers.add("JavaTimeSupplementary_es_MX");
        publicIdentifiers.add("JavaTimeSupplementary_es_PA");
        publicIdentifiers.add("JavaTimeSupplementary_es_PE");
        publicIdentifiers.add("JavaTimeSupplementary_es_PR");
        publicIdentifiers.add("JavaTimeSupplementary_es_PY");
        publicIdentifiers.add("JavaTimeSupplementary_es_US");
        publicIdentifiers.add("JavaTimeSupplementary_es_UY");
        publicIdentifiers.add("JavaTimeSupplementary_es_VE");
        publicIdentifiers.add("JavaTimeSupplementary_et");
        publicIdentifiers.add("JavaTimeSupplementary_fi");
        publicIdentifiers.add("JavaTimeSupplementary_fr");
        publicIdentifiers.add("JavaTimeSupplementary_fr_BE");
        publicIdentifiers.add("JavaTimeSupplementary_fr_CA");
        publicIdentifiers.add("JavaTimeSupplementary_fr_CH");
        publicIdentifiers.add("JavaTimeSupplementary_ga");
        publicIdentifiers.add("JavaTimeSupplementary_he");
        publicIdentifiers.add("JavaTimeSupplementary_hi_IN");
        publicIdentifiers.add("JavaTimeSupplementary_hr");
        publicIdentifiers.add("JavaTimeSupplementary_hu");
        publicIdentifiers.add("JavaTimeSupplementary_id");
        publicIdentifiers.add("JavaTimeSupplementary_is");
        publicIdentifiers.add("JavaTimeSupplementary_it");
        publicIdentifiers.add("JavaTimeSupplementary_it_CH");
        publicIdentifiers.add("JavaTimeSupplementary_ja");
        publicIdentifiers.add("JavaTimeSupplementary_ko");
        publicIdentifiers.add("JavaTimeSupplementary_lt");
        publicIdentifiers.add("JavaTimeSupplementary_lv");
        publicIdentifiers.add("JavaTimeSupplementary_mk");
        publicIdentifiers.add("JavaTimeSupplementary_ms");
        publicIdentifiers.add("JavaTimeSupplementary_mt");
        publicIdentifiers.add("JavaTimeSupplementary_nl");
        publicIdentifiers.add("JavaTimeSupplementary_nl_BE");
        publicIdentifiers.add("JavaTimeSupplementary_no");
        publicIdentifiers.add("JavaTimeSupplementary_pl");
        publicIdentifiers.add("JavaTimeSupplementaryProvider");
        publicIdentifiers.add("JavaTimeSupplementary_pt");
        publicIdentifiers.add("JavaTimeSupplementary_pt_PT");
        publicIdentifiers.add("JavaTimeSupplementary_ro");
        publicIdentifiers.add("JavaTimeSupplementary_ru");
        publicIdentifiers.add("JavaTimeSupplementary_sk");
        publicIdentifiers.add("JavaTimeSupplementary_sl");
        publicIdentifiers.add("JavaTimeSupplementary_sq");
        publicIdentifiers.add("JavaTimeSupplementary_sr");
        publicIdentifiers.add("JavaTimeSupplementary_sr_BA");
        publicIdentifiers.add("JavaTimeSupplementary_sr_Latn");
        publicIdentifiers.add("JavaTimeSupplementary_sv");
        publicIdentifiers.add("JavaTimeSupplementary_th");
        publicIdentifiers.add("JavaTimeSupplementary_tr");
        publicIdentifiers.add("JavaTimeSupplementary_uk");
        publicIdentifiers.add("JavaTimeSupplementary_vi");
        publicIdentifiers.add("JavaTimeSupplementary_zh");
        publicIdentifiers.add("JavaTimeSupplementary_zh_HK");
        publicIdentifiers.add("JavaTimeSupplementary_zh_SG");
        publicIdentifiers.add("JavaTimeSupplementary_zh_TW");
        publicIdentifiers.add("JavaTokenizer");
        publicIdentifiers.add("JavaTokenizer$BasicComment");
        publicIdentifiers.add("JavaType");
        publicIdentifiers.add("JavaTypeProfile$ProfiledType");
        publicIdentifiers.add("JavaUtilCollectionAccess");
        publicIdentifiers.add("JavaUtilConcurrentFJPAccess");
        publicIdentifiers.add("JavaUtilConcurrentTLRAccess");
        publicIdentifiers.add("JavaUtilJarAccess");
        publicIdentifiers.add("JavaUtilResourceBundleAccess");
        publicIdentifiers.add("JavaUtilZipFileAccess");
        publicIdentifiers.add("JavaValue");
        publicIdentifiers.add("JavaVFrame");
        publicIdentifiers.add("JavaxCryptoSealedObjectAccess");
        publicIdentifiers.add("JavaxCryptoSpecAccess");
        publicIdentifiers.add("JavaxSecurityAuthKerberosAccess");
        publicIdentifiers.add("JAXPConstants");
        publicIdentifiers.add("JAXPExtensionsProvider");
        publicIdentifiers.add("JAXPPrefixResolver");
        publicIdentifiers.add("JAXPVariableStack");
        publicIdentifiers.add("JBooleanField");
        publicIdentifiers.add("JButton");
        publicIdentifiers.add("JButton$AccessibleJButton");
        publicIdentifiers.add("JByteField");
        publicIdentifiers.add("JCDiagnostic");
        publicIdentifiers.add("JCDiagnostic$DiagnosticInfo");
        publicIdentifiers.add("JCDiagnostic$DiagnosticPosition");
        publicIdentifiers.add("JCDiagnostic$Factory");
        publicIdentifiers.add("JCDiagnostic$MultilineDiagnostic");
        publicIdentifiers.add("JCDiagnostic$SimpleDiagnosticPosition");
        publicIdentifiers.add("JCEMapper");
        publicIdentifiers.add("JCEMapper$Algorithm");
        publicIdentifiers.add("JCharField");
        publicIdentifiers.add("JCheckBox");
        publicIdentifiers.add("JCheckBox$AccessibleJCheckBox");
        publicIdentifiers.add("JCheckBoxMenuItem");
        publicIdentifiers.add("JCheckBoxMenuItem$AccessibleJCheckBoxMenuItem");
        publicIdentifiers.add("JCmd");
        publicIdentifiers.add("JColorChooser");
        publicIdentifiers.add("JColorChooser$AccessibleJColorChooser");
        publicIdentifiers.add("JComboBox");
        publicIdentifiers.add("JComboBox$AccessibleJComboBox");
        publicIdentifiers.add("JComboBox$KeySelectionManager");
        publicIdentifiers.add("JComponent");
        publicIdentifiers.add("JComponent$AccessibleJComponent");
        publicIdentifiers.add("JComponent$AccessibleJComponent$AccessibleContainerHandler");
        publicIdentifiers.add("JComponent$AccessibleJComponent$AccessibleFocusHandler");
        publicIdentifiers.add("JConsole");
        publicIdentifiers.add("JConsoleContext");
        publicIdentifiers.add("JConsolePlugin");
        publicIdentifiers.add("JCTree");
        publicIdentifiers.add("JCTree$Factory");
        publicIdentifiers.add("JCTree$JCAnnotatedType");
        publicIdentifiers.add("JCTree$JCAnnotation");
        publicIdentifiers.add("JCTree$JCArrayAccess");
        publicIdentifiers.add("JCTree$JCArrayTypeTree");
        publicIdentifiers.add("JCTree$JCAssert");
        publicIdentifiers.add("JCTree$JCAssign");
        publicIdentifiers.add("JCTree$JCAssignOp");
        publicIdentifiers.add("JCTree$JCBinary");
        publicIdentifiers.add("JCTree$JCBindingPattern");
        publicIdentifiers.add("JCTree$JCBlock");
        publicIdentifiers.add("JCTree$JCBreak");
        publicIdentifiers.add("JCTree$JCCase");
        publicIdentifiers.add("JCTree$JCCaseLabel");
        publicIdentifiers.add("JCTree$JCCatch");
        publicIdentifiers.add("JCTree$JCClassDecl");
        publicIdentifiers.add("JCTree$JCCompilationUnit");
        publicIdentifiers.add("JCTree$JCConditional");
        publicIdentifiers.add("JCTree$JCConstantCaseLabel");
        publicIdentifiers.add("JCTree$JCContinue");
        publicIdentifiers.add("JCTree$JCDefaultCaseLabel");
        publicIdentifiers.add("JCTree$JCDirective");
        publicIdentifiers.add("JCTree$JCDoWhileLoop");
        publicIdentifiers.add("JCTree$JCEnhancedForLoop");
        publicIdentifiers.add("JCTree$JCErroneous");
        publicIdentifiers.add("JCTree$JCExports");
        publicIdentifiers.add("JCTree$JCExpression");
        publicIdentifiers.add("JCTree$JCExpressionStatement");
        publicIdentifiers.add("JCTree$JCFieldAccess");
        publicIdentifiers.add("JCTree$JCForLoop");
        publicIdentifiers.add("JCTree$JCFunctionalExpression");
        publicIdentifiers.add("JCTree$JCIdent");
        publicIdentifiers.add("JCTree$JCIf");
        publicIdentifiers.add("JCTree$JCImport");
        publicIdentifiers.add("JCTree$JCInstanceOf");
        publicIdentifiers.add("JCTree$JCLabeledStatement");
        publicIdentifiers.add("JCTree$JCLambda");
        publicIdentifiers.add("JCTree$JCLiteral");
        publicIdentifiers.add("JCTree$JCMemberReference");
        publicIdentifiers.add("JCTree$JCMethodDecl");
        publicIdentifiers.add("JCTree$JCMethodInvocation");
        publicIdentifiers.add("JCTree$JCModifiers");
        publicIdentifiers.add("JCTree$JCModuleDecl");
        publicIdentifiers.add("JCTree$JCNewArray");
        publicIdentifiers.add("JCTree$JCNewClass");
        publicIdentifiers.add("JCTree$JCOpens");
        publicIdentifiers.add("JCTree$JCOperatorExpression");
        publicIdentifiers.add("JCTree$JCPackageDecl");
        publicIdentifiers.add("JCTree$JCParens");
        publicIdentifiers.add("JCTree$JCParenthesizedPattern");
        publicIdentifiers.add("JCTree$JCPattern");
        publicIdentifiers.add("JCTree$JCPatternCaseLabel");
        publicIdentifiers.add("JCTree$JCPolyExpression");
        publicIdentifiers.add("JCTree$JCPrimitiveTypeTree");
        publicIdentifiers.add("JCTree$JCProvides");
        publicIdentifiers.add("JCTree$JCRecordPattern");
        publicIdentifiers.add("JCTree$JCRequires");
        publicIdentifiers.add("JCTree$JCReturn");
        publicIdentifiers.add("JCTree$JCSkip");
        publicIdentifiers.add("JCTree$JCStatement");
        publicIdentifiers.add("JCTree$JCSwitch");
        publicIdentifiers.add("JCTree$JCSwitchExpression");
        publicIdentifiers.add("JCTree$JCSynchronized");
        publicIdentifiers.add("JCTree$JCThrow");
        publicIdentifiers.add("JCTree$JCTry");
        publicIdentifiers.add("JCTree$JCTypeApply");
        publicIdentifiers.add("JCTree$JCTypeCast");
        publicIdentifiers.add("JCTree$JCTypeIntersection");
        publicIdentifiers.add("JCTree$JCTypeParameter");
        publicIdentifiers.add("JCTree$JCTypeUnion");
        publicIdentifiers.add("JCTree$JCUnary");
        publicIdentifiers.add("JCTree$JCUses");
        publicIdentifiers.add("JCTree$JCVariableDecl");
        publicIdentifiers.add("JCTree$JCWhileLoop");
        publicIdentifiers.add("JCTree$JCWildcard");
        publicIdentifiers.add("JCTree$JCYield");
        publicIdentifiers.add("JCTree$LetExpr");
        publicIdentifiers.add("JCTree$TypeBoundKind");
        publicIdentifiers.add("JCTree$Visitor");
        publicIdentifiers.add("JdbcRowSet");
        publicIdentifiers.add("JdbcRowSetImpl");
        publicIdentifiers.add("JdbcRowSetResourceBundle");
        publicIdentifiers.add("JdepsConfiguration");
        publicIdentifiers.add("JdepsConfiguration$Builder");
        publicIdentifiers.add("JdepsFilter");
        publicIdentifiers.add("JdepsFilter$Builder");
        publicIdentifiers.add("JdepsWriter");
        publicIdentifiers.add("JDesktopPane");
        publicIdentifiers.add("JDesktopPane$AccessibleJDesktopPane");
        publicIdentifiers.add("JDialog");
        publicIdentifiers.add("JDialog$AccessibleJDialog");
        publicIdentifiers.add("JdiDefaultExecutionControl");
        publicIdentifiers.add("JdiExecutionControl");
        publicIdentifiers.add("JdiExecutionControlProvider");
        publicIdentifiers.add("JdiInitiator");
        publicIdentifiers.add("JdkConsole");
        publicIdentifiers.add("JdkConsoleProvider");
        publicIdentifiers.add("JdkConsoleProviderImpl");
        publicIdentifiers.add("JdkJfrConsumer");
        publicIdentifiers.add("JDKPlatformProvider");
        publicIdentifiers.add("JDKSettingControl");
        publicIdentifiers.add("JdkXmlFeatures");
        publicIdentifiers.add("JdkXmlUtils");
        publicIdentifiers.add("JDKXPathFactory");
        publicIdentifiers.add("JDoubleField");
        publicIdentifiers.add("JdpGenericPacket");
        publicIdentifiers.add("JdpPacket");
        publicIdentifiers.add("JEditorPane");
        publicIdentifiers.add("JEditorPane$AccessibleJEditorPane");
        publicIdentifiers.add("JEditorPane$AccessibleJEditorPaneHTML");
        publicIdentifiers.add("JEditorPane$JEditorPaneAccessibleHypertextSupport");
        publicIdentifiers.add("JEditorPane$JEditorPaneAccessibleHypertextSupport$HTMLLink");
        publicIdentifiers.add("JFileChooser");
        publicIdentifiers.add("JFileChooser$AccessibleJFileChooser");
        publicIdentifiers.add("JFloatField");
        publicIdentifiers.add("JFormattedTextField");
        publicIdentifiers.add("JFormattedTextField$AbstractFormatter");
        publicIdentifiers.add("JFormattedTextField$AbstractFormatterFactory");
        publicIdentifiers.add("JFrame");
        publicIdentifiers.add("JFrame$AccessibleJFrame");
        publicIdentifiers.add("JFrameWrapper");
        publicIdentifiers.add("JgssExtender");
        publicIdentifiers.add("JInfo");
        publicIdentifiers.add("JInternalFrame");
        publicIdentifiers.add("JInternalFrame$AccessibleJInternalFrame");
        publicIdentifiers.add("JInternalFrame$JDesktopIcon");
        publicIdentifiers.add("JInternalFrame$JDesktopIcon$AccessibleJDesktopIcon");
        publicIdentifiers.add("JInternalFrameWrapper");
        publicIdentifiers.add("JIntField");
        publicIdentifiers.add("JISAutoDetect");
        publicIdentifiers.add("JIS_X_0201");
        publicIdentifiers.add("JIS_X_0208");
        publicIdentifiers.add("JIS_X_0208_MS5022X");
        publicIdentifiers.add("JIS_X_0208_MS932");
        publicIdentifiers.add("JIS_X_0208_Solaris");
        publicIdentifiers.add("JIS_X_0212");
        publicIdentifiers.add("JIS_X_0212_MS5022X");
        publicIdentifiers.add("JIS_X_0212_Solaris");
        publicIdentifiers.add("JLabel");
        publicIdentifiers.add("JLabel$AccessibleJLabel");
        publicIdentifiers.add("JLayeredPane");
        publicIdentifiers.add("JLayeredPane$AccessibleJLayeredPane");
        publicIdentifiers.add("JlinkTask");
        publicIdentifiers.add("JList");
        publicIdentifiers.add("JList$AccessibleJList");
        publicIdentifiers.add("JList$AccessibleJList$AccessibleJListChild");
        publicIdentifiers.add("JLongField");
        publicIdentifiers.add("JMap");
        publicIdentifiers.add("JMenu");
        publicIdentifiers.add("JMenu$AccessibleJMenu");
        publicIdentifiers.add("JMenu$WinListener");
        publicIdentifiers.add("JMenuBar");
        publicIdentifiers.add("JMenuBar$AccessibleJMenuBar");
        publicIdentifiers.add("JMenuItem");
        publicIdentifiers.add("JMenuItem$AccessibleJMenuItem");
        publicIdentifiers.add("JMException");
        publicIdentifiers.add("JmodArchive");
        publicIdentifiers.add("JmodArchive$JmodEntry");
        publicIdentifiers.add("JmodFile");
        publicIdentifiers.add("JmodFile$Entry");
        publicIdentifiers.add("JmodTask");
        publicIdentifiers.add("JMRuntimeException");
        publicIdentifiers.add("JMX");
        publicIdentifiers.add("JMXAddressable");
        publicIdentifiers.add("JMXAuthenticator");
        publicIdentifiers.add("JMXConnectionNotification");
        publicIdentifiers.add("JMXConnector");
        publicIdentifiers.add("JMXConnectorFactory");
        publicIdentifiers.add("JMXConnectorProvider");
        publicIdentifiers.add("JMXConnectorServer");
        publicIdentifiers.add("JMXConnectorServerFactory");
        publicIdentifiers.add("JMXConnectorServerMBean");
        publicIdentifiers.add("JMXConnectorServerProvider");
        publicIdentifiers.add("JmxMBeanServerBuilder");
        publicIdentifiers.add("JMXPrincipal");
        publicIdentifiers.add("JmxProperties");
        publicIdentifiers.add("JMXProviderException");
        publicIdentifiers.add("JMXServerErrorException");
        publicIdentifiers.add("JMXServiceURL");
        publicIdentifiers.add("JMXSubjectDomainCombiner");
        publicIdentifiers.add("JnaSupport");
        publicIdentifiers.add("JndiLoginModule");
        publicIdentifiers.add("JNIHandleBlock");
        publicIdentifiers.add("JNIHandles");
        publicIdentifiers.add("JNITypeParser");
        publicIdentifiers.add("JNIWriter");
        publicIdentifiers.add("JobMediaSheets");
        publicIdentifiers.add("JobSheets");
        publicIdentifiers.add("JobState");
        publicIdentifiers.add("JobStateReason");
        publicIdentifiers.add("Johab");
        publicIdentifiers.add("Joinable");
        publicIdentifiers.add("JoinRowSet");
        publicIdentifiers.add("JoinRowSetImpl");
        publicIdentifiers.add("JOptionPane");
        publicIdentifiers.add("JOptionPane$AccessibleJOptionPane");
        publicIdentifiers.add("JPackageToolProvider");
        publicIdentifiers.add("JPanel");
        publicIdentifiers.add("JPanel$AccessibleJPanel");
        publicIdentifiers.add("JPasswordField");
        publicIdentifiers.add("JPasswordField$AccessibleJPasswordField");
        publicIdentifiers.add("jpeg");
        publicIdentifiers.add("JPEG");
        publicIdentifiers.add("JPEGHuffmanTable");
        publicIdentifiers.add("JPEGImageDecoder");
        publicIdentifiers.add("JPEGImageMetadataFormat");
        publicIdentifiers.add("JPEGImageMetadataFormatResources");
        publicIdentifiers.add("JPEGImageReader");
        publicIdentifiers.add("JPEGImageReaderResources");
        publicIdentifiers.add("JPEGImageReaderSpi");
        publicIdentifiers.add("JPEGImageReadParam");
        publicIdentifiers.add("JPEGImageWriteParam");
        publicIdentifiers.add("JPEGImageWriter");
        publicIdentifiers.add("JPEGImageWriterResources");
        publicIdentifiers.add("JPEGImageWriterSpi");
        publicIdentifiers.add("JPEGMetadata");
        publicIdentifiers.add("JPEGQTable");
        publicIdentifiers.add("JPEGStreamMetadataFormat");
        publicIdentifiers.add("JPEGStreamMetadataFormatResources");
        publicIdentifiers.add("JPopupMenu");
        publicIdentifiers.add("JPopupMenu$AccessibleJPopupMenu");
        publicIdentifiers.add("JPopupMenu$Separator");
        publicIdentifiers.add("JProgressBar");
        publicIdentifiers.add("JProgressBar$AccessibleJProgressBar");
        publicIdentifiers.add("Jps");
        publicIdentifiers.add("JRadioButton");
        publicIdentifiers.add("JRadioButton$AccessibleJRadioButton");
        publicIdentifiers.add("JRadioButtonMenuItem");
        publicIdentifiers.add("JRadioButtonMenuItem$AccessibleJRadioButtonMenuItem");
        publicIdentifiers.add("JRELocaleConstants");
        publicIdentifiers.add("JRELocaleProviderAdapter");
        publicIdentifiers.add("JRootPane");
        publicIdentifiers.add("JRootPane$AccessibleJRootPane");
        publicIdentifiers.add("JRootPane$RootLayout");
        publicIdentifiers.add("JRTIndex");
        publicIdentifiers.add("JRTIndex$CtSym");
        publicIdentifiers.add("JScrollBar");
        publicIdentifiers.add("JScrollBar$AccessibleJScrollBar");
        publicIdentifiers.add("JScrollPane");
        publicIdentifiers.add("JScrollPane$AccessibleJScrollPane");
        publicIdentifiers.add("JScrollPane$ScrollBar");
        publicIdentifiers.add("JSeparator");
        publicIdentifiers.add("JSeparator$AccessibleJSeparator");
        publicIdentifiers.add("JSException");
        publicIdentifiers.add("JShell");
        publicIdentifiers.add("JShell$Builder");
        publicIdentifiers.add("JShell$Subscription");
        publicIdentifiers.add("JShellException");
        publicIdentifiers.add("JShellTool");
        publicIdentifiers.add("JShellToolBuilder");
        publicIdentifiers.add("JShellToolProvider");
        publicIdentifiers.add("JShortField");
        publicIdentifiers.add("JSlider");
        publicIdentifiers.add("JSlider$AccessibleJSlider");
        publicIdentifiers.add("JSnap");
        publicIdentifiers.add("JSObject");
        publicIdentifiers.add("JSpinner");
        publicIdentifiers.add("JSpinner$AccessibleJSpinner");
        publicIdentifiers.add("JSpinner$DateEditor");
        publicIdentifiers.add("JSpinner$DefaultEditor");
        publicIdentifiers.add("JSpinner$ListEditor");
        publicIdentifiers.add("JSpinner$NumberEditor");
        publicIdentifiers.add("JSplitPane");
        publicIdentifiers.add("JSplitPane$AccessibleJSplitPane");
        publicIdentifiers.add("JSR");
        publicIdentifiers.add("JSRInlinerAdapter");
        publicIdentifiers.add("JsrInstruction");
        publicIdentifiers.add("JSR_W");
        publicIdentifiers.add("JStack");
        publicIdentifiers.add("Jstat");
        publicIdentifiers.add("Jstatd");
        publicIdentifiers.add("JStatLogger");
        publicIdentifiers.add("JTabbedPane");
        publicIdentifiers.add("JTabbedPane$AccessibleJTabbedPane");
        publicIdentifiers.add("JTabbedPane$ModelListener");
        publicIdentifiers.add("JTable");
        publicIdentifiers.add("JTable$AccessibleJTable");
        publicIdentifiers.add("JTable$AccessibleJTable$AccessibleJTableCell");
        publicIdentifiers.add("JTable$AccessibleJTable$AccessibleJTableModelChange");
        publicIdentifiers.add("JTableHeader");
        publicIdentifiers.add("JTableHeader$AccessibleJTableHeader");
        publicIdentifiers.add("JTableHeader$AccessibleJTableHeader$AccessibleJTableHeaderEntry");
        publicIdentifiers.add("JTextArea");
        publicIdentifiers.add("JTextArea$AccessibleJTextArea");
        publicIdentifiers.add("JTextComponent");
        publicIdentifiers.add("JTextComponent$AccessibleJTextComponent");
        publicIdentifiers.add("JTextComponent$KeyBinding");
        publicIdentifiers.add("JTextField");
        publicIdentifiers.add("JTextField$AccessibleJTextField");
        publicIdentifiers.add("JTextPane");
        publicIdentifiers.add("JToggleButton");
        publicIdentifiers.add("JToggleButton$AccessibleJToggleButton");
        publicIdentifiers.add("JToggleButton$ToggleButtonModel");
        publicIdentifiers.add("JToolBar");
        publicIdentifiers.add("JToolBar$AccessibleJToolBar");
        publicIdentifiers.add("JToolBar$Separator");
        publicIdentifiers.add("JToolTip");
        publicIdentifiers.add("JToolTip$AccessibleJToolTip");
        publicIdentifiers.add("JTree");
        publicIdentifiers.add("JTree$AccessibleJTree");
        publicIdentifiers.add("JTree$AccessibleJTree$AccessibleJTreeNode");
        publicIdentifiers.add("JTree$DynamicUtilTreeNode");
        publicIdentifiers.add("JTree$EmptySelectionModel");
        publicIdentifiers.add("JTree$TreeModelHandler");
        publicIdentifiers.add("JTree$TreeSelectionRedirector");
        publicIdentifiers.add("JTreeTable");
        publicIdentifiers.add("JTreeTable$TreeTableCellEditor");
        publicIdentifiers.add("JTreeTable$TreeTableCellRenderer");
        publicIdentifiers.add("JulianCalendar");
        publicIdentifiers.add("JumpData");
        publicIdentifiers.add("JumpInsnNode");
        publicIdentifiers.add("JViewport");
        publicIdentifiers.add("JViewport$AccessibleJViewport");
        publicIdentifiers.add("JViewport$ViewListener");
        publicIdentifiers.add("JVMCI");
        publicIdentifiers.add("JVMCIBackend");
        publicIdentifiers.add("JVMCICompiler");
        publicIdentifiers.add("JVMCICompilerFactory");
        publicIdentifiers.add("JVMCIError");
        publicIdentifiers.add("JVMCIPermission");
        publicIdentifiers.add("JVMCIRuntime");
        publicIdentifiers.add("JVMCIServiceLocator");
        publicIdentifiers.add("JVMDebugger");
        publicIdentifiers.add("JVMDIClassStatus");
        publicIdentifiers.add("JVMState");
        publicIdentifiers.add("JvmtiAgentThread");
        publicIdentifiers.add("JvmtiExport");
        publicIdentifiers.add("JvmtiMountTransition");
        publicIdentifiers.add("JWebServer");
        publicIdentifiers.add("JWindow");
        publicIdentifiers.add("JWindow$AccessibleJWindow");
    }

    private void addPublicIdentifiersKM() {
        publicIdentifiers.add("KAKeyDerivation");
        publicIdentifiers.add("KdcErrException");
        publicIdentifiers.add("KDCOptions");
        publicIdentifiers.add("KDCRep");
        publicIdentifiers.add("KDCReq");
        publicIdentifiers.add("KDCReqBody");
        publicIdentifiers.add("KeepAliveCache");
        publicIdentifiers.add("KeepAliveStream");
        publicIdentifiers.add("KerberosFlags");
        publicIdentifiers.add("KerberosKey");
        publicIdentifiers.add("KerberosSecrets");
        publicIdentifiers.add("KerberosTicket");
        publicIdentifiers.add("KerberosTime");
        publicIdentifiers.add("Kernel");
        publicIdentifiers.add("Key");
        publicIdentifiers.add("KeyAdapter");
        publicIdentifiers.add("KeyAgreement");
        publicIdentifiers.add("KeyAgreementSpi");
        publicIdentifiers.add("KeyAlreadyExistsException");
        publicIdentifiers.add("KeyboardFocusManager");
        publicIdentifiers.add("KeyboardFocusManagerPeer");
        publicIdentifiers.add("KeyboardFocusManagerPeerImpl");
        publicIdentifiers.add("KeyboardFocusManagerPeerProvider");
        publicIdentifiers.add("KeyEvent");
        publicIdentifiers.add("KeyEventDispatcher");
        publicIdentifiers.add("KeyEventPostProcessor");
        publicIdentifiers.add("KeyException");
        publicIdentifiers.add("KeyFactory");
        publicIdentifiers.add("KeyFactorySpi");
        publicIdentifiers.add("KeyGenerator");
        publicIdentifiers.add("KeyGeneratorSpi");
        publicIdentifiers.add("KeyIdentifier");
        publicIdentifiers.add("KeyIndex");
        publicIdentifiers.add("KeyIndex$KeyIndexIterator");
        publicIdentifiers.add("KeyIndex$KeyIndexIterator$KeyIndexHeapNode");
        publicIdentifiers.add("KeyInfo");
        publicIdentifiers.add("KeyInfoContent");
        publicIdentifiers.add("KeyInfoFactory");
        publicIdentifiers.add("KeyInfoReference");
        publicIdentifiers.add("KeyInfoReferenceResolver");
        publicIdentifiers.add("KeyListener");
        publicIdentifiers.add("KeyManagementException");
        publicIdentifiers.add("KeyManager");
        publicIdentifiers.add("KeyManagerFactory");
        publicIdentifiers.add("KeyManagerFactorySpi");
        publicIdentifiers.add("Keymap");
        publicIdentifiers.add("KeyMap");
        publicIdentifiers.add("KeyName");
        publicIdentifiers.add("KeyPairGenerator");
        publicIdentifiers.add("KeyPairGeneratorSpi");
        publicIdentifiers.add("KeyRef");
        publicIdentifiers.add("KeyRep");
        publicIdentifiers.add("KeyResolver");
        publicIdentifiers.add("KeyResolverException");
        publicIdentifiers.add("KeyResolverSpi");
        publicIdentifiers.add("KeySelector");
        publicIdentifiers.add("KeySelector$Purpose");
        publicIdentifiers.add("KeySelectorException");
        publicIdentifiers.add("KeySelectorResult");
        publicIdentifiers.add("KeySpec");
        publicIdentifiers.add("KeyStore");
        publicIdentifiers.add("KeyStore$Builder");
        publicIdentifiers.add("KeyStore$CallbackHandlerProtection");
        publicIdentifiers.add("KeyStore$Entry");
        publicIdentifiers.add("KeyStore$Entry$Attribute");
        publicIdentifiers.add("KeyStore$LoadStoreParameter");
        publicIdentifiers.add("KeyStore$PasswordProtection");
        publicIdentifiers.add("KeyStore$ProtectionParameter");
        publicIdentifiers.add("KeyStoreBuilderParameters");
        publicIdentifiers.add("KeyStoreDelegator");
        publicIdentifiers.add("KeyStoreException");
        publicIdentifiers.add("KeyStoreLoginModule");
        publicIdentifiers.add("KeyStoreResolver");
        publicIdentifiers.add("KeyStoreSpi");
        publicIdentifiers.add("KeyStoreUtil");
        publicIdentifiers.add("KeyStroke");
        publicIdentifiers.add("KeyTab");
        publicIdentifiers.add("KeyTabConstants");
        publicIdentifiers.add("KeyTabEntry");
        publicIdentifiers.add("KeyTabInputStream");
        publicIdentifiers.add("KeyTabOutputStream");
        publicIdentifiers.add("KeyUsage");
        publicIdentifiers.add("KeyUsageExtension");
        publicIdentifiers.add("KeyValue");
        publicIdentifiers.add("KeyValueContent");
        publicIdentifiers.add("Keywords");
        publicIdentifiers.add("Kinds");
        publicIdentifiers.add("Kinds$KindSelector");
        publicIdentifiers.add("Klass");
        publicIdentifiers.add("KlassArray");
        publicIdentifiers.add("KnownOIDs");
        publicIdentifiers.add("KOI8_R");
        publicIdentifiers.add("KOI8_U");
        publicIdentifiers.add("Krb5");
        publicIdentifiers.add("Krb5AcceptCredential");
        publicIdentifiers.add("Krb5InitCredential");
        publicIdentifiers.add("Krb5LoginModule");
        publicIdentifiers.add("Krb5NameElement");
        publicIdentifiers.add("Krb5Util");
        publicIdentifiers.add("KrbApErrException");
        publicIdentifiers.add("KrbApRep");
        publicIdentifiers.add("KrbApReq");
        publicIdentifiers.add("KrbAsReq");
        publicIdentifiers.add("KrbCred");
        publicIdentifiers.add("KRBCred");
        publicIdentifiers.add("KrbCredInfo");
        publicIdentifiers.add("KrbCryptoException");
        publicIdentifiers.add("KrbDataInputStream");
        publicIdentifiers.add("KrbDataOutputStream");
        publicIdentifiers.add("KrbErrException");
        publicIdentifiers.add("KRBError");
        publicIdentifiers.add("KrbException");
        publicIdentifiers.add("KrbTgsReq");
        publicIdentifiers.add("Long");
        publicIdentifiers.add("L2D");
        publicIdentifiers.add("L2F");
        publicIdentifiers.add("L2I");
        publicIdentifiers.add("Label");
        publicIdentifiers.add("Label$AccessibleAWTLabel");
        publicIdentifiers.add("LabeledComponent");
        publicIdentifiers.add("LabeledStatementTree");
        publicIdentifiers.add("LabelNode");
        publicIdentifiers.add("LabelPeer");
        publicIdentifiers.add("LabelTranslator");
        publicIdentifiers.add("LabelUI");
        publicIdentifiers.add("LabelView");
        publicIdentifiers.add("LADD");
        publicIdentifiers.add("LALOAD");
        publicIdentifiers.add("LambdaConversionException");
        publicIdentifiers.add("LambdaExpressionTree");
        publicIdentifiers.add("LambdaToMethod");
        publicIdentifiers.add("LAND");
        publicIdentifiers.add("LanguageCallback");
        publicIdentifiers.add("LanguageTag");
        publicIdentifiers.add("LASTORE");
        publicIdentifiers.add("LastReq");
        publicIdentifiers.add("LastReqEntry");
        publicIdentifiers.add("LauncherProperties");
        publicIdentifiers.add("LauncherProperties$Errors");
        publicIdentifiers.add("LaunchingConnector");
        publicIdentifiers.add("LayeredHighlighter");
        publicIdentifiers.add("LayeredHighlighter$LayerPainter");
        publicIdentifiers.add("LayerInstantiationException");
        publicIdentifiers.add("LayerUI");
        publicIdentifiers.add("LayoutCharacters");
        publicIdentifiers.add("LayoutFocusTraversalPolicy");
        publicIdentifiers.add("LayoutManager");
        publicIdentifiers.add("LayoutManager2");
        publicIdentifiers.add("LayoutPath");
        publicIdentifiers.add("LayoutPathImpl");
        publicIdentifiers.add("LayoutPathImpl$EmptyPath");
        publicIdentifiers.add("LayoutQueue");
        publicIdentifiers.add("LayoutStyle");
        publicIdentifiers.add("LazyBlockSym");
        publicIdentifiers.add("LazyCompositeData");
        publicIdentifiers.add("LazyDocCommentTable");
        publicIdentifiers.add("LazyReflectiveObjectGenerator");
        publicIdentifiers.add("LazyType");
        publicIdentifiers.add("LCDTextRenderer");
        publicIdentifiers.add("LCMP");
        publicIdentifiers.add("LCMSImageLayout$ImageLayoutException");
        publicIdentifiers.add("LCONST");
        publicIdentifiers.add("LDAPCertStoreParameters");
        publicIdentifiers.add("LdapContext");
        publicIdentifiers.add("LdapDnsProvider");
        publicIdentifiers.add("LdapLoginModule");
        publicIdentifiers.add("LdapName");
        publicIdentifiers.add("LdapReferralException");
        publicIdentifiers.add("ldapURLContextFactory");
        publicIdentifiers.add("LDC");
        publicIdentifiers.add("LDC2_W");
        publicIdentifiers.add("LdcInsnNode");
        publicIdentifiers.add("LDC_W");
        publicIdentifiers.add("LDIV");
        publicIdentifiers.add("LegacyAlgorithmConstraints");
        publicIdentifiers.add("Length");
        publicIdentifiers.add("Level");
        publicIdentifiers.add("Levenshtein");
        publicIdentifiers.add("Lexer");
        publicIdentifiers.add("LexicalHandler");
        publicIdentifiers.add("LibProvidersLookup$PackageLookup");
        publicIdentifiers.add("LightweightContent");
        publicIdentifiers.add("LightweightContentWrapper");
        publicIdentifiers.add("LightweightFrame");
        publicIdentifiers.add("LightweightFrameWrapper");
        publicIdentifiers.add("LightweightPeer");
        publicIdentifiers.add("LimitExceededException");
        publicIdentifiers.add("Line");
        publicIdentifiers.add("Line$Info");
        publicIdentifiers.add("Line2D");
        publicIdentifiers.add("Line2D$Double");
        publicIdentifiers.add("Line2D$Float");
        publicIdentifiers.add("LineBorder");
        publicIdentifiers.add("LineDisciplineTerminal");
        publicIdentifiers.add("LineEvent");
        publicIdentifiers.add("LineEvent$Type");
        publicIdentifiers.add("LineListener");
        publicIdentifiers.add("LineMap");
        publicIdentifiers.add("LineMetrics");
        publicIdentifiers.add("LineNotFoundException");
        publicIdentifiers.add("LineNumberGen");
        publicIdentifiers.add("LineNumberInfo");
        publicIdentifiers.add("LineNumberInputStream");
        publicIdentifiers.add("LineNumberNode");
        publicIdentifiers.add("LineNumberReader");
        publicIdentifiers.add("LineNumberTable");
        publicIdentifiers.add("LineNumberTable_attribute");
        publicIdentifiers.add("LineNumberTable_attribute$Entry");
        publicIdentifiers.add("LineNumberTableElement");
        publicIdentifiers.add("LineNumberVisitor");
        publicIdentifiers.add("LineReader");
        publicIdentifiers.add("LineReaderImpl");
        publicIdentifiers.add("LineReaderImpl$PostResult");
        publicIdentifiers.add("LineUnavailableException");
        publicIdentifiers.add("LinkageError");
        publicIdentifiers.add("LinkedBlockingDeque");
        publicIdentifiers.add("LinkedBlockingQueue");
        publicIdentifiers.add("LinkedHashMap");
        publicIdentifiers.add("LinkedHashSet");
        publicIdentifiers.add("LinkedList");
        publicIdentifiers.add("LinkedTransferQueue");
        publicIdentifiers.add("Linker");
        publicIdentifiers.add("Linker$Option");
        publicIdentifiers.add("Linker$Option$CaptureCallState");
        publicIdentifiers.add("LinkerOptions");
        publicIdentifiers.add("LinkerOptions$LinkerOptionImpl");
        publicIdentifiers.add("LinkerServices");
        publicIdentifiers.add("LinkException");
        publicIdentifiers.add("LinkFactory");
        publicIdentifiers.add("LinkInfo");
        publicIdentifiers.add("LinkLoopException");
        publicIdentifiers.add("LinkRef");
        publicIdentifiers.add("LinkRequest");
        publicIdentifiers.add("Links");
        publicIdentifiers.add("LinkStyle");
        publicIdentifiers.add("LinkTree");
        publicIdentifiers.add("Lint");
        publicIdentifiers.add("Lint$AugmentVisitor");
        publicIdentifiers.add("LinuxAArch64CallArranger");
        publicIdentifiers.add("LinuxAARCH64JavaThreadPDAccess");
        publicIdentifiers.add("LinuxAARCH64ThreadContext");
        publicIdentifiers.add("LinuxAArch64VaList");
        publicIdentifiers.add("LinuxAArch64VaList$Builder");
        publicIdentifiers.add("LinuxAddress");
        publicIdentifiers.add("LinuxAMD64JavaThreadPDAccess");
        publicIdentifiers.add("LinuxAMD64ThreadContext");
        publicIdentifiers.add("LinuxAppBundler");
        publicIdentifiers.add("LinuxAppImageBuilder");
        publicIdentifiers.add("LinuxAsynchronousChannelProvider");
        publicIdentifiers.add("LinuxDebBundler");
        publicIdentifiers.add("LinuxDebugger");
        publicIdentifiers.add("LinuxDebuggerLocal");
        publicIdentifiers.add("LinuxOopHandle");
        publicIdentifiers.add("LinuxPPC64JavaThreadPDAccess");
        publicIdentifiers.add("LinuxPPC64ThreadContext");
        publicIdentifiers.add("LinuxRISCV64JavaThreadPDAccess");
        publicIdentifiers.add("LinuxRISCV64ThreadContext");
        publicIdentifiers.add("LinuxRpmBundler");
        publicIdentifiers.add("LinuxSignals");
        publicIdentifiers.add("LinuxVtblAccess");
        publicIdentifiers.add("LinuxX86JavaThreadPDAccess");
        publicIdentifiers.add("LinuxX86ThreadContext");
        publicIdentifiers.add("List");
        publicIdentifiers.add("List$AccessibleAWTList");
        publicIdentifiers.add("List$AccessibleAWTList$AccessibleAWTListChild");
        publicIdentifiers.add("ListBuffer");
        publicIdentifiers.add("ListCellRenderer");
        publicIdentifiers.add("ListDataEvent");
        publicIdentifiers.add("ListDataListener");
        publicIdentifiers.add("ListDatatypeValidator");
        publicIdentifiers.add("ListDV");
        publicIdentifiers.add("ListenerNotFoundException");
        publicIdentifiers.add("ListeningConnector");
        publicIdentifiers.add("ListingErrorHandler");
        publicIdentifiers.add("ListIterator");
        publicIdentifiers.add("ListModel");
        publicIdentifiers.add("ListPeer");
        publicIdentifiers.add("ListResourceBundle");
        publicIdentifiers.add("ListSelectionEvent");
        publicIdentifiers.add("ListSelectionListener");
        publicIdentifiers.add("ListSelectionModel");
        publicIdentifiers.add("ListTranslator");
        publicIdentifiers.add("ListUI");
        publicIdentifiers.add("ListView");
        publicIdentifiers.add("Literal");
        publicIdentifiers.add("LiteralTaglet");
        publicIdentifiers.add("LiteralTree");
        publicIdentifiers.add("LivenessAnalysis");
        publicIdentifiers.add("LivenessPath");
        publicIdentifiers.add("LivenessPathElement");
        publicIdentifiers.add("LivenessPathList");
        publicIdentifiers.add("LiveRef");
        publicIdentifiers.add("LiveRegionsClosure");
        publicIdentifiers.add("LiveRegionsProvider");
        publicIdentifiers.add("LiveStackFrame$PrimitiveSlot");
        publicIdentifiers.add("LLOAD");
        publicIdentifiers.add("LMUL");
        publicIdentifiers.add("LNEG");
        publicIdentifiers.add("LoadClass");
        publicIdentifiers.add("LoaderDelegate");
        publicIdentifiers.add("LoaderHandler");
        publicIdentifiers.add("LoadInstruction");
        publicIdentifiers.add("LoadObject");
        publicIdentifiers.add("LoadObjectComparator");
        publicIdentifiers.add("LoadProc");
        publicIdentifiers.add("Local");
        publicIdentifiers.add("Locale$IsoCountryCode");
        publicIdentifiers.add("LocaleData");
        publicIdentifiers.add("LocaleData$CommonResourceBundleProvider");
        publicIdentifiers.add("LocaleData$SupplementaryResourceBundleProvider");
        publicIdentifiers.add("LocaleDataMetaInfo");
        publicIdentifiers.add("LocaleDataProvider");
        publicIdentifiers.add("LocaleExtensions");
        publicIdentifiers.add("LocaleNameProvider");
        publicIdentifiers.add("LocaleNameProviderImpl");
        publicIdentifiers.add("LocaleNames");
        publicIdentifiers.add("LocaleNames_af");
        publicIdentifiers.add("LocaleNames_agq");
        publicIdentifiers.add("LocaleNames_ak");
        publicIdentifiers.add("LocaleNames_am");
        publicIdentifiers.add("LocaleNames_ann");
        publicIdentifiers.add("LocaleNames_ar");
        publicIdentifiers.add("LocaleNames_ar_EG");
        publicIdentifiers.add("LocaleNames_ar_LY");
        publicIdentifiers.add("LocaleNames_ar_SA");
        publicIdentifiers.add("LocaleNames_as");
        publicIdentifiers.add("LocaleNames_asa");
        publicIdentifiers.add("LocaleNames_ast");
        publicIdentifiers.add("LocaleNames_az");
        publicIdentifiers.add("LocaleNames_az_Cyrl");
        publicIdentifiers.add("LocaleNames_bas");
        publicIdentifiers.add("LocaleNames_be");
        publicIdentifiers.add("LocaleNames_bem");
        publicIdentifiers.add("LocaleNames_bez");
        publicIdentifiers.add("LocaleNames_bg");
        publicIdentifiers.add("LocaleNames_bgc");
        publicIdentifiers.add("LocaleNames_bho");
        publicIdentifiers.add("LocaleNames_bm");
        publicIdentifiers.add("LocaleNames_bn");
        publicIdentifiers.add("LocaleNames_bn_IN");
        publicIdentifiers.add("LocaleNames_bo");
        publicIdentifiers.add("LocaleNames_bo_IN");
        publicIdentifiers.add("LocaleNames_br");
        publicIdentifiers.add("LocaleNames_brx");
        publicIdentifiers.add("LocaleNames_bs");
        publicIdentifiers.add("LocaleNames_bs_Cyrl");
        publicIdentifiers.add("LocaleNamesBundle");
        publicIdentifiers.add("LocaleNames_ca");
        publicIdentifiers.add("LocaleNames_ccp");
        publicIdentifiers.add("LocaleNames_ce");
        publicIdentifiers.add("LocaleNames_ceb");
        publicIdentifiers.add("LocaleNames_cgg");
        publicIdentifiers.add("LocaleNames_chr");
        publicIdentifiers.add("LocaleNames_ckb");
        publicIdentifiers.add("LocaleNames_cs");
        publicIdentifiers.add("LocaleNames_cv");
        publicIdentifiers.add("LocaleNames_cy");
        publicIdentifiers.add("LocaleNames_da");
        publicIdentifiers.add("LocaleNames_dav");
        publicIdentifiers.add("LocaleNames_de");
        publicIdentifiers.add("LocaleNames_de_AT");
        publicIdentifiers.add("LocaleNames_de_CH");
        publicIdentifiers.add("LocaleNames_dje");
        publicIdentifiers.add("LocaleNames_doi");
        publicIdentifiers.add("LocaleNames_dsb");
        publicIdentifiers.add("LocaleNames_dua");
        publicIdentifiers.add("LocaleNames_dyo");
        publicIdentifiers.add("LocaleNames_dz");
        publicIdentifiers.add("LocaleNames_ebu");
        publicIdentifiers.add("LocaleNames_ee");
        publicIdentifiers.add("LocaleNames_el");
        publicIdentifiers.add("LocaleNames_en");
        publicIdentifiers.add("LocaleNames_en_001");
        publicIdentifiers.add("LocaleNames_en_AU");
        publicIdentifiers.add("LocaleNames_en_CA");
        publicIdentifiers.add("LocaleNames_en_GB");
        publicIdentifiers.add("LocaleNames_en_IN");
        publicIdentifiers.add("LocaleNames_eo");
        publicIdentifiers.add("LocaleNames_es");
        publicIdentifiers.add("LocaleNames_es_419");
        publicIdentifiers.add("LocaleNames_es_AR");
        publicIdentifiers.add("LocaleNames_es_BO");
        publicIdentifiers.add("LocaleNames_es_CL");
        publicIdentifiers.add("LocaleNames_es_CO");
        publicIdentifiers.add("LocaleNames_es_CR");
        publicIdentifiers.add("LocaleNames_es_DO");
        publicIdentifiers.add("LocaleNames_es_EC");
        publicIdentifiers.add("LocaleNames_es_GT");
        publicIdentifiers.add("LocaleNames_es_HN");
        publicIdentifiers.add("LocaleNames_es_MX");
        publicIdentifiers.add("LocaleNames_es_NI");
        publicIdentifiers.add("LocaleNames_es_PA");
        publicIdentifiers.add("LocaleNames_es_PE");
        publicIdentifiers.add("LocaleNames_es_PR");
        publicIdentifiers.add("LocaleNames_es_PY");
        publicIdentifiers.add("LocaleNames_es_SV");
        publicIdentifiers.add("LocaleNames_es_US");
        publicIdentifiers.add("LocaleNames_es_VE");
        publicIdentifiers.add("LocaleNames_et");
        publicIdentifiers.add("LocaleNames_eu");
        publicIdentifiers.add("LocaleNames_ewo");
        publicIdentifiers.add("LocaleNames_fa");
        publicIdentifiers.add("LocaleNames_fa_AF");
        publicIdentifiers.add("LocaleNames_ff");
        publicIdentifiers.add("LocaleNames_ff_Adlm");
        publicIdentifiers.add("LocaleNames_fi");
        publicIdentifiers.add("LocaleNames_fil");
        publicIdentifiers.add("LocaleNames_fo");
        publicIdentifiers.add("LocaleNames_fr");
        publicIdentifiers.add("LocaleNames_fr_BE");
        publicIdentifiers.add("LocaleNames_fr_CA");
        publicIdentifiers.add("LocaleNames_fr_CH");
        publicIdentifiers.add("LocaleNames_frr");
        publicIdentifiers.add("LocaleNames_fur");
        publicIdentifiers.add("LocaleNames_fy");
        publicIdentifiers.add("LocaleNames_ga");
        publicIdentifiers.add("LocaleNames_gd");
        publicIdentifiers.add("LocaleNames_gl");
        publicIdentifiers.add("LocaleNames_gsw");
        publicIdentifiers.add("LocaleNames_gu");
        publicIdentifiers.add("LocaleNames_guz");
        publicIdentifiers.add("LocaleNames_gv");
        publicIdentifiers.add("LocaleNames_ha");
        publicIdentifiers.add("LocaleNames_ha_NE");
        publicIdentifiers.add("LocaleNames_haw");
        publicIdentifiers.add("LocaleNames_he");
        publicIdentifiers.add("LocaleNames_hi");
        publicIdentifiers.add("LocaleNames_hi_Latn");
        publicIdentifiers.add("LocaleNames_hr");
        publicIdentifiers.add("LocaleNames_hsb");
        publicIdentifiers.add("LocaleNames_hu");
        publicIdentifiers.add("LocaleNames_hy");
        publicIdentifiers.add("LocaleNames_ia");
        publicIdentifiers.add("LocaleNames_id");
        publicIdentifiers.add("LocaleNames_ig");
        publicIdentifiers.add("LocaleNames_ii");
        publicIdentifiers.add("LocaleNames_is");
        publicIdentifiers.add("LocaleNames_it");
        publicIdentifiers.add("LocaleNames_ja");
        publicIdentifiers.add("LocaleNames_jgo");
        publicIdentifiers.add("LocaleNames_jmc");
        publicIdentifiers.add("LocaleNames_jv");
        publicIdentifiers.add("LocaleNames_ka");
        publicIdentifiers.add("LocaleNames_kab");
        publicIdentifiers.add("LocaleNames_kam");
        publicIdentifiers.add("LocaleNames_kde");
        publicIdentifiers.add("LocaleNames_kea");
        publicIdentifiers.add("LocaleNames_kgp");
        publicIdentifiers.add("LocaleNames_khq");
        publicIdentifiers.add("LocaleNames_ki");
        publicIdentifiers.add("LocaleNames_kk");
        publicIdentifiers.add("LocaleNames_kkj");
        publicIdentifiers.add("LocaleNames_kl");
        publicIdentifiers.add("LocaleNames_kln");
        publicIdentifiers.add("LocaleNames_km");
        publicIdentifiers.add("LocaleNames_kn");
        publicIdentifiers.add("LocaleNames_ko");
        publicIdentifiers.add("LocaleNames_kok");
        publicIdentifiers.add("LocaleNames_ko_KP");
        publicIdentifiers.add("LocaleNames_ks");
        publicIdentifiers.add("LocaleNames_ksb");
        publicIdentifiers.add("LocaleNames_ks_Deva");
        publicIdentifiers.add("LocaleNames_ksf");
        publicIdentifiers.add("LocaleNames_ksh");
        publicIdentifiers.add("LocaleNames_ku");
        publicIdentifiers.add("LocaleNames_kw");
        publicIdentifiers.add("LocaleNames_ky");
        publicIdentifiers.add("LocaleNames_lag");
        publicIdentifiers.add("LocaleNames_lb");
        publicIdentifiers.add("LocaleNames_lg");
        publicIdentifiers.add("LocaleNames_lkt");
        publicIdentifiers.add("LocaleNames_ln");
        publicIdentifiers.add("LocaleNames_lo");
        publicIdentifiers.add("LocaleNames_lrc");
        publicIdentifiers.add("LocaleNames_lt");
        publicIdentifiers.add("LocaleNames_lu");
        publicIdentifiers.add("LocaleNames_luo");
        publicIdentifiers.add("LocaleNames_luy");
        publicIdentifiers.add("LocaleNames_lv");
        publicIdentifiers.add("LocaleNames_mai");
        publicIdentifiers.add("LocaleNames_mas");
        publicIdentifiers.add("LocaleNames_mdf");
        publicIdentifiers.add("LocaleNames_mer");
        publicIdentifiers.add("LocaleNames_mfe");
        publicIdentifiers.add("LocaleNames_mg");
        publicIdentifiers.add("LocaleNames_mgh");
        publicIdentifiers.add("LocaleNames_mgo");
        publicIdentifiers.add("LocaleNames_mi");
        publicIdentifiers.add("LocaleNames_mk");
        publicIdentifiers.add("LocaleNames_ml");
        publicIdentifiers.add("LocaleNames_mn");
        publicIdentifiers.add("LocaleNames_mni");
        publicIdentifiers.add("LocaleNames_mr");
        publicIdentifiers.add("LocaleNames_ms");
        publicIdentifiers.add("LocaleNames_mt");
        publicIdentifiers.add("LocaleNames_mua");
        publicIdentifiers.add("LocaleNames_my");
        publicIdentifiers.add("LocaleNames_mzn");
        publicIdentifiers.add("LocaleNames_naq");
        publicIdentifiers.add("LocaleNames_nd");
        publicIdentifiers.add("LocaleNames_ne");
        publicIdentifiers.add("LocaleNames_nl");
        publicIdentifiers.add("LocaleNames_nmg");
        publicIdentifiers.add("LocaleNames_nn");
        publicIdentifiers.add("LocaleNames_nnh");
        publicIdentifiers.add("LocaleNames_no");
        publicIdentifiers.add("LocaleNames_nus");
        publicIdentifiers.add("LocaleNames_nyn");
        publicIdentifiers.add("LocaleNames_oc");
        publicIdentifiers.add("LocaleNames_om");
        publicIdentifiers.add("LocaleNames_or");
        publicIdentifiers.add("LocaleNames_os");
        publicIdentifiers.add("LocaleNames_pa");
        publicIdentifiers.add("LocaleNames_pa_Arab");
        publicIdentifiers.add("LocaleNames_pcm");
        publicIdentifiers.add("LocaleNames_pis");
        publicIdentifiers.add("LocaleNames_pl");
        publicIdentifiers.add("LocaleNamesProvider");
        publicIdentifiers.add("LocaleNames_ps");
        publicIdentifiers.add("LocaleNames_ps_PK");
        publicIdentifiers.add("LocaleNames_pt");
        publicIdentifiers.add("LocaleNames_pt_PT");
        publicIdentifiers.add("LocaleNames_qu");
        publicIdentifiers.add("LocaleNames_raj");
        publicIdentifiers.add("LocaleNames_rm");
        publicIdentifiers.add("LocaleNames_rn");
        publicIdentifiers.add("LocaleNames_ro");
        publicIdentifiers.add("LocaleNames_rof");
        publicIdentifiers.add("LocaleNames_ro_MD");
        publicIdentifiers.add("LocaleNames_ru");
        publicIdentifiers.add("LocaleNames_ru_UA");
        publicIdentifiers.add("LocaleNames_rw");
        publicIdentifiers.add("LocaleNames_rwk");
        publicIdentifiers.add("LocaleNames_sa");
        publicIdentifiers.add("LocaleNames_sah");
        publicIdentifiers.add("LocaleNames_saq");
        publicIdentifiers.add("LocaleNames_sat");
        publicIdentifiers.add("LocaleNames_sbp");
        publicIdentifiers.add("LocaleNames_sc");
        publicIdentifiers.add("LocaleNames_sd");
        publicIdentifiers.add("LocaleNames_sd_Deva");
        publicIdentifiers.add("LocaleNames_se");
        publicIdentifiers.add("LocaleNames_se_FI");
        publicIdentifiers.add("LocaleNames_seh");
        publicIdentifiers.add("LocaleNames_ses");
        publicIdentifiers.add("LocaleNames_sg");
        publicIdentifiers.add("LocaleNames_shi");
        publicIdentifiers.add("LocaleNames_shi_Latn");
        publicIdentifiers.add("LocaleNames_si");
        publicIdentifiers.add("LocaleNames_sk");
        publicIdentifiers.add("LocaleNames_sl");
        publicIdentifiers.add("LocaleNames_smn");
        publicIdentifiers.add("LocaleNames_sn");
        publicIdentifiers.add("LocaleNames_so");
        publicIdentifiers.add("LocaleNames_sq");
        publicIdentifiers.add("LocaleNames_sr");
        publicIdentifiers.add("LocaleNames_sr_Cyrl_BA");
        publicIdentifiers.add("LocaleNames_sr_Cyrl_ME");
        publicIdentifiers.add("LocaleNames_sr_Cyrl_XK");
        publicIdentifiers.add("LocaleNames_sr_Latn");
        publicIdentifiers.add("LocaleNames_sr_Latn_BA");
        publicIdentifiers.add("LocaleNames_sr_Latn_ME");
        publicIdentifiers.add("LocaleNames_sr_Latn_XK");
        publicIdentifiers.add("LocaleNames_su");
        publicIdentifiers.add("LocaleNames_sv");
        publicIdentifiers.add("LocaleNames_sv_FI");
        publicIdentifiers.add("LocaleNames_sw");
        publicIdentifiers.add("LocaleNames_sw_CD");
        publicIdentifiers.add("LocaleNames_sw_KE");
        publicIdentifiers.add("LocaleNames_ta");
        publicIdentifiers.add("LocaleNames_te");
        publicIdentifiers.add("LocaleNames_teo");
        publicIdentifiers.add("LocaleNames_tg");
        publicIdentifiers.add("LocaleNames_th");
        publicIdentifiers.add("LocaleNames_ti");
        publicIdentifiers.add("LocaleNames_ti_ER");
        publicIdentifiers.add("LocaleNames_tk");
        publicIdentifiers.add("LocaleNames_to");
        publicIdentifiers.add("LocaleNames_tok");
        publicIdentifiers.add("LocaleNames_tr");
        publicIdentifiers.add("LocaleNames_tt");
        publicIdentifiers.add("LocaleNames_twq");
        publicIdentifiers.add("LocaleNames_tzm");
        publicIdentifiers.add("LocaleNames_ug");
        publicIdentifiers.add("LocaleNames_uk");
        publicIdentifiers.add("LocaleNames_ur");
        publicIdentifiers.add("LocaleNames_ur_IN");
        publicIdentifiers.add("LocaleNames_uz");
        publicIdentifiers.add("LocaleNames_uz_Arab");
        publicIdentifiers.add("LocaleNames_uz_Cyrl");
        publicIdentifiers.add("LocaleNames_vai");
        publicIdentifiers.add("LocaleNames_vai_Latn");
        publicIdentifiers.add("LocaleNames_vi");
        publicIdentifiers.add("LocaleNames_vun");
        publicIdentifiers.add("LocaleNames_wae");
        publicIdentifiers.add("LocaleNames_wo");
        publicIdentifiers.add("LocaleNames_xh");
        publicIdentifiers.add("LocaleNames_xog");
        publicIdentifiers.add("LocaleNames_yav");
        publicIdentifiers.add("LocaleNames_yi");
        publicIdentifiers.add("LocaleNames_yo");
        publicIdentifiers.add("LocaleNames_yo_BJ");
        publicIdentifiers.add("LocaleNames_yrl");
        publicIdentifiers.add("LocaleNames_yrl_CO");
        publicIdentifiers.add("LocaleNames_yrl_VE");
        publicIdentifiers.add("LocaleNames_yue");
        publicIdentifiers.add("LocaleNames_yue_Hans");
        publicIdentifiers.add("LocaleNames_zgh");
        publicIdentifiers.add("LocaleNames_zh");
        publicIdentifiers.add("LocaleNames_zh_Hant");
        publicIdentifiers.add("LocaleNames_zh_Hant_HK");
        publicIdentifiers.add("LocaleNames_zu");
        publicIdentifiers.add("LocaleObjectCache");
        publicIdentifiers.add("LocaleProviderAdapter");
        publicIdentifiers.add("LocaleResources");
        publicIdentifiers.add("LocaleServiceProvider");
        publicIdentifiers.add("LocaleServiceProviderPool$LocalizedObjectGetter");
        publicIdentifiers.add("LocaleSyntaxException");
        publicIdentifiers.add("LocaleUtility");
        publicIdentifiers.add("LocalEventTimer");
        publicIdentifiers.add("LocalExecutionControl");
        publicIdentifiers.add("LocalExecutionControlProvider");
        publicIdentifiers.add("LocalGregorianCalendar");
        publicIdentifiers.add("LocalGregorianCalendar$Date");
        publicIdentifiers.add("LocalizedLoggerWrapper");
        publicIdentifiers.add("LocalizedMessage");
        publicIdentifiers.add("LocalMonitoredVm");
        publicIdentifiers.add("LocalSeqNumber");
        publicIdentifiers.add("LocalSym");
        publicIdentifiers.add("LocalVariable");
        publicIdentifiers.add("LocalVariableAnnotationNode");
        publicIdentifiers.add("LocalVariableGen");
        publicIdentifiers.add("LocalVariableImpl");
        publicIdentifiers.add("LocalVariableInstruction");
        publicIdentifiers.add("LocalVariableNode");
        publicIdentifiers.add("LocalVariablesSorter");
        publicIdentifiers.add("LocalVariableTable");
        publicIdentifiers.add("LocalVariableTable_attribute");
        publicIdentifiers.add("LocalVariableTable_attribute$Entry");
        publicIdentifiers.add("LocalVariableTableElement");
        publicIdentifiers.add("LocalVariableTableWriter");
        publicIdentifiers.add("LocalVariableTableWriter$NoteKind");
        publicIdentifiers.add("LocalVariableTypeTable");
        publicIdentifiers.add("LocalVariableTypeTable_attribute");
        publicIdentifiers.add("LocalVariableTypeTable_attribute$Entry");
        publicIdentifiers.add("LocalVariableTypeTableWriter");
        publicIdentifiers.add("LocalVariableTypeTableWriter$NoteKind");
        publicIdentifiers.add("LocalVirtualMachine");
        publicIdentifiers.add("LocalVmManager");
        publicIdentifiers.add("Locatable");
        publicIdentifiers.add("LocatableEvent");
        publicIdentifiers.add("Location");
        publicIdentifiers.add("Location$Type");
        publicIdentifiers.add("Location$Where");
        publicIdentifiers.add("LocationImpl");
        publicIdentifiers.add("LocationPathPattern");
        publicIdentifiers.add("Locations");
        publicIdentifiers.add("Locations$LocationHandler");
        publicIdentifiers.add("LocationValue");
        publicIdentifiers.add("Locator");
        publicIdentifiers.add("Locator2");
        publicIdentifiers.add("Locator2Impl");
        publicIdentifiers.add("LocatorImpl");
        publicIdentifiers.add("LocatorProxy");
        publicIdentifiers.add("LocatorWrapper");
        publicIdentifiers.add("Lock");
        publicIdentifiers.add("LockInfo");
        publicIdentifiers.add("LockInfoCompositeData");
        publicIdentifiers.add("LockObject");
        publicIdentifiers.add("LockSupport");
        publicIdentifiers.add("LocPathIterator");
        publicIdentifiers.add("Log");
        publicIdentifiers.add("Log$DeferredDiagnosticHandler");
        publicIdentifiers.add("Log$DiagnosticHandler");
        publicIdentifiers.add("Log$DiscardDiagnosticHandler");
        publicIdentifiers.add("Log$Logger");
        publicIdentifiers.add("Logger");
        publicIdentifiers.add("LoggerFactory");
        publicIdentifiers.add("LoggerWrapper");
        publicIdentifiers.add("LoggingMXBean");
        publicIdentifiers.add("LoggingProviderImpl$LogManagerAccess");
        publicIdentifiers.add("LogHandler");
        publicIdentifiers.add("LoginConfigImpl");
        publicIdentifiers.add("LoginContext");
        publicIdentifiers.add("LoginException");
        publicIdentifiers.add("LoginModule");
        publicIdentifiers.add("LoginOptions");
        publicIdentifiers.add("LogInputStream");
        publicIdentifiers.add("LogManager");
        publicIdentifiers.add("LogOutputStream");
        publicIdentifiers.add("LogRecord");
        publicIdentifiers.add("LogStream");
        publicIdentifiers.add("LongAccumulator");
        publicIdentifiers.add("LongAdder");
        publicIdentifiers.add("LongArrayCounter");
        publicIdentifiers.add("LongArrayWrapper");
        publicIdentifiers.add("LongBinaryOperator");
        publicIdentifiers.add("LongBuffer");
        publicIdentifiers.add("LongCellRenderer");
        publicIdentifiers.add("LongConsumer");
        publicIdentifiers.add("LongCounter");
        publicIdentifiers.add("LongEditor");
        publicIdentifiers.add("LongField");
        publicIdentifiers.add("LongFunction");
        publicIdentifiers.add("LongHashMap");
        publicIdentifiers.add("LongMonitor");
        publicIdentifiers.add("LongPredicate");
        publicIdentifiers.add("LongSignature");
        publicIdentifiers.add("LongStream");
        publicIdentifiers.add("LongStream$Builder");
        publicIdentifiers.add("LongStream$LongMapMultiConsumer");
        publicIdentifiers.add("LongSummaryStatistics");
        publicIdentifiers.add("LongSupplier");
        publicIdentifiers.add("LongToDoubleFunction");
        publicIdentifiers.add("LongToIntFunction");
        publicIdentifiers.add("LongTreeNodeAdapter");
        publicIdentifiers.add("LongType");
        publicIdentifiers.add("LongTypeImpl");
        publicIdentifiers.add("LongUnaryOperator");
        publicIdentifiers.add("LongValue");
        publicIdentifiers.add("LongValueImpl");
        publicIdentifiers.add("LongVector");
        publicIdentifiers.add("LookAndFeel");
        publicIdentifiers.add("LookupOp");
        publicIdentifiers.add("LOOKUPSWITCH");
        publicIdentifiers.add("LookupSwitchInsnNode");
        publicIdentifiers.add("LookupswitchPair");
        publicIdentifiers.add("LookupTable");
        publicIdentifiers.add("LoopBasedPipe");
        publicIdentifiers.add("LoopNode");
        publicIdentifiers.add("LoopPipe");
        publicIdentifiers.add("LOR");
        publicIdentifiers.add("Lower");
        publicIdentifiers.add("LREM");
        publicIdentifiers.add("LRETURN");
        publicIdentifiers.add("lr_parser");
        publicIdentifiers.add("LSException");
        publicIdentifiers.add("LSHL");
        publicIdentifiers.add("LSHR");
        publicIdentifiers.add("LSInput");
        publicIdentifiers.add("LSInputList");
        publicIdentifiers.add("LSLoadEvent");
        publicIdentifiers.add("LSOutput");
        publicIdentifiers.add("LSParser");
        publicIdentifiers.add("LSParserFilter");
        publicIdentifiers.add("LSProgressEvent");
        publicIdentifiers.add("LSResourceResolver");
        publicIdentifiers.add("LSSerializer");
        publicIdentifiers.add("LSSerializerFilter");
        publicIdentifiers.add("LSTORE");
        publicIdentifiers.add("LSUB");
        publicIdentifiers.add("Lt");
        publicIdentifiers.add("Lte");
        publicIdentifiers.add("LUSHR");
        publicIdentifiers.add("LXOR");
        publicIdentifiers.add("LZWCompressor");
        publicIdentifiers.add("LZWStringTable");
        publicIdentifiers.add("Math");
        publicIdentifiers.add("Module");
        publicIdentifiers.add("ModuleLayer");
        publicIdentifiers.add("ModuleLayer.Controller");
        publicIdentifiers.add("Mac");
        publicIdentifiers.add("MacArabic");
        publicIdentifiers.add("MacCentralEurope");
        publicIdentifiers.add("MacCroatian");
        publicIdentifiers.add("MacCyrillic");
        publicIdentifiers.add("MacDingbat");
        publicIdentifiers.add("MacGreek");
        publicIdentifiers.add("MachCallJavaNode");
        publicIdentifiers.add("MachCallNode");
        publicIdentifiers.add("MachCallRuntimeNode");
        publicIdentifiers.add("MachCallStaticJavaNode");
        publicIdentifiers.add("MacHebrew");
        publicIdentifiers.add("MachIfNode");
        publicIdentifiers.add("MachineDescription");
        publicIdentifiers.add("MachineDescriptionAArch64");
        publicIdentifiers.add("MachineDescriptionAMD64");
        publicIdentifiers.add("MachineDescriptionIntelX86");
        publicIdentifiers.add("MachineDescriptionPPC64");
        publicIdentifiers.add("MachineDescriptionRISCV64");
        publicIdentifiers.add("MachineDescriptionTwosComplement");
        publicIdentifiers.add("MachineTypes");
        publicIdentifiers.add("MachNode");
        publicIdentifiers.add("MachReturnNode");
        publicIdentifiers.add("MachSafePointNode");
        publicIdentifiers.add("MacIceland");
        publicIdentifiers.add("MacOsAArch64CallArranger");
        publicIdentifiers.add("MacOsAArch64VaList");
        publicIdentifiers.add("MacOsAArch64VaList$Builder");
        publicIdentifiers.add("MacOutputStream");
        publicIdentifiers.add("Macro");
        publicIdentifiers.add("MacRoman");
        publicIdentifiers.add("MacRomania");
        publicIdentifiers.add("MacSpi");
        publicIdentifiers.add("MacSymbol");
        publicIdentifiers.add("MacThai");
        publicIdentifiers.add("MacTurkish");
        publicIdentifiers.add("MacUkraine");
        publicIdentifiers.add("MailToURLConnection");
        publicIdentifiers.add("Main");
        publicIdentifiers.add("Main$Fault");
        publicIdentifiers.add("Main$JavapToolProvider");
        publicIdentifiers.add("Main$JDepsToolProvider");
        publicIdentifiers.add("Main$JlinkToolProvider");
        publicIdentifiers.add("Main$JmodToolProvider");
        publicIdentifiers.add("MalformedByteSequenceException");
        publicIdentifiers.add("MalformedFrame");
        publicIdentifiers.add("MalformedInputException");
        publicIdentifiers.add("MalformedLinkException");
        publicIdentifiers.add("MalformedObjectNameException");
        publicIdentifiers.add("MalformedParameterizedTypeException");
        publicIdentifiers.add("MalformedParametersException");
        publicIdentifiers.add("MalformedURLException");
        publicIdentifiers.add("ManagementFactory");
        publicIdentifiers.add("ManagementFactoryHelper");
        publicIdentifiers.add("ManagerFactoryParameters");
        publicIdentifiers.add("MandatoryWarningHandler");
        publicIdentifiers.add("Manifest");
        publicIdentifiers.add("ManifestDigester");
        publicIdentifiers.add("ManifestDigester$Entry");
        publicIdentifiers.add("ManifestEntryVerifier");
        publicIdentifiers.add("Map");
        publicIdentifiers.add("Map$Entry");
        publicIdentifiers.add("MappedByteBuffer");
        publicIdentifiers.add("MappedByteBufferDataSource");
        publicIdentifiers.add("MappedMemorySegmentImpl");
        publicIdentifiers.add("MappedMXBeanType");
        publicIdentifiers.add("Mark");
        publicIdentifiers.add("MarkBits");
        publicIdentifiers.add("MarkerComments");
        publicIdentifiers.add("MarshalException");
        publicIdentifiers.add("MarshalInputStream");
        publicIdentifiers.add("MarshalOutputStream");
        publicIdentifiers.add("MaskBlit");
        publicIdentifiers.add("MaskFill");
        publicIdentifiers.add("MaskFormatter");
        publicIdentifiers.add("MaskingCallback");
        publicIdentifiers.add("MaskTile");
        publicIdentifiers.add("MaskTileManager");
        publicIdentifiers.add("Match");
        publicIdentifiers.add("MatchBindingsComputer");
        publicIdentifiers.add("MatchBindingsComputer$MatchBindings");
        publicIdentifiers.add("MatchingUtils");
        publicIdentifiers.add("MatchPatternIterator");
        publicIdentifiers.add("MatchResult");
        publicIdentifiers.add("MatteBorder");
        publicIdentifiers.add("MaximizableInternalFrame");
        publicIdentifiers.add("MBeanAttributeInfo");
        publicIdentifiers.add("MBeanConstructorInfo");
        publicIdentifiers.add("MBeanException");
        publicIdentifiers.add("MBeanFeatureInfo");
        publicIdentifiers.add("MBeanInfo");
        publicIdentifiers.add("MBeanInstantiator");
        publicIdentifiers.add("MBeanNotificationInfo");
        publicIdentifiers.add("MBeanOperationInfo");
        publicIdentifiers.add("MBeanParameterInfo");
        publicIdentifiers.add("MBeanPermission");
        publicIdentifiers.add("MBeanRegistration");
        publicIdentifiers.add("MBeanRegistrationException");
        publicIdentifiers.add("MBeanServer");
        publicIdentifiers.add("MBeanServerAccessController");
        publicIdentifiers.add("MBeanServerBuilder");
        publicIdentifiers.add("MBeanServerConnection");
        publicIdentifiers.add("MBeanServerDelegate");
        publicIdentifiers.add("MBeanServerDelegateMBean");
        publicIdentifiers.add("MBeanServerFactory");
        publicIdentifiers.add("MBeanServerFileAccessController");
        publicIdentifiers.add("MBeanServerForwarder");
        publicIdentifiers.add("MBeanServerInterceptor");
        publicIdentifiers.add("MBeanServerInvocationHandler");
        publicIdentifiers.add("MBeanServerNotification");
        publicIdentifiers.add("MBeanServerNotificationFilter");
        publicIdentifiers.add("MBeanServerPermission");
        publicIdentifiers.add("MBeansTab");
        publicIdentifiers.add("MBeanSupport");
        publicIdentifiers.add("MBeanTrustPermission");
        publicIdentifiers.add("MechanismFactory");
        publicIdentifiers.add("Media");
        publicIdentifiers.add("MediaList");
        publicIdentifiers.add("MediaName");
        publicIdentifiers.add("MediaSize");
        publicIdentifiers.add("MediaSizeName");
        publicIdentifiers.add("MediaTracker");
        publicIdentifiers.add("MediaTray");
        publicIdentifiers.add("Member");
        publicIdentifiers.add("MemberEnter");
        publicIdentifiers.add("MemberFunctionType");
        publicIdentifiers.add("MemberReferenceTree");
        publicIdentifiers.add("MemberSelectTree");
        publicIdentifiers.add("MembershipKey");
        publicIdentifiers.add("MemberSummaryBuilder");
        publicIdentifiers.add("MemberSummaryWriter");
        publicIdentifiers.add("MemberWriter");
        publicIdentifiers.add("MemoizedBoolean");
        publicIdentifiers.add("MemoizedByte");
        publicIdentifiers.add("MemoizedChar");
        publicIdentifiers.add("MemoizedDouble");
        publicIdentifiers.add("MemoizedFloat");
        publicIdentifiers.add("MemoizedInt");
        publicIdentifiers.add("MemoizedLong");
        publicIdentifiers.add("MemoizedObject");
        publicIdentifiers.add("MemoizedShort");
        publicIdentifiers.add("MemoryAccessProvider");
        publicIdentifiers.add("MemoryAction");
        publicIdentifiers.add("MemoryAddress");
        publicIdentifiers.add("MemoryBarriers");
        publicIdentifiers.add("MemoryCache");
        publicIdentifiers.add("MemoryCacheImageInputStream");
        publicIdentifiers.add("MemoryCacheImageOutputStream");
        publicIdentifiers.add("MemoryCredentialsCache");
        publicIdentifiers.add("MemoryHandler");
        publicIdentifiers.add("MemoryImageSource");
        publicIdentifiers.add("MemoryLayout");
        publicIdentifiers.add("MemoryLayout$PathElement");
        publicIdentifiers.add("MemoryManagerMXBean");
        publicIdentifiers.add("MemoryMXBean");
        publicIdentifiers.add("MemoryNotificationInfo");
        publicIdentifiers.add("MemoryNotifInfoCompositeData");
        publicIdentifiers.add("MemoryPanel");
        publicIdentifiers.add("MemoryPoolMXBean");
        publicIdentifiers.add("MemoryPoolProxy");
        publicIdentifiers.add("MemoryPoolStat");
        publicIdentifiers.add("MemorySegment");
        publicIdentifiers.add("MemorySessionImpl");
        publicIdentifiers.add("MemorySessionImpl$ResourceList");
        publicIdentifiers.add("MemorySessionImpl$ResourceList$ResourceCleanup");
        publicIdentifiers.add("MemoryTab$PoolChart$AccessiblePoolChart");
        publicIdentifiers.add("MemoryUsage");
        publicIdentifiers.add("MemoryUsageCompositeData");
        publicIdentifiers.add("MemoryViewer");
        publicIdentifiers.add("MemRegion");
        publicIdentifiers.add("Menu");
        publicIdentifiers.add("Menu$AccessibleAWTMenu");
        publicIdentifiers.add("MenuBar");
        publicIdentifiers.add("MenuBar$AccessibleAWTMenuBar");
        publicIdentifiers.add("MenuBarPeer");
        publicIdentifiers.add("MenuBarUI");
        publicIdentifiers.add("MenuComponent");
        publicIdentifiers.add("MenuComponent$AccessibleAWTMenuComponent");
        publicIdentifiers.add("MenuComponentPeer");
        publicIdentifiers.add("MenuContainer");
        publicIdentifiers.add("MenuDragMouseEvent");
        publicIdentifiers.add("MenuDragMouseListener");
        publicIdentifiers.add("MenuElement");
        publicIdentifiers.add("MenuEvent");
        publicIdentifiers.add("MenuItem");
        publicIdentifiers.add("MenuItem$AccessibleAWTMenuItem");
        publicIdentifiers.add("MenuItemCheckIconFactory");
        publicIdentifiers.add("MenuItemLayoutHelper");
        publicIdentifiers.add("MenuItemLayoutHelper$ColumnAlignment");
        publicIdentifiers.add("MenuItemLayoutHelper$LayoutResult");
        publicIdentifiers.add("MenuItemLayoutHelper$RectSize");
        publicIdentifiers.add("MenuItemPeer");
        publicIdentifiers.add("MenuItemUI");
        publicIdentifiers.add("MenuKeyEvent");
        publicIdentifiers.add("MenuKeyListener");
        publicIdentifiers.add("MenuListener");
        publicIdentifiers.add("MenuPeer");
        publicIdentifiers.add("MenuSelectionManager");
        publicIdentifiers.add("MenuShortcut");
        publicIdentifiers.add("MessageDigest");
        publicIdentifiers.add("MessageDigestSpi");
        publicIdentifiers.add("MessageDigestSpi2");
        publicIdentifiers.add("MessageEncoder");
        publicIdentifiers.add("MessageFormat");
        publicIdentifiers.add("MessageFormat$Field");
        publicIdentifiers.add("MessageFormatter");
        publicIdentifiers.add("MessageHandler");
        publicIdentifiers.add("MessageHeader");
        publicIdentifiers.add("MessageInfo");
        publicIdentifiers.add("MessageInfoImpl");
        publicIdentifiers.add("MessageOutput");
        publicIdentifiers.add("MessageProp");
        publicIdentifiers.add("MessageQueue");
        publicIdentifiers.add("MessageQueue$QueueCallback");
        publicIdentifiers.add("MessageQueueBackend");
        publicIdentifiers.add("Messager");
        publicIdentifiers.add("Messages");
        publicIdentifiers.add("MetaAccessProvider");
        publicIdentifiers.add("Metacity$TitlePaneLayout");
        publicIdentifiers.add("Metadata");
        publicIdentifiers.add("MetadataDefinition");
        publicIdentifiers.add("MetadataField");
        publicIdentifiers.add("MetadataTreeNodeAdapter");
        publicIdentifiers.add("MetadataVisitor");
        publicIdentifiers.add("MetaEventListener");
        publicIdentifiers.add("MetaKeywords");
        publicIdentifiers.add("MetalBorders");
        publicIdentifiers.add("MetalBorders$ButtonBorder");
        publicIdentifiers.add("MetalBorders$Flush3DBorder");
        publicIdentifiers.add("MetalBorders$InternalFrameBorder");
        publicIdentifiers.add("MetalBorders$MenuBarBorder");
        publicIdentifiers.add("MetalBorders$MenuItemBorder");
        publicIdentifiers.add("MetalBorders$OptionDialogBorder");
        publicIdentifiers.add("MetalBorders$PaletteBorder");
        publicIdentifiers.add("MetalBorders$PopupMenuBorder");
        publicIdentifiers.add("MetalBorders$RolloverButtonBorder");
        publicIdentifiers.add("MetalBorders$ScrollPaneBorder");
        publicIdentifiers.add("MetalBorders$TableHeaderBorder");
        publicIdentifiers.add("MetalBorders$TextFieldBorder");
        publicIdentifiers.add("MetalBorders$ToggleButtonBorder");
        publicIdentifiers.add("MetalBorders$ToolBarBorder");
        publicIdentifiers.add("MetalButtonUI");
        publicIdentifiers.add("MetalCheckBoxIcon");
        publicIdentifiers.add("MetalCheckBoxUI");
        publicIdentifiers.add("MetalComboBoxButton");
        publicIdentifiers.add("MetalComboBoxEditor");
        publicIdentifiers.add("MetalComboBoxEditor$UIResource");
        publicIdentifiers.add("MetalComboBoxIcon");
        publicIdentifiers.add("MetalComboBoxUI");
        publicIdentifiers.add("MetalComboBoxUI$MetalComboBoxLayoutManager");
        publicIdentifiers.add("MetalComboBoxUI$MetalComboPopup");
        publicIdentifiers.add("MetalComboBoxUI$MetalPropertyChangeListener");
        publicIdentifiers.add("MetalDesktopIconUI");
        publicIdentifiers.add("MetalFileChooserUI");
        publicIdentifiers.add("MetalFileChooserUI$DirectoryComboBoxAction");
        publicIdentifiers.add("MetalFileChooserUI$DirectoryComboBoxModel");
        publicIdentifiers.add("MetalFileChooserUI$FileRenderer");
        publicIdentifiers.add("MetalFileChooserUI$FilterComboBoxModel");
        publicIdentifiers.add("MetalFileChooserUI$FilterComboBoxRenderer");
        publicIdentifiers.add("MetalFileChooserUI$SingleClickListener");
        publicIdentifiers.add("MetalIconFactory");
        publicIdentifiers.add("MetalIconFactory$FileIcon16");
        publicIdentifiers.add("MetalIconFactory$FolderIcon16");
        publicIdentifiers.add("MetalIconFactory$PaletteCloseIcon");
        publicIdentifiers.add("MetalIconFactory$TreeControlIcon");
        publicIdentifiers.add("MetalIconFactory$TreeFolderIcon");
        publicIdentifiers.add("MetalIconFactory$TreeLeafIcon");
        publicIdentifiers.add("MetalInternalFrameTitlePane");
        publicIdentifiers.add("MetalInternalFrameUI");
        publicIdentifiers.add("MetalLabelUI");
        publicIdentifiers.add("MetalLookAndFeel");
        publicIdentifiers.add("MetalMenuBarUI");
        publicIdentifiers.add("MetalPopupMenuSeparatorUI");
        publicIdentifiers.add("MetalProgressBarUI");
        publicIdentifiers.add("MetalRadioButtonUI");
        publicIdentifiers.add("MetalRootPaneUI");
        publicIdentifiers.add("MetalScrollBarUI");
        publicIdentifiers.add("MetalScrollButton");
        publicIdentifiers.add("MetalScrollPaneUI");
        publicIdentifiers.add("MetalSeparatorUI");
        publicIdentifiers.add("MetalSliderUI");
        publicIdentifiers.add("MetalSliderUI$MetalPropertyListener");
        publicIdentifiers.add("MetalSplitPaneDivider$MetalDividerLayout");
        publicIdentifiers.add("MetalSplitPaneUI");
        publicIdentifiers.add("MetalTabbedPaneUI");
        publicIdentifiers.add("MetalTabbedPaneUI$TabbedPaneLayout");
        publicIdentifiers.add("MetalTextFieldUI");
        publicIdentifiers.add("MetalTheme");
        publicIdentifiers.add("MetalToggleButtonUI");
        publicIdentifiers.add("MetalToolBarUI");
        publicIdentifiers.add("MetalToolBarUI$MetalContainerListener");
        publicIdentifiers.add("MetalToolBarUI$MetalDockingListener");
        publicIdentifiers.add("MetalToolBarUI$MetalRolloverListener");
        publicIdentifiers.add("MetalToolTipUI");
        publicIdentifiers.add("MetalTreeUI");
        publicIdentifiers.add("MetaMessage");
        publicIdentifiers.add("MetaspaceObj");
        publicIdentifiers.add("MetaUtil");
        publicIdentifiers.add("MeteredStream");
        publicIdentifiers.add("Method");
        publicIdentifiers.add("MethodAccessor");
        publicIdentifiers.add("MethodArray");
        publicIdentifiers.add("MethodBuilder");
        publicIdentifiers.add("MethodCounters");
        publicIdentifiers.add("MethodData");
        publicIdentifiers.add("MethodDataInterface");
        publicIdentifiers.add("MethodDescriptor");
        publicIdentifiers.add("MethodEntryEvent");
        publicIdentifiers.add("MethodEntryRequest");
        publicIdentifiers.add("MethodExitEvent");
        publicIdentifiers.add("MethodExitRequest");
        publicIdentifiers.add("MethodGen");
        publicIdentifiers.add("MethodGenerator");
        publicIdentifiers.add("MethodGenerator$LocalVariableRegistry");
        publicIdentifiers.add("MethodHandle");
        publicIdentifiers.add("MethodHandleAccessProvider");
        publicIdentifiers.add("MethodHandleDesc");
        publicIdentifiers.add("MethodHandleInfo");
        publicIdentifiers.add("MethodHandleProxies");
        publicIdentifiers.add("MethodHandles");
        publicIdentifiers.add("MethodHandlesAdapterBlob");
        publicIdentifiers.add("MethodHandleTransformer");
        publicIdentifiers.add("MethodImpl");
        publicIdentifiers.add("MethodInfo");
        publicIdentifiers.add("MethodInsnNode");
        publicIdentifiers.add("MethodInvocationTree");
        publicIdentifiers.add("MethodNode");
        publicIdentifiers.add("MethodObserver");
        publicIdentifiers.add("MethodParameter");
        publicIdentifiers.add("MethodParameters");
        publicIdentifiers.add("MethodParameters_attribute");
        publicIdentifiers.add("MethodParameters_attribute$Entry");
        publicIdentifiers.add("MethodRemapper");
        publicIdentifiers.add("MethodRepository");
        publicIdentifiers.add("MethodScope");
        publicIdentifiers.add("MethodSig");
        publicIdentifiers.add("MethodSnippet");
        publicIdentifiers.add("MethodTree");
        publicIdentifiers.add("MethodTypeConversionStrategy");
        publicIdentifiers.add("MethodTypeDesc");
        publicIdentifiers.add("MethodTypeSignature");
        publicIdentifiers.add("MethodVisitor");
        publicIdentifiers.add("MethodWriter");
        publicIdentifiers.add("MethodWriterImpl");
        publicIdentifiers.add("Metrics");
        publicIdentifiers.add("MFontConfiguration");
        publicIdentifiers.add("MGF1ParameterSpec");
        publicIdentifiers.add("MgmtData");
        publicIdentifiers.add("MidiChannel");
        publicIdentifiers.add("MidiDevice");
        publicIdentifiers.add("MidiDevice$Info");
        publicIdentifiers.add("MidiDeviceProvider");
        publicIdentifiers.add("MidiDeviceReceiver");
        publicIdentifiers.add("MidiDeviceTransmitter");
        publicIdentifiers.add("MidiEvent");
        publicIdentifiers.add("MidiFileFormat");
        publicIdentifiers.add("MidiFileReader");
        publicIdentifiers.add("MidiFileWriter");
        publicIdentifiers.add("MidiMessage");
        publicIdentifiers.add("MidiSystem");
        publicIdentifiers.add("MidiUnavailableException");
        publicIdentifiers.add("MimeEntry");
        publicIdentifiers.add("MimeTable");
        publicIdentifiers.add("MimeTypeParseException");
        publicIdentifiers.add("MinimalFuture$ExceptionalSupplier");
        publicIdentifiers.add("MinimalHTMLWriter");
        publicIdentifiers.add("Minus");
        publicIdentifiers.add("Mirror");
        publicIdentifiers.add("MirroredTypeException");
        publicIdentifiers.add("MirroredTypesException");
        publicIdentifiers.add("MirrorEvent");
        publicIdentifiers.add("MissingFormatArgumentException");
        publicIdentifiers.add("MissingFormatWidthException");
        publicIdentifiers.add("MissingInfoHandler");
        publicIdentifiers.add("MissingMemberHandlerFactory");
        publicIdentifiers.add("MissingResourceException");
        publicIdentifiers.add("MissingResourceFailureException");
        publicIdentifiers.add("MixedContentModel");
        publicIdentifiers.add("Mixer");
        publicIdentifiers.add("Mixer$Info");
        publicIdentifiers.add("MixerProvider");
        publicIdentifiers.add("MLet");
        publicIdentifiers.add("MLetContent");
        publicIdentifiers.add("MLetMBean");
        publicIdentifiers.add("Mod");
        publicIdentifiers.add("ModalExclude");
        publicIdentifiers.add("ModalityEvent");
        publicIdentifiers.add("ModalityListener");
        publicIdentifiers.add("ModelAbstractChannelMixer");
        publicIdentifiers.add("ModelAbstractOscillator");
        publicIdentifiers.add("ModelChannelMixer");
        publicIdentifiers.add("ModelDirectedPlayer");
        publicIdentifiers.add("ModelDirector");
        publicIdentifiers.add("ModelInstrument");
        publicIdentifiers.add("ModelMBean");
        publicIdentifiers.add("ModelMBeanAttributeInfo");
        publicIdentifiers.add("ModelMBeanConstructorInfo");
        publicIdentifiers.add("ModelMBeanInfo");
        publicIdentifiers.add("ModelMBeanInfoSupport");
        publicIdentifiers.add("ModelMBeanNotificationBroadcaster");
        publicIdentifiers.add("ModelMBeanNotificationInfo");
        publicIdentifiers.add("ModelMBeanOperationInfo");
        publicIdentifiers.add("ModelOscillator");
        publicIdentifiers.add("ModelOscillatorStream");
        publicIdentifiers.add("ModelTransform");
        publicIdentifiers.add("ModelWavetable");
        publicIdentifiers.add("ModifiableClassLoaderRepository");
        publicIdentifiers.add("ModificationItem");
        publicIdentifiers.add("ModificationWatchpointEvent");
        publicIdentifiers.add("ModificationWatchpointRequest");
        publicIdentifiers.add("Modifier");
        publicIdentifiers.add("ModifiersProvider");
        publicIdentifiers.add("ModifiersTree");
        publicIdentifiers.add("ModularJarArchive");
        publicIdentifiers.add("ModularRuntimeImage");
        publicIdentifiers.add("ModuleAnalyzer");
        publicIdentifiers.add("Module_attribute");
        publicIdentifiers.add("Module_attribute$ExportsEntry");
        publicIdentifiers.add("Module_attribute$OpensEntry");
        publicIdentifiers.add("Module_attribute$ProvidesEntry");
        publicIdentifiers.add("Module_attribute$RequiresEntry");
        publicIdentifiers.add("ModuleDescriptor");
        publicIdentifiers.add("ModuleDotGraph");
        publicIdentifiers.add("ModuleDotGraph$Attributes");
        publicIdentifiers.add("ModuleDotGraph$DotGraphAttributes");
        publicIdentifiers.add("ModuleElement");
        publicIdentifiers.add("ModuleElement$Directive");
        publicIdentifiers.add("ModuleElement$DirectiveVisitor");
        publicIdentifiers.add("ModuleElement$ExportsDirective");
        publicIdentifiers.add("ModuleElement$OpensDirective");
        publicIdentifiers.add("ModuleElement$ProvidesDirective");
        publicIdentifiers.add("ModuleElement$RequiresDirective");
        publicIdentifiers.add("ModuleElement$UsesDirective");
        publicIdentifiers.add("ModuleExportNode");
        publicIdentifiers.add("ModuleExportsAnalyzer");
        publicIdentifiers.add("ModuleFinder");
        publicIdentifiers.add("ModuleFinder$ModuleNameFromSourceReader");
        publicIdentifiers.add("ModuleGraphBuilder");
        publicIdentifiers.add("ModuleHashes$Builder");
        publicIdentifiers.add("ModuleHashes$HashSupplier");
        publicIdentifiers.add("ModuleHashes_attribute");
        publicIdentifiers.add("ModuleHashes_attribute$Entry");
        publicIdentifiers.add("ModuleHashesBuilder");
        publicIdentifiers.add("ModuleHelper");
        publicIdentifiers.add("ModuleIndexWriter");
        publicIdentifiers.add("ModuleInfoBuilder");
        publicIdentifiers.add("ModuleMainClass_attribute");
        publicIdentifiers.add("ModuleNameReader");
        publicIdentifiers.add("ModuleNameReader$BadClassFile");
        publicIdentifiers.add("ModuleNode");
        publicIdentifiers.add("ModuleOpenNode");
        publicIdentifiers.add("ModulePackages_attribute");
        publicIdentifiers.add("ModulePatcher$PatchedModuleReader");
        publicIdentifiers.add("ModulePath");
        publicIdentifiers.add("ModuleProvideNode");
        publicIdentifiers.add("ModuleReader");
        publicIdentifiers.add("ModuleReference");
        publicIdentifiers.add("ModuleReferenceImpl");
        publicIdentifiers.add("ModuleRemapper");
        publicIdentifiers.add("ModuleRequireNode");
        publicIdentifiers.add("ModuleResolution_attribute");
        publicIdentifiers.add("Modules");
        publicIdentifiers.add("Modules$PackageNameFinder");
        publicIdentifiers.add("ModuleSummaryBuilder");
        publicIdentifiers.add("ModuleSummaryWriter");
        publicIdentifiers.add("ModuleTarget_attribute");
        publicIdentifiers.add("ModuleTree");
        publicIdentifiers.add("ModuleVisitor");
        publicIdentifiers.add("ModuleWriterImpl");
        publicIdentifiers.add("Monitor");
        publicIdentifiers.add("MonitorCacheDumpPanel");
        publicIdentifiers.add("MonitorContendedEnteredEvent");
        publicIdentifiers.add("MonitorContendedEnteredRequest");
        publicIdentifiers.add("MonitorContendedEnterEvent");
        publicIdentifiers.add("MonitorContendedEnterRequest");
        publicIdentifiers.add("MonitorDataException");
        publicIdentifiers.add("MonitorDeflationThread");
        publicIdentifiers.add("MonitoredHost");
        publicIdentifiers.add("MonitoredHostProvider");
        publicIdentifiers.add("MonitoredHostService");
        publicIdentifiers.add("MonitoredVm");
        publicIdentifiers.add("MonitoredVmUtil");
        publicIdentifiers.add("MONITORENTER");
        publicIdentifiers.add("MonitorException");
        publicIdentifiers.add("MONITOREXIT");
        publicIdentifiers.add("MonitorInfo");
        publicIdentifiers.add("MonitorInfoCompositeData");
        publicIdentifiers.add("MonitorInfoImpl");
        publicIdentifiers.add("MonitorMBean");
        publicIdentifiers.add("MonitorNotification");
        publicIdentifiers.add("MonitorSettingException");
        publicIdentifiers.add("MonitorStatus");
        publicIdentifiers.add("MonitorStatusChangeEvent");
        publicIdentifiers.add("MonitorStructureException");
        publicIdentifiers.add("MonitorTypeException");
        publicIdentifiers.add("MonitorValue");
        publicIdentifiers.add("MonitorVersionException");
        publicIdentifiers.add("MonitorWaitedEvent");
        publicIdentifiers.add("MonitorWaitedRequest");
        publicIdentifiers.add("MonitorWaitEvent");
        publicIdentifiers.add("MonitorWaitRequest");
        publicIdentifiers.add("MonthDayDV");
        publicIdentifiers.add("MonthDV");
        publicIdentifiers.add("MoreDrbgParameters");
        publicIdentifiers.add("MotifBorders");
        publicIdentifiers.add("MotifBorders$BevelBorder");
        publicIdentifiers.add("MotifBorders$ButtonBorder");
        publicIdentifiers.add("MotifBorders$FocusBorder");
        publicIdentifiers.add("MotifBorders$FrameBorder");
        publicIdentifiers.add("MotifBorders$InternalFrameBorder");
        publicIdentifiers.add("MotifBorders$MenuBarBorder");
        publicIdentifiers.add("MotifBorders$MotifPopupMenuBorder");
        publicIdentifiers.add("MotifBorders$ToggleButtonBorder");
        publicIdentifiers.add("MotifButtonListener");
        publicIdentifiers.add("MotifButtonUI");
        publicIdentifiers.add("MotifCheckBoxMenuItemUI");
        publicIdentifiers.add("MotifCheckBoxMenuItemUI$ChangeHandler");
        publicIdentifiers.add("MotifCheckBoxMenuItemUI$MouseInputHandler");
        publicIdentifiers.add("MotifCheckBoxUI");
        publicIdentifiers.add("MotifComboBoxUI");
        publicIdentifiers.add("MotifComboBoxUI$ComboBoxLayoutManager");
        publicIdentifiers.add("MotifComboBoxUI$MotifComboPopup");
        publicIdentifiers.add("MotifComboBoxUI$MotifComboPopup$InvocationKeyHandler");
        publicIdentifiers.add("MotifDesktopIconUI");
        publicIdentifiers.add("MotifDesktopIconUI$DesktopIconActionListener");
        publicIdentifiers.add("MotifDesktopIconUI$DesktopIconMouseListener");
        publicIdentifiers.add("MotifDesktopIconUI$IconButton");
        publicIdentifiers.add("MotifDesktopIconUI$IconLabel");
        publicIdentifiers.add("MotifDesktopPaneUI");
        publicIdentifiers.add("MotifEditorPaneUI");
        publicIdentifiers.add("MotifFileChooserUI");
        publicIdentifiers.add("MotifFileChooserUI$DirectoryCellRenderer");
        publicIdentifiers.add("MotifFileChooserUI$FileCellRenderer");
        publicIdentifiers.add("MotifFileChooserUI$FilterComboBoxModel");
        publicIdentifiers.add("MotifFileChooserUI$FilterComboBoxRenderer");
        publicIdentifiers.add("MotifFileChooserUI$MotifDirectoryListModel");
        publicIdentifiers.add("MotifFileChooserUI$MotifFileListModel");
        publicIdentifiers.add("MotifIconFactory");
        publicIdentifiers.add("MotifInternalFrameTitlePane");
        publicIdentifiers.add("MotifInternalFrameUI");
        publicIdentifiers.add("MotifLabelUI");
        publicIdentifiers.add("MotifLookAndFeel");
        publicIdentifiers.add("MotifMenuBarUI");
        publicIdentifiers.add("MotifMenuItemUI");
        publicIdentifiers.add("MotifMenuItemUI$ChangeHandler");
        publicIdentifiers.add("MotifMenuItemUI$MouseInputHandler");
        publicIdentifiers.add("MotifMenuUI");
        publicIdentifiers.add("MotifMenuUI$MotifChangeHandler");
        publicIdentifiers.add("MotifMenuUI$MouseInputHandler");
        publicIdentifiers.add("MotifOptionPaneUI");
        publicIdentifiers.add("MotifPasswordFieldUI");
        publicIdentifiers.add("MotifPopupMenuSeparatorUI");
        publicIdentifiers.add("MotifPopupMenuUI");
        publicIdentifiers.add("MotifProgressBarUI");
        publicIdentifiers.add("MotifRadioButtonMenuItemUI");
        publicIdentifiers.add("MotifRadioButtonMenuItemUI$ChangeHandler");
        publicIdentifiers.add("MotifRadioButtonMenuItemUI$MouseInputHandler");
        publicIdentifiers.add("MotifRadioButtonUI");
        publicIdentifiers.add("MotifScrollBarButton");
        publicIdentifiers.add("MotifScrollBarUI");
        publicIdentifiers.add("MotifScrollPaneUI");
        publicIdentifiers.add("MotifSeparatorUI");
        publicIdentifiers.add("MotifSliderUI");
        publicIdentifiers.add("MotifSplitPaneDivider");
        publicIdentifiers.add("MotifSplitPaneUI");
        publicIdentifiers.add("MotifTabbedPaneUI");
        publicIdentifiers.add("MotifTextAreaUI");
        publicIdentifiers.add("MotifTextFieldUI");
        publicIdentifiers.add("MotifTextPaneUI");
        publicIdentifiers.add("MotifTextUI");
        publicIdentifiers.add("MotifTextUI$MotifCaret");
        publicIdentifiers.add("MotifToggleButtonUI");
        publicIdentifiers.add("MotifTreeCellRenderer");
        publicIdentifiers.add("MotifTreeCellRenderer$TreeLeafIcon");
        publicIdentifiers.add("MotifTreeUI");
        publicIdentifiers.add("MotifTreeUI$MotifCollapsedIcon");
        publicIdentifiers.add("MotifTreeUI$MotifExpandedIcon");
        publicIdentifiers.add("MouseAdapter");
        publicIdentifiers.add("MouseDragGestureRecognizer");
        publicIdentifiers.add("MouseEvent");
        publicIdentifiers.add("MouseInfo");
        publicIdentifiers.add("MouseInfoPeer");
        publicIdentifiers.add("MouseInputAdapter");
        publicIdentifiers.add("MouseInputListener");
        publicIdentifiers.add("MouseListener");
        publicIdentifiers.add("MouseMotionAdapter");
        publicIdentifiers.add("MouseMotionListener");
        publicIdentifiers.add("MouseSupport");
        publicIdentifiers.add("MouseWheelEvent");
        publicIdentifiers.add("MouseWheelListener");
        publicIdentifiers.add("MS1250");
        publicIdentifiers.add("MS1251");
        publicIdentifiers.add("MS1252");
        publicIdentifiers.add("MS1253");
        publicIdentifiers.add("MS1254");
        publicIdentifiers.add("MS1255");
        publicIdentifiers.add("MS1256");
        publicIdentifiers.add("MS1257");
        publicIdentifiers.add("MS1258");
        publicIdentifiers.add("MS50220");
        publicIdentifiers.add("MS50221");
        publicIdentifiers.add("MS874");
        publicIdentifiers.add("MS932");
        publicIdentifiers.add("MS932_0213");
        publicIdentifiers.add("MS932_0213$Decoder");
        publicIdentifiers.add("MS932_0213$Encoder");
        publicIdentifiers.add("MS936");
        publicIdentifiers.add("MS949");
        publicIdentifiers.add("MS950");
        publicIdentifiers.add("MS950_HKSCS");
        publicIdentifiers.add("MS950_HKSCS_XP");
        publicIdentifiers.add("MsgKey");
        publicIdentifiers.add("MSISO2022JP");
        publicIdentifiers.add("Mult");
        publicIdentifiers.add("MULTIANEWARRAY");
        publicIdentifiers.add("MultiANewArrayInsnNode");
        publicIdentifiers.add("MultiBranchData");
        publicIdentifiers.add("MultiButtonUI");
        publicIdentifiers.add("MulticastChannel");
        publicIdentifiers.add("MulticastSocket");
        publicIdentifiers.add("MultiColorChooserUI");
        publicIdentifiers.add("MultiComboBoxUI");
        publicIdentifiers.add("MultiDesktopIconUI");
        publicIdentifiers.add("MultiDesktopPaneUI");
        publicIdentifiers.add("MultiDoc");
        publicIdentifiers.add("MultiDocPrintJob");
        publicIdentifiers.add("MultiDocPrintService");
        publicIdentifiers.add("MultiFileChooserUI");
        publicIdentifiers.add("MultiInternalFrameUI");
        publicIdentifiers.add("MultiLabelUI");
        publicIdentifiers.add("MultiListUI");
        publicIdentifiers.add("MultiLookAndFeel");
        publicIdentifiers.add("MultiMenuBarUI");
        publicIdentifiers.add("MultiMenuItemUI");
        publicIdentifiers.add("MultiNode");
        publicIdentifiers.add("MultiOptionPaneUI");
        publicIdentifiers.add("MultiPanelUI");
        publicIdentifiers.add("MultiPixelPackedSampleModel");
        publicIdentifiers.add("MultipleDocumentHandling");
        publicIdentifiers.add("MultipleGradientPaint");
        publicIdentifiers.add("MultipleMaster");
        publicIdentifiers.add("MultipleNodeCounter");
        publicIdentifiers.add("MultipleScopeNamespaceSupport");
        publicIdentifiers.add("MultiPopupMenuUI");
        publicIdentifiers.add("MultiProgressBarUI");
        publicIdentifiers.add("MultiResolutionCachedImage");
        publicIdentifiers.add("MultiResolutionImage");
        publicIdentifiers.add("MultiResolutionToolkitImage");
        publicIdentifiers.add("MultiRootPaneUI");
        publicIdentifiers.add("MultiScrollBarUI");
        publicIdentifiers.add("MultiScrollPaneUI");
        publicIdentifiers.add("MultiSeparatorUI");
        publicIdentifiers.add("MultiSliderUI");
        publicIdentifiers.add("MultiSpinnerUI");
        publicIdentifiers.add("MultiSplitPaneUI");
        publicIdentifiers.add("MultiTabbedPaneUI");
        publicIdentifiers.add("MultiTableHeaderUI");
        publicIdentifiers.add("MultiTableUI");
        publicIdentifiers.add("MultiTaskListener");
        publicIdentifiers.add("MultiTextUI");
        publicIdentifiers.add("MultiToolBarUI");
        publicIdentifiers.add("MultiToolTipUI");
        publicIdentifiers.add("MultiTreeUI");
        publicIdentifiers.add("MultiValuedNodeHeapIterator");
        publicIdentifiers.add("MultiValuedNodeHeapIterator$HeapNode");
        publicIdentifiers.add("MultiViewportUI");
        publicIdentifiers.add("MutableAttributeSet");
        publicIdentifiers.add("MutableAttrListImpl");
        publicIdentifiers.add("MutableCallSite");
        publicIdentifiers.add("MutableComboBoxModel");
        publicIdentifiers.add("MutableInteger");
        publicIdentifiers.add("MutableIntegerModuloP");
        publicIdentifiers.add("MutablePoint");
        publicIdentifiers.add("MutableSpace");
        publicIdentifiers.add("MutableTreeNode");
        publicIdentifiers.add("MutationEvent");
        publicIdentifiers.add("MutationEventImpl");
        publicIdentifiers.add("MutationException");
        publicIdentifiers.add("Mutex");
        publicIdentifiers.add("MXBean");
        publicIdentifiers.add("MXBeanLookup");
        publicIdentifiers.add("MXBeanMapping");
        publicIdentifiers.add("MXBeanMappingFactory");
        publicIdentifiers.add("MXBeanProxy");
        publicIdentifiers.add("MXBeanSupport");
    }

    private void addPublicIdentifiersNR() {
        publicIdentifiers.add("Name");
        publicIdentifiers.add("Name$NameMapper");
        publicIdentifiers.add("Name$Table");
        publicIdentifiers.add("NameAlreadyBoundException");
        publicIdentifiers.add("NameCallback");
        publicIdentifiers.add("NameClassPair");
        publicIdentifiers.add("NameConstraintsExtension");
        publicIdentifiers.add("NamedAndTyped");
        publicIdentifiers.add("NamedEvent");
        publicIdentifiers.add("NamedFieldIdentifier");
        publicIdentifiers.add("NamedNodeMap");
        publicIdentifiers.add("NamedNodeMapImpl");
        publicIdentifiers.add("NamedObject");
        publicIdentifiers.add("NamedParameterSpec");
        publicIdentifiers.add("NameFilter");
        publicIdentifiers.add("NameList");
        publicIdentifiers.add("NameNotFoundException");
        publicIdentifiers.add("NameParser");
        publicIdentifiers.add("Names");
        publicIdentifiers.add("NameSignatureInstruction");
        publicIdentifiers.add("Namespace");
        publicIdentifiers.add("NameSpace");
        publicIdentifiers.add("NamespaceChangeListener");
        publicIdentifiers.add("NamespaceContext");
        publicIdentifiers.add("NamespaceContextWrapper");
        publicIdentifiers.add("NamespaceImpl");
        publicIdentifiers.add("NamespaceMappings");
        publicIdentifiers.add("NamespaceSupport");
        publicIdentifiers.add("NameSpaceSymbTable");
        publicIdentifiers.add("NamingEnumeration");
        publicIdentifiers.add("NamingEvent");
        publicIdentifiers.add("NamingException");
        publicIdentifiers.add("NamingExceptionEvent");
        publicIdentifiers.add("NamingListener");
        publicIdentifiers.add("NamingManager");
        publicIdentifiers.add("NamingManagerHelper");
        publicIdentifiers.add("NamingSecurityException");
        publicIdentifiers.add("NarrowKlassField");
        publicIdentifiers.add("NarrowOopField");
        publicIdentifiers.add("Native");
        publicIdentifiers.add("NativeEntryPoint");
        publicIdentifiers.add("NativeFont");
        publicIdentifiers.add("NativeGlyphMapper");
        publicIdentifiers.add("NativeImageReinitialize");
        publicIdentifiers.add("NativeLibrary");
        publicIdentifiers.add("NativeMemorySegmentImpl");
        publicIdentifiers.add("NativeMethodException");
        publicIdentifiers.add("NativeSignatureIterator");
        publicIdentifiers.add("NativeThread");
        publicIdentifiers.add("NavigableMap");
        publicIdentifiers.add("NavigableSet");
        publicIdentifiers.add("Navigation");
        publicIdentifiers.add("Navigation$SubNavLinks");
        publicIdentifiers.add("NavigationFilter");
        publicIdentifiers.add("NavigationFilter$FilterBypass");
        publicIdentifiers.add("NClob");
        publicIdentifiers.add("Neg");
        publicIdentifiers.add("NegativeArraySizeException");
        publicIdentifiers.add("NegotiateCallbackHandler");
        publicIdentifiers.add("Negotiator");
        publicIdentifiers.add("NegotiatorImpl");
        publicIdentifiers.add("NegTokenInit");
        publicIdentifiers.add("NegTokenTarg");
        publicIdentifiers.add("NestedClassWriter");
        publicIdentifiers.add("NestedClassWriterImpl");
        publicIdentifiers.add("NestHost_attribute");
        publicIdentifiers.add("NestMembers_attribute");
        publicIdentifiers.add("Net");
        publicIdentifiers.add("NetClient");
        publicIdentifiers.add("NetHooks$Provider");
        publicIdentifiers.add("NetProperties");
        publicIdentifiers.add("NetscapeCertTypeExtension");
        publicIdentifiers.add("NetworkChannel");
        publicIdentifiers.add("NetworkClient");
        publicIdentifiers.add("NEW");
        publicIdentifiers.add("NewAction");
        publicIdentifiers.add("NewAPIBuilder");
        publicIdentifiers.add("NewAPIListWriter");
        publicIdentifiers.add("NEWARRAY");
        publicIdentifiers.add("NewArrayTree");
        publicIdentifiers.add("NewClassTree");
        publicIdentifiers.add("NextAction");
        publicIdentifiers.add("NimbusLookAndFeel");
        publicIdentifiers.add("NMethod");
        publicIdentifiers.add("NMTOKENDatatypeValidator");
        publicIdentifiers.add("NoClassDefFoundError");
        publicIdentifiers.add("NoConnectionPendingException");
        publicIdentifiers.add("Node");
        publicIdentifiers.add("Node$Builder");
        publicIdentifiers.add("Node$Builder$OfDouble");
        publicIdentifiers.add("Node$Builder$OfInt");
        publicIdentifiers.add("Node$Builder$OfLong");
        publicIdentifiers.add("Node$OfDouble");
        publicIdentifiers.add("Node$OfInt");
        publicIdentifiers.add("Node$OfLong");
        publicIdentifiers.add("Node$OfPrimitive");
        publicIdentifiers.add("Node_Array");
        publicIdentifiers.add("NodeChangeEvent");
        publicIdentifiers.add("NodeChangeListener");
        publicIdentifiers.add("NodeConsumer");
        publicIdentifiers.add("NodeCounter");
        publicIdentifiers.add("NodeFilter");
        publicIdentifiers.add("NodeImpl");
        publicIdentifiers.add("NodeInfo");
        publicIdentifiers.add("NodeIterator");
        publicIdentifiers.add("NodeIteratorBase");
        publicIdentifiers.add("NodeIteratorImpl");
        publicIdentifiers.add("Node_List");
        publicIdentifiers.add("NodeList");
        publicIdentifiers.add("NodeLocator");
        publicIdentifiers.add("NodeSequence");
        publicIdentifiers.add("NodeSet");
        publicIdentifiers.add("NodeSetData");
        publicIdentifiers.add("NodeSetDTM");
        publicIdentifiers.add("NodeSortRecord");
        publicIdentifiers.add("NodeSortRecordFactory");
        publicIdentifiers.add("NodeTest");
        publicIdentifiers.add("NodeTestFilter");
        publicIdentifiers.add("NodeVector");
        publicIdentifiers.add("NoInitialContextException");
        publicIdentifiers.add("NonBaseLocaleDataMetaInfo");
        publicIdentifiers.add("NonBlocking");
        publicIdentifiers.add("NonBlockingInputStream");
        publicIdentifiers.add("NonBlockingInputStreamImpl");
        publicIdentifiers.add("NonBlockingPumpInputStream");
        publicIdentifiers.add("NonBlockingPumpReader");
        publicIdentifiers.add("NonBlockingReader");
        publicIdentifiers.add("NonBlockingReaderImpl");
        publicIdentifiers.add("Nonce");
        publicIdentifiers.add("NonConcreteMethodImpl");
        publicIdentifiers.add("NoninvertibleTransformException");
        publicIdentifiers.add("NonOptionArgumentSpec");
        publicIdentifiers.add("NonReadableChannelException");
        publicIdentifiers.add("NonValidatingConfiguration");
        publicIdentifiers.add("NonWritableChannelException");
        publicIdentifiers.add("NOP");
        publicIdentifiers.add("NoPermissionException");
        publicIdentifiers.add("NoPreview");
        publicIdentifiers.add("Norm2AllModes$Normalizer2WithImpl");
        publicIdentifiers.add("Normalizer2");
        publicIdentifiers.add("NormalizerBase$Mode");
        publicIdentifiers.add("NoRouteToHostException");
        publicIdentifiers.add("NoSuchAlgorithmException");
        publicIdentifiers.add("NoSuchAttributeException");
        publicIdentifiers.add("NoSuchDynamicMethodException");
        publicIdentifiers.add("NoSuchElementException");
        publicIdentifiers.add("NoSuchFieldError");
        publicIdentifiers.add("NoSuchFieldException");
        publicIdentifiers.add("NoSuchFileException");
        publicIdentifiers.add("NoSuchMechanismException");
        publicIdentifiers.add("NoSuchMethodError");
        publicIdentifiers.add("NoSuchMethodException");
        publicIdentifiers.add("NoSuchObjectException");
        publicIdentifiers.add("NoSuchPaddingException");
        publicIdentifiers.add("NoSuchProviderException");
        publicIdentifiers.add("NoSuchSymbolException");
        publicIdentifiers.add("NotActiveException");
        publicIdentifiers.add("Notation");
        publicIdentifiers.add("NOTATIONDatatypeValidator");
        publicIdentifiers.add("NotationDeclaration");
        publicIdentifiers.add("NotationDeclarationImpl");
        publicIdentifiers.add("NotationImpl");
        publicIdentifiers.add("NotBoundException");
        publicIdentifiers.add("NotCompliantMBeanException");
        publicIdentifiers.add("NotContextException");
        publicIdentifiers.add("NotDirectoryException");
        publicIdentifiers.add("NotEquals");
        publicIdentifiers.add("Notification");
        publicIdentifiers.add("NotificationAccessController");
        publicIdentifiers.add("NotificationBroadcaster");
        publicIdentifiers.add("NotificationBroadcasterSupport");
        publicIdentifiers.add("NotificationBuffer");
        publicIdentifiers.add("NotificationBufferFilter");
        publicIdentifiers.add("NotificationEmitter");
        publicIdentifiers.add("NotificationEmitterSupport");
        publicIdentifiers.add("NotificationFilter");
        publicIdentifiers.add("NotificationFilterSupport");
        publicIdentifiers.add("NotificationHandler");
        publicIdentifiers.add("NotificationListener");
        publicIdentifiers.add("NotificationResult");
        publicIdentifiers.add("NotificationThread");
        publicIdentifiers.add("NotImplementedException");
        publicIdentifiers.add("NotInHeapException");
        publicIdentifiers.add("NotLinkException");
        publicIdentifiers.add("NotSerializableException");
        publicIdentifiers.add("NotYetBoundException");
        publicIdentifiers.add("NotYetConnectedException");
        publicIdentifiers.add("NoType");
        publicIdentifiers.add("NSInfo");
        publicIdentifiers.add("NTDomainPrincipal");
        publicIdentifiers.add("NTLMAuthentication");
        publicIdentifiers.add("NTLMAuthenticationCallback");
        publicIdentifiers.add("NTLoginModule");
        publicIdentifiers.add("NTNumericCredential");
        publicIdentifiers.add("NTSid");
        publicIdentifiers.add("NTSidDomainPrincipal");
        publicIdentifiers.add("NTSidGroupPrincipal");
        publicIdentifiers.add("NTSidPrimaryGroupPrincipal");
        publicIdentifiers.add("NTSidUserPrincipal");
        publicIdentifiers.add("NTSystem");
        publicIdentifiers.add("NTUserPrincipal");
        publicIdentifiers.add("NullCipher");
        publicIdentifiers.add("NullComponentPeer");
        publicIdentifiers.add("NullEType");
        publicIdentifiers.add("NullPipe");
        publicIdentifiers.add("NullPointerException");
        publicIdentifiers.add("NullSurfaceData");
        publicIdentifiers.add("NullType");
        publicIdentifiers.add("Number");
        publicIdentifiers.add("NumberEditor");
        publicIdentifiers.add("NumberFormat");
        publicIdentifiers.add("NumberFormat$Field");
        publicIdentifiers.add("NumberFormatException");
        publicIdentifiers.add("NumberFormatProvider");
        publicIdentifiers.add("NumberFormatProviderImpl");
        publicIdentifiers.add("NumberFormatter");
        publicIdentifiers.add("NumberType");
        publicIdentifiers.add("NumericShaper$Range");
        publicIdentifiers.add("OAEPParameterSpec");
        publicIdentifiers.add("ObjArray");
        publicIdentifiers.add("ObjArrayKlass");
        publicIdentifiers.add("ObjDoubleConsumer");
        publicIdentifiers.add("Object");
        publicIdentifiers.add("ObjectChangeListener");
        publicIdentifiers.add("ObjectCollectedException");
        publicIdentifiers.add("ObjectContainer");
        publicIdentifiers.add("ObjectFactory");
        publicIdentifiers.add("ObjectFactoryBuilder");
        publicIdentifiers.add("ObjectHeap");
        publicIdentifiers.add("ObjectHeap$ObjectFilter");
        publicIdentifiers.add("ObjectHistogram");
        publicIdentifiers.add("ObjectHistogramElement");
        publicIdentifiers.add("ObjectHistogramPanel");
        publicIdentifiers.add("ObjectHistogramPanel$Listener");
        publicIdentifiers.add("ObjectInput");
        publicIdentifiers.add("ObjectInputFilter");
        publicIdentifiers.add("ObjectInputFilter$FilterInfo");
        publicIdentifiers.add("ObjectInputStream");
        publicIdentifiers.add("ObjectInputStream$GetField");
        publicIdentifiers.add("ObjectInputValidation");
        publicIdentifiers.add("ObjectInstance");
        publicIdentifiers.add("ObjectList");
        publicIdentifiers.add("ObjectListPanel");
        publicIdentifiers.add("ObjectMethods");
        publicIdentifiers.add("ObjectMonitor");
        publicIdentifiers.add("ObjectName");
        publicIdentifiers.add("ObjectOutput");
        publicIdentifiers.add("ObjectOutputStream");
        publicIdentifiers.add("ObjectOutputStream$PutField");
        publicIdentifiers.add("ObjectPool");
        publicIdentifiers.add("ObjectReader");
        publicIdentifiers.add("ObjectReader$FieldSetter");
        publicIdentifiers.add("ObjectReader$SignatureParser");
        publicIdentifiers.add("ObjectReference");
        publicIdentifiers.add("ObjectReferenceImpl");
        publicIdentifiers.add("ObjectReferenceImpl$Cache");
        publicIdentifiers.add("ObjectStack");
        publicIdentifiers.add("ObjectStreamConstants");
        publicIdentifiers.add("ObjectStreamException");
        publicIdentifiers.add("ObjectStreamField");
        publicIdentifiers.add("ObjectSynchronizer");
        publicIdentifiers.add("ObjectType");
        publicIdentifiers.add("ObjectValue");
        publicIdentifiers.add("ObjectVector");
        publicIdentifiers.add("ObjectView");
        publicIdentifiers.add("ObjectVisitor");
        publicIdentifiers.add("ObjIntConsumer");
        publicIdentifiers.add("ObjLongConsumer");
        publicIdentifiers.add("Observable");
        publicIdentifiers.add("Observer");
        publicIdentifiers.add("ObsoleteMethodImpl");
        publicIdentifiers.add("OceanTheme");
        publicIdentifiers.add("OCSP$RevocationStatus");
        publicIdentifiers.add("OCSPNoCheckExtension");
        publicIdentifiers.add("OctetStreamData");
        publicIdentifiers.add("OffScreenImage");
        publicIdentifiers.add("OffScreenImageSource");
        publicIdentifiers.add("OffsetClosure");
        publicIdentifiers.add("OffsetTableContigSpace");
        publicIdentifiers.add("OGLDrawImage");
        publicIdentifiers.add("OGLRenderQueue");
        publicIdentifiers.add("OGLSurfaceData");
        publicIdentifiers.add("OGLSurfaceDataProxy");
        publicIdentifiers.add("Oid");
        publicIdentifiers.add("OIDMap");
        publicIdentifiers.add("OIDName");
        publicIdentifiers.add("OkAction");
        publicIdentifiers.add("OkCancelButtonPanel");
        publicIdentifiers.add("OkCancelDialog");
        publicIdentifiers.add("OneStepIterator");
        publicIdentifiers.add("OneStepIteratorForward");
        publicIdentifiers.add("Oop");
        publicIdentifiers.add("OopField");
        publicIdentifiers.add("OopHandle");
        publicIdentifiers.add("OopMapCacheEntry");
        publicIdentifiers.add("OopMapStream");
        publicIdentifiers.add("OopMapValue");
        publicIdentifiers.add("OopMapValue$OopTypes");
        publicIdentifiers.add("OopMapVisitor");
        publicIdentifiers.add("OopPrinter");
        publicIdentifiers.add("OopStorage");
        publicIdentifiers.add("OopTreeNodeAdapter");
        publicIdentifiers.add("OopUtilities");
        publicIdentifiers.add("OopVisitor");
        publicIdentifiers.add("OpaqueFrameException");
        publicIdentifiers.add("Opcodes");
        publicIdentifiers.add("OpCodes");
        publicIdentifiers.add("OpenAction");
        publicIdentifiers.add("OpenDataException");
        publicIdentifiers.add("OpenFileInputStreamAction");
        publicIdentifiers.add("OpenFilesHandler");
        publicIdentifiers.add("OpeningHandshake");
        publicIdentifiers.add("OpenListResourceBundle");
        publicIdentifiers.add("OpenMBeanAttributeInfo");
        publicIdentifiers.add("OpenMBeanAttributeInfoSupport");
        publicIdentifiers.add("OpenMBeanConstructorInfo");
        publicIdentifiers.add("OpenMBeanConstructorInfoSupport");
        publicIdentifiers.add("OpenMBeanInfo");
        publicIdentifiers.add("OpenMBeanInfoSupport");
        publicIdentifiers.add("OpenMBeanOperationInfo");
        publicIdentifiers.add("OpenMBeanOperationInfoSupport");
        publicIdentifiers.add("OpenMBeanParameterInfo");
        publicIdentifiers.add("OpenMBeanParameterInfoSupport");
        publicIdentifiers.add("OpenOption");
        publicIdentifiers.add("OpensTree");
        publicIdentifiers.add("OpenType");
        publicIdentifiers.add("OpenURIHandler");
        publicIdentifiers.add("Operand");
        publicIdentifiers.add("OperatingSystemMXBean");
        publicIdentifiers.add("Operation");
        publicIdentifiers.add("OperationEntry");
        publicIdentifiers.add("OperationNotSupportedException");
        publicIdentifiers.add("OperationsException");
        publicIdentifiers.add("OperationTrackers$Trackable");
        publicIdentifiers.add("OperationTrackers$Tracker");
        publicIdentifiers.add("Operator");
        publicIdentifiers.add("Operators");
        publicIdentifiers.add("OpMap");
        publicIdentifiers.add("OpMapVector");
        publicIdentifiers.add("Option");
        publicIdentifiers.add("Option$InvalidValueException");
        publicIdentifiers.add("OptionalDataException");
        publicIdentifiers.add("OptionalHeader");
        publicIdentifiers.add("OptionalHeaderDataDirectories");
        publicIdentifiers.add("OptionalHeaderStandardFields");
        publicIdentifiers.add("OptionalHeaderWindowsSpecificFields");
        publicIdentifiers.add("OptionChecker");
        publicIdentifiers.add("OptionDeclarer");
        publicIdentifiers.add("OptionDescriptor");
        publicIdentifiers.add("OptionException");
        publicIdentifiers.add("OptionFinder");
        publicIdentifiers.add("OptionFormat");
        publicIdentifiers.add("OptionHelper");
        publicIdentifiers.add("OptionHelper$GrumpyHelper");
        publicIdentifiers.add("OptionLister");
        publicIdentifiers.add("OptionNameMap");
        publicIdentifiers.add("OptionOutputFormatter");
        publicIdentifiers.add("OptionPaneUI");
        publicIdentifiers.add("OptionParser");
        publicIdentifiers.add("Options");
        publicIdentifiers.add("OptionSet");
        publicIdentifiers.add("OptionSpec");
        publicIdentifiers.add("OptionSpecBuilder");
        publicIdentifiers.add("Or");
        publicIdentifiers.add("OrderClassLoaders");
        publicIdentifiers.add("OSEnvironment");
        publicIdentifiers.add("OSInfo");
        publicIdentifiers.add("OSInfo$WindowsVersion");
        publicIdentifiers.add("OSThread");
        publicIdentifiers.add("OSUtils");
        publicIdentifiers.add("OtherName");
        publicIdentifiers.add("OutgoingHeaders");
        publicIdentifiers.add("OutlineTextRenderer");
        publicIdentifiers.add("OutOfMemoryError");
        publicIdentifiers.add("OutputFormat");
        publicIdentifiers.add("OutputFormat$Defaults");
        publicIdentifiers.add("OutputFormat$DTD");
        publicIdentifiers.add("OutputFormatter");
        publicIdentifiers.add("OutputInt");
        publicIdentifiers.add("OutputKeys");
        publicIdentifiers.add("OutputStream");
        publicIdentifiers.add("OutputStreamImageOutputStreamSpi");
        publicIdentifiers.add("OutputStreamWriter");
        publicIdentifiers.add("OutputViewer");
        publicIdentifiers.add("OverlappingFileLockException");
        publicIdentifiers.add("OverlayLayout");
        publicIdentifiers.add("Override");
        publicIdentifiers.add("OverrideNativeWindowHandle");
        publicIdentifiers.add("OverviewElement");
        publicIdentifiers.add("ProcessBuilder");
        publicIdentifiers.add("ProcessBuilder.Redirect");
        publicIdentifiers.add("ProcessBuilder.Redirect.Type");
        publicIdentifiers.add("ProcessHandle.Info");
        publicIdentifiers.add("Package");
        publicIdentifiers.add("PackageElement");
        publicIdentifiers.add("PackageIndexWriter");
        publicIdentifiers.add("PackageNameFilter");
        publicIdentifiers.add("PackagerException");
        publicIdentifiers.add("PackageSummaryBuilder");
        publicIdentifiers.add("PackageSummaryWriter");
        publicIdentifiers.add("PackageTree");
        publicIdentifiers.add("PackageTreeWriter");
        publicIdentifiers.add("PackageUseWriter");
        publicIdentifiers.add("PackageWriterImpl");
        publicIdentifiers.add("PackedColorModel");
        publicIdentifiers.add("Packet");
        publicIdentifiers.add("PAData");
        publicIdentifiers.add("PAData$SaltAndParams");
        publicIdentifiers.add("PaddingLayout");
        publicIdentifiers.add("PAEncTSEnc");
        publicIdentifiers.add("PAForUserEnc");
        publicIdentifiers.add("Page");
        publicIdentifiers.add("Pageable");
        publicIdentifiers.add("PageableDoc");
        publicIdentifiers.add("PageCache");
        publicIdentifiers.add("PageFetcher");
        publicIdentifiers.add("PageFormat");
        publicIdentifiers.add("Paint");
        publicIdentifiers.add("Paint9Painter");
        publicIdentifiers.add("PaintContext");
        publicIdentifiers.add("Painter");
        publicIdentifiers.add("PaintEvent");
        publicIdentifiers.add("PaintEventDispatcher");
        publicIdentifiers.add("Pair");
        publicIdentifiers.add("PaletteBuilder");
        publicIdentifiers.add("PaletteBuilder$ColorNode");
        publicIdentifiers.add("Panel");
        publicIdentifiers.add("Panel$AccessibleAWTPanel");
        publicIdentifiers.add("PanelPeer");
        publicIdentifiers.add("PanelUI");
        publicIdentifiers.add("PaPacOptions");
        publicIdentifiers.add("Paper");
        publicIdentifiers.add("ParagraphView");
        publicIdentifiers.add("ParallelListResourceBundle");
        publicIdentifiers.add("ParallelogramPipe");
        publicIdentifiers.add("ParallelScavengeHeap");
        publicIdentifiers.add("Parameter");
        publicIdentifiers.add("ParameterAnnotationEntry");
        publicIdentifiers.add("ParameterAnnotations");
        publicIdentifiers.add("ParameterBlock");
        publicIdentifiers.add("ParameterDescriptor");
        publicIdentifiers.add("Parameterizable");
        publicIdentifiers.add("ParameterizedType");
        publicIdentifiers.add("ParameterizedTypeImpl");
        publicIdentifiers.add("ParameterizedTypeTree");
        publicIdentifiers.add("ParameterMetaData");
        publicIdentifiers.add("ParameterNameProvider");
        publicIdentifiers.add("ParameterNode");
        publicIdentifiers.add("ParametersMap");
        publicIdentifiers.add("ParametersTypeData");
        publicIdentifiers.add("ParamTaglet");
        publicIdentifiers.add("ParamTree");
        publicIdentifiers.add("ParenthesizedPatternTree");
        publicIdentifiers.add("ParenthesizedTree");
        publicIdentifiers.add("ParentNode");
        publicIdentifiers.add("ParsedLine");
        publicIdentifiers.add("ParseException");
        publicIdentifiers.add("ParsePosition");
        publicIdentifiers.add("Parser");
        publicIdentifiers.add("ParserAdapter");
        publicIdentifiers.add("ParserConfigurationException");
        publicIdentifiers.add("ParserConfigurationSettings");
        publicIdentifiers.add("ParserDelegator");
        publicIdentifiers.add("ParserException");
        publicIdentifiers.add("ParserFactory");
        publicIdentifiers.add("ParseStatus");
        publicIdentifiers.add("ParsingException");
        publicIdentifiers.add("PartialCompositeContext");
        publicIdentifiers.add("PartialCompositeDirContext");
        publicIdentifiers.add("PartialResultException");
        publicIdentifiers.add("ParticipatesInPreview");
        publicIdentifiers.add("Password");
        publicIdentifiers.add("PasswordCallback");
        publicIdentifiers.add("PasswordView");
        publicIdentifiers.add("Patch");
        publicIdentifiers.add("Path");
        publicIdentifiers.add("Path2D");
        publicIdentifiers.add("Path2D$Double");
        publicIdentifiers.add("Path2D$Float");
        publicIdentifiers.add("PathComponent");
        publicIdentifiers.add("PathConsumer2D");
        publicIdentifiers.add("PathConverter");
        publicIdentifiers.add("PathFileObject");
        publicIdentifiers.add("PathFileObject$CannotCreateUriError");
        publicIdentifiers.add("PathGraphics");
        publicIdentifiers.add("PathIterator");
        publicIdentifiers.add("PathList");
        publicIdentifiers.add("PathMatcher");
        publicIdentifiers.add("PathProperties");
        publicIdentifiers.add("PathResourcePoolEntry");
        publicIdentifiers.add("PathSearchingVirtualMachine");
        publicIdentifiers.add("Pattern");
        publicIdentifiers.add("PatternCaseLabelTree");
        publicIdentifiers.add("PatternSyntaxException");
        publicIdentifiers.add("PatternTree");
        publicIdentifiers.add("PBEKey");
        publicIdentifiers.add("PBEKeySpec");
        publicIdentifiers.add("PBEParameterSpec");
        publicIdentifiers.add("PCDesc");
        publicIdentifiers.add("PCK");
        publicIdentifiers.add("PCMM");
        publicIdentifiers.add("PDLOverrideSupported");
        publicIdentifiers.add("PeekGraphics");
        publicIdentifiers.add("PeekGraphics$ImageWaiter");
        publicIdentifiers.add("PeekMetrics");
        publicIdentifiers.add("PeerAddrChange");
        publicIdentifiers.add("PeerAddressChangeNotification");
        publicIdentifiers.add("PeerEvent");
        publicIdentifiers.add("Pem");
        publicIdentifiers.add("PendingException");
        publicIdentifiers.add("Percentage");
        publicIdentifiers.add("Perf$GetPerfAction");
        publicIdentifiers.add("PerfByteArrayCounter");
        publicIdentifiers.add("PerfByteArrayMonitor");
        publicIdentifiers.add("PerfCounter");
        publicIdentifiers.add("PerfDataBuffer");
        publicIdentifiers.add("PerfDataBufferImpl");
        publicIdentifiers.add("PerfDataBufferPrologue");
        publicIdentifiers.add("PerfDataEntry");
        publicIdentifiers.add("PerfDataFile");
        publicIdentifiers.add("PerfDataPrologue");
        publicIdentifiers.add("PerfectHashBuilder");
        publicIdentifiers.add("PerfectHashBuilder$Entry");
        publicIdentifiers.add("PerfInstrumentation");
        publicIdentifiers.add("PerfIntegerMonitor");
        publicIdentifiers.add("PerfLongArrayCounter");
        publicIdentifiers.add("PerfLongCounter");
        publicIdentifiers.add("PerfLongMonitor");
        publicIdentifiers.add("PerfMemory");
        publicIdentifiers.add("PerfMemory$PerfDataEntryVisitor");
        publicIdentifiers.add("PerformanceLogger");
        publicIdentifiers.add("PerfStringConstantMonitor");
        publicIdentifiers.add("PerfStringCounter");
        publicIdentifiers.add("PerfStringMonitor");
        publicIdentifiers.add("PerfStringVariableMonitor");
        publicIdentifiers.add("Period");
        publicIdentifiers.add("Permission");
        publicIdentifiers.add("PermissionCollection");
        publicIdentifiers.add("PermissionFactory");
        publicIdentifiers.add("PermittedSubclasses_attribute");
        publicIdentifiers.add("PersistenceDelegate");
        publicIdentifiers.add("PersistentMBean");
        publicIdentifiers.add("PersistentSnippet");
        publicIdentifiers.add("PGPData");
        publicIdentifiers.add("PhantomCleanable");
        publicIdentifiers.add("PhantomReference");
        publicIdentifiers.add("Phase");
        publicIdentifiers.add("PhaseCFG");
        publicIdentifiers.add("Phaser");
        publicIdentifiers.add("PhaseRegAlloc");
        publicIdentifiers.add("PhiNode");
        publicIdentifiers.add("PhysicalFont");
        publicIdentifiers.add("PhysicalStrike");
        publicIdentifiers.add("PingFrame");
        publicIdentifiers.add("Pipe");
        publicIdentifiers.add("Pipe$SinkChannel");
        publicIdentifiers.add("Pipe$SourceChannel");
        publicIdentifiers.add("PipedInputStream");
        publicIdentifiers.add("PipedOutputStream");
        publicIdentifiers.add("PipedReader");
        publicIdentifiers.add("PipedWriter");
        publicIdentifiers.add("PixelConverter");
        publicIdentifiers.add("PixelConverter$Argb");
        publicIdentifiers.add("PixelConverter$ArgbBm");
        publicIdentifiers.add("PixelConverter$ArgbPre");
        publicIdentifiers.add("PixelConverter$Bgrx");
        publicIdentifiers.add("PixelConverter$ByteGray");
        publicIdentifiers.add("PixelConverter$Rgba");
        publicIdentifiers.add("PixelConverter$RgbaPre");
        publicIdentifiers.add("PixelConverter$Rgbx");
        publicIdentifiers.add("PixelConverter$Ushort4444Argb");
        publicIdentifiers.add("PixelConverter$Ushort555Rgb");
        publicIdentifiers.add("PixelConverter$Ushort555Rgbx");
        publicIdentifiers.add("PixelConverter$Ushort565Rgb");
        publicIdentifiers.add("PixelConverter$UshortGray");
        publicIdentifiers.add("PixelConverter$Xbgr");
        publicIdentifiers.add("PixelConverter$Xrgb");
        publicIdentifiers.add("PixelDrawPipe");
        publicIdentifiers.add("PixelFillPipe");
        publicIdentifiers.add("PixelGrabber");
        publicIdentifiers.add("PixelInterleavedSampleModel");
        publicIdentifiers.add("PixelToParallelogramConverter");
        publicIdentifiers.add("PixelToShapeConverter");
        publicIdentifiers.add("PKCS10");
        publicIdentifiers.add("PKCS10Attribute");
        publicIdentifiers.add("PKCS10Attributes");
        publicIdentifiers.add("PKCS11");
        publicIdentifiers.add("PKCS11Constants");
        publicIdentifiers.add("PKCS11Exception");
        publicIdentifiers.add("PKCS11RuntimeException");
        publicIdentifiers.add("PKCS7");
        publicIdentifiers.add("PKCS8EncodedKeySpec");
        publicIdentifiers.add("PKCS8Key");
        publicIdentifiers.add("PKCS9Attribute");
        publicIdentifiers.add("PKCS9Attributes");
        publicIdentifiers.add("PKIXBuilderParameters");
        publicIdentifiers.add("PKIXCertPathBuilderResult");
        publicIdentifiers.add("PKIXCertPathChecker");
        publicIdentifiers.add("PKIXCertPathValidatorResult");
        publicIdentifiers.add("PKIXExtendedParameters");
        publicIdentifiers.add("PKIXExtensions");
        publicIdentifiers.add("PKIXParameters");
        publicIdentifiers.add("PKIXRevocationChecker");
        publicIdentifiers.add("plain");
        publicIdentifiers.add("PlainDocument");
        publicIdentifiers.add("PlainTextInputStream");
        publicIdentifiers.add("PlainView");
        publicIdentifiers.add("PlatformDescription");
        publicIdentifiers.add("PlatformDescription$PluginInfo");
        publicIdentifiers.add("PlatformFont");
        publicIdentifiers.add("PlatformGraphicsInfo");
        publicIdentifiers.add("PlatformInfo");
        publicIdentifiers.add("PlatformKind");
        publicIdentifiers.add("PlatformKind$EnumKey");
        publicIdentifiers.add("PlatformKind$Key");
        publicIdentifiers.add("PlatformLogger");
        publicIdentifiers.add("PlatformLogger$Bridge");
        publicIdentifiers.add("PlatformLogger$ConfigurableBridge");
        publicIdentifiers.add("PlatformLogger$ConfigurableBridge$LoggerConfiguration");
        publicIdentifiers.add("PlatformLoggingMXBean");
        publicIdentifiers.add("PlatformManagedObject");
        publicIdentifiers.add("PlatformMBeanProvider");
        publicIdentifiers.add("PlatformMBeanProvider$PlatformComponent");
        publicIdentifiers.add("PlatformPrinterJobProxy");
        publicIdentifiers.add("PlatformProvider");
        publicIdentifiers.add("PlatformProvider$PlatformNotSupported");
        publicIdentifiers.add("PlatformSocketImpl");
        publicIdentifiers.add("PlatformSupport");
        publicIdentifiers.add("PlatformSupportImpl");
        publicIdentifiers.add("PlatformUtils");
        publicIdentifiers.add("Plotter");
        publicIdentifiers.add("Plotter$AccessiblePlotter");
        publicIdentifiers.add("PlotterPanel");
        publicIdentifiers.add("PlotterPanel$AccessiblePlotterPanel");
        publicIdentifiers.add("Plugin");
        publicIdentifiers.add("Plus");
        publicIdentifiers.add("PMap");
        publicIdentifiers.add("png");
        publicIdentifiers.add("PNGImageDecoder");
        publicIdentifiers.add("PNGImageDecoder$Chromaticities");
        publicIdentifiers.add("PNGImageDecoder$PNGException");
        publicIdentifiers.add("PNGImageReader");
        publicIdentifiers.add("PNGImageReaderSpi");
        publicIdentifiers.add("PNGImageWriterSpi");
        publicIdentifiers.add("PNGMetadata");
        publicIdentifiers.add("PNGMetadataFormat");
        publicIdentifiers.add("PNGMetadataFormatResources");
        publicIdentifiers.add("Point");
        publicIdentifiers.add("Point2D");
        publicIdentifiers.add("Point2D$Double");
        publicIdentifiers.add("Point2D$Float");
        publicIdentifiers.add("PointerFinder");
        publicIdentifiers.add("PointerLocation");
        publicIdentifiers.add("PointerType");
        publicIdentifiers.add("Policy");
        publicIdentifiers.add("Policy$Parameters");
        publicIdentifiers.add("PolicyConstraintsExtension");
        publicIdentifiers.add("PolicyFile");
        publicIdentifiers.add("PolicyInformation");
        publicIdentifiers.add("PolicyMappingsExtension");
        publicIdentifiers.add("PolicyNode");
        publicIdentifiers.add("PolicyParser");
        publicIdentifiers.add("PolicyParser$GrantEntry");
        publicIdentifiers.add("PolicyParser$ParsingException");
        publicIdentifiers.add("PolicyParser$PermissionEntry");
        publicIdentifiers.add("PolicyParser$PrincipalEntry");
        publicIdentifiers.add("PolicyQualifierInfo");
        publicIdentifiers.add("PolicySpi");
        publicIdentifiers.add("PolicyUtil");
        publicIdentifiers.add("Poller");
        publicIdentifiers.add("PollSelectorProvider");
        publicIdentifiers.add("Polygon");
        publicIdentifiers.add("PoolCallback");
        publicIdentifiers.add("PoolConstant");
        publicIdentifiers.add("PoolConstant$Dynamic");
        publicIdentifiers.add("PoolConstant$Dynamic$BsmKey");
        publicIdentifiers.add("PoolConstant$LoadableConstant");
        publicIdentifiers.add("PoolConstant$LoadableConstant$BasicConstant");
        publicIdentifiers.add("PooledConnection");
        publicIdentifiers.add("PooledConnectionBuilder");
        publicIdentifiers.add("PooledConnectionFactory");
        publicIdentifiers.add("PoolReader");
        publicIdentifiers.add("PoolWriter");
        publicIdentifiers.add("POP");
        publicIdentifiers.add("POP2");
        publicIdentifiers.add("PopInstruction");
        publicIdentifiers.add("Popup");
        publicIdentifiers.add("PopupFactory");
        publicIdentifiers.add("PopupMenu");
        publicIdentifiers.add("PopupMenu$AccessibleAWTPopupMenu");
        publicIdentifiers.add("PopupMenuEvent");
        publicIdentifiers.add("PopupMenuListener");
        publicIdentifiers.add("PopupMenuPeer");
        publicIdentifiers.add("PopupMenuUI");
        publicIdentifiers.add("Port");
        publicIdentifiers.add("Port$Info");
        publicIdentifiers.add("PortUnreachableException");
        publicIdentifiers.add("Position");
        publicIdentifiers.add("Position$LineMap");
        publicIdentifiers.add("Position$LineTabMapImpl");
        publicIdentifiers.add("PosixFileAttributes");
        publicIdentifiers.add("PosixFileAttributeView");
        publicIdentifiers.add("PosixPtyTerminal");
        publicIdentifiers.add("POSIXSignals");
        publicIdentifiers.add("PosixSysTerminal");
        publicIdentifiers.add("PosterOutputStream");
        publicIdentifiers.add("PostProcessor");
        publicIdentifiers.add("PostVMInitHook");
        publicIdentifiers.add("PPC64CurrentFrameGuess");
        publicIdentifiers.add("PPC64Frame");
        publicIdentifiers.add("PPC64JavaCallWrapper");
        publicIdentifiers.add("PPC64RegisterMap");
        publicIdentifiers.add("PPC64ThreadContext");
        publicIdentifiers.add("Preconditions");
        publicIdentifiers.add("Predicate");
        publicIdentifiers.add("PredicatedNodeTest");
        publicIdentifiers.add("PreferenceChangeEvent");
        publicIdentifiers.add("PreferenceChangeListener");
        publicIdentifiers.add("Preferences");
        publicIdentifiers.add("PreferencesFactory");
        publicIdentifiers.add("PreferencesHandler");
        publicIdentifiers.add("PrefixResolver");
        publicIdentifiers.add("PrefixResolverDefault");
        publicIdentifiers.add("PreHashedMap");
        publicIdentifiers.add("PreparedStatement");
        publicIdentifiers.add("Pretty");
        publicIdentifiers.add("Preview");
        publicIdentifiers.add("PreviewAPIListBuilder");
        publicIdentifiers.add("PreviewFeature");
        publicIdentifiers.add("PreviewFeature$JEP");
        publicIdentifiers.add("PreviewFeatures");
        publicIdentifiers.add("PreviewListWriter");
        publicIdentifiers.add("PrimitiveConstant");
        publicIdentifiers.add("PrimitiveIterator");
        publicIdentifiers.add("PrimitiveIterator$OfDouble");
        publicIdentifiers.add("PrimitiveIterator$OfInt");
        publicIdentifiers.add("PrimitiveIterator$OfLong");
        publicIdentifiers.add("PrimitiveType");
        publicIdentifiers.add("PrimitiveTypeTree");
        publicIdentifiers.add("PrimitiveValue");
        publicIdentifiers.add("PrimitiveValueImpl");
        publicIdentifiers.add("Principal");
        publicIdentifiers.add("PrincipalComparator");
        publicIdentifiers.add("PrincipalName");
        publicIdentifiers.add("Printable");
        publicIdentifiers.add("PrintAboveWriter");
        publicIdentifiers.add("PrintColorUIResource");
        publicIdentifiers.add("Printer");
        publicIdentifiers.add("PrinterAbortException");
        publicIdentifiers.add("PrinterException");
        publicIdentifiers.add("PrinterGraphics");
        publicIdentifiers.add("PrinterIOException");
        publicIdentifiers.add("PrinterJob");
        publicIdentifiers.add("PrinterJobWrapper");
        publicIdentifiers.add("PrinterStateReason");
        publicIdentifiers.add("PrintEvent");
        publicIdentifiers.add("PrintException");
        publicIdentifiers.add("PrintFilesHandler");
        publicIdentifiers.add("PrintGraphics");
        publicIdentifiers.add("PrintingProcessor");
        publicIdentifiers.add("PrintingProcessor$PrintingElementVisitor");
        publicIdentifiers.add("PrintingStatus");
        publicIdentifiers.add("PrintJob");
        publicIdentifiers.add("PrintJob2D");
        publicIdentifiers.add("PrintJobAdapter");
        publicIdentifiers.add("PrintJobAttribute");
        publicIdentifiers.add("PrintJobAttributeEvent");
        publicIdentifiers.add("PrintJobAttributeListener");
        publicIdentifiers.add("PrintJobAttributeSet");
        publicIdentifiers.add("PrintJobEvent");
        publicIdentifiers.add("PrintJobListener");
        publicIdentifiers.add("PrintQuality");
        publicIdentifiers.add("PrintRegionClosure");
        publicIdentifiers.add("PrintRequestAttribute");
        publicIdentifiers.add("PrintRequestAttributeSet");
        publicIdentifiers.add("PrintService");
        publicIdentifiers.add("PrintServiceAttribute");
        publicIdentifiers.add("PrintServiceAttributeEvent");
        publicIdentifiers.add("PrintServiceAttributeListener");
        publicIdentifiers.add("PrintServiceAttributeSet");
        publicIdentifiers.add("PrintServiceLookup");
        publicIdentifiers.add("PrintServiceLookupProvider");
        publicIdentifiers.add("PrintStream");
        publicIdentifiers.add("PrintStreamPrinter");
        publicIdentifiers.add("PrintWriter");
        publicIdentifiers.add("PriorityBlockingQueue");
        publicIdentifiers.add("PriorityFrame");
        publicIdentifiers.add("PriorityQueue");
        publicIdentifiers.add("PrivateAccess");
        publicIdentifiers.add("PrivateClassLoader");
        publicIdentifiers.add("PrivateKey");
        publicIdentifiers.add("PrivateKeyResolver");
        publicIdentifiers.add("PrivateKeyUsageExtension");
        publicIdentifiers.add("PrivateMLet");
        publicIdentifiers.add("PrivilegedAction");
        publicIdentifiers.add("PrivilegedActionException");
        publicIdentifiers.add("PrivilegedExceptionAction");
        publicIdentifiers.add("Process");
        publicIdentifiers.add("ProcessArgumentMatcher");
        publicIdentifiers.add("ProcessAttachingConnector");
        publicIdentifiers.add("ProcessBuilder$Redirect");
        publicIdentifiers.add("ProcessControl");
        publicIdentifiers.add("ProcessHandle");
        publicIdentifiers.add("ProcessHandle$Info");
        publicIdentifiers.add("ProcessInfo");
        publicIdentifiers.add("ProcessingEnvironment");
        publicIdentifiers.add("ProcessingInstruction");
        publicIdentifiers.add("ProcessingInstructionEvent");
        publicIdentifiers.add("ProcessingInstructionImpl");
        publicIdentifiers.add("ProcessListPanel");
        publicIdentifiers.add("Processor");
        publicIdentifiers.add("ProcessorVersion");
        publicIdentifiers.add("ProcessPath");
        publicIdentifiers.add("ProcessPath$DrawHandler");
        publicIdentifiers.add("ProcessPath$EndSubPathHandler");
        publicIdentifiers.add("ProcessPath$ProcessHandler");
        publicIdentifiers.add("ProcImageClassLoader");
        publicIdentifiers.add("Profile");
        publicIdentifiers.add("ProfileData");
        publicIdentifiers.add("ProfileDataException");
        publicIdentifiers.add("ProfileDataVerifier");
        publicIdentifiers.add("ProfilingInfo");
        publicIdentifiers.add("ProgressBarPanel");
        publicIdentifiers.add("ProgressBarUI");
        publicIdentifiers.add("ProgressiveHeapVisitor");
        publicIdentifiers.add("ProgressMonitor");
        publicIdentifiers.add("ProgressMonitor$AccessibleProgressMonitor");
        publicIdentifiers.add("ProgressMonitorInputStream");
        publicIdentifiers.add("ProjectivePoint");
        publicIdentifiers.add("ProjectivePoint$Immutable");
        publicIdentifiers.add("ProjectivePoint$Mutable");
        publicIdentifiers.add("ProjNode");
        publicIdentifiers.add("PropagatedException");
        publicIdentifiers.add("Properties");
        publicIdentifiers.add("PropertiesDefaultHandler");
        publicIdentifiers.add("PropertyBuilder");
        publicIdentifiers.add("PropertyChangeEvent");
        publicIdentifiers.add("PropertyChangeListener");
        publicIdentifiers.add("PropertyChangeListenerProxy");
        publicIdentifiers.add("PropertyChangeSupport");
        publicIdentifiers.add("PropertyDescriptor");
        publicIdentifiers.add("PropertyEditor");
        publicIdentifiers.add("PropertyEditorManager");
        publicIdentifiers.add("PropertyEditorSupport");
        publicIdentifiers.add("PropertyExpander");
        publicIdentifiers.add("PropertyExpander$ExpandException");
        publicIdentifiers.add("PropertyManager");
        publicIdentifiers.add("PropertyResourceBundle");
        publicIdentifiers.add("PropertyResourceBundleCharset");
        publicIdentifiers.add("PropertyState");
        publicIdentifiers.add("PropertyUtils");
        publicIdentifiers.add("PropertyVetoException");
        publicIdentifiers.add("PropertyWriter");
        publicIdentifiers.add("PropertyWriterImpl");
        publicIdentifiers.add("PropMwmHints");
        publicIdentifiers.add("ProtectionDomain");
        publicIdentifiers.add("ProtocolException");
        publicIdentifiers.add("ProtocolFamily");
        publicIdentifiers.add("Provider");
        publicIdentifiers.add("Provider$Service");
        publicIdentifiers.add("ProviderException");
        publicIdentifiers.add("ProviderMismatchException");
        publicIdentifiers.add("ProviderNotFoundException");
        publicIdentifiers.add("Providers");
        publicIdentifiers.add("ProvidesTree");
        publicIdentifiers.add("Proxy");
        publicIdentifiers.add("ProxyClient");
        publicIdentifiers.add("ProxyClient$Snapshot");
        publicIdentifiers.add("ProxyClient$SnapshotMBeanServerConnection");
        publicIdentifiers.add("ProxyGraphics");
        publicIdentifiers.add("ProxyGraphics2D");
        publicIdentifiers.add("ProxyPrintGraphics");
        publicIdentifiers.add("ProxyRef");
        publicIdentifiers.add("ProxySelector");
        publicIdentifiers.add("PSOldGen");
        publicIdentifiers.add("PSource");
        publicIdentifiers.add("PSPrinterJob");
        publicIdentifiers.add("PSPrinterJob$EPSPrinter");
        publicIdentifiers.add("PSPrinterJob$PluginPrinter");
        publicIdentifiers.add("PSSParameterSpec");
        publicIdentifiers.add("PSStreamPrinterFactory");
        publicIdentifiers.add("PSStreamPrintJob");
        publicIdentifiers.add("PSStreamPrintService");
        publicIdentifiers.add("PStack");
        publicIdentifiers.add("PsuedoNames");
        publicIdentifiers.add("PSVIAttrNSImpl");
        publicIdentifiers.add("PSVIDocumentImpl");
        publicIdentifiers.add("PSVIDOMImplementationImpl");
        publicIdentifiers.add("PSVIElementNSImpl");
        publicIdentifiers.add("PSVIProvider");
        publicIdentifiers.add("PSYoungGen");
        publicIdentifiers.add("Pty");
        publicIdentifiers.add("PublicKey");
        publicIdentifiers.add("PumpReader");
        publicIdentifiers.add("PushbackInputStream");
        publicIdentifiers.add("PushbackReader");
        publicIdentifiers.add("PushInstruction");
        publicIdentifiers.add("PushPromiseFrame");
        publicIdentifiers.add("PutAllAction");
        publicIdentifiers.add("PUTFIELD");
        publicIdentifiers.add("PUTSTATIC");
        publicIdentifiers.add("QName");
        publicIdentifiers.add("QNameDV");
        publicIdentifiers.add("QuadCurve2D");
        publicIdentifiers.add("QuadCurve2D$Double");
        publicIdentifiers.add("QuadCurve2D$Float");
        publicIdentifiers.add("QualifiedNameable");
        publicIdentifiers.add("Query");
        publicIdentifiers.add("QueryEval");
        publicIdentifiers.add("QueryExp");
        publicIdentifiers.add("Queue");
        publicIdentifiers.add("QuitHandler");
        publicIdentifiers.add("QuitResponse");
        publicIdentifiers.add("Quo");
        publicIdentifiers.add("RAFImageInputStreamSpi");
        publicIdentifiers.add("RAFImageOutputStreamSpi");
        publicIdentifiers.add("Random");
        publicIdentifiers.add("RandomAccess");
        publicIdentifiers.add("RandomAccessFile");
        publicIdentifiers.add("RandomAccessFileDataSource");
        publicIdentifiers.add("RandomGenerator");
        publicIdentifiers.add("RandomGenerator$ArbitrarilyJumpableGenerator");
        publicIdentifiers.add("RandomGenerator$JumpableGenerator");
        publicIdentifiers.add("RandomGenerator$LeapableGenerator");
        publicIdentifiers.add("RandomGenerator$SplittableGenerator");
        publicIdentifiers.add("RandomGenerator$StreamableGenerator");
        publicIdentifiers.add("RandomSupport");
        publicIdentifiers.add("RandomSupport$AbstractArbitrarilyJumpableGenerator");
        publicIdentifiers.add("RandomSupport$AbstractSpliteratorGenerator");
        publicIdentifiers.add("RandomSupport$AbstractSplittableGenerator");
        publicIdentifiers.add("RandomSupport$AbstractSplittableWithBrineGenerator");
        publicIdentifiers.add("RandomSupport$RandomDoublesSpliterator");
        publicIdentifiers.add("RandomSupport$RandomGeneratorProperties");
        publicIdentifiers.add("RandomSupport$RandomIntsSpliterator");
        publicIdentifiers.add("RandomSupport$RandomLongsSpliterator");
        publicIdentifiers.add("RandomSupport$RandomSpliterator");
        publicIdentifiers.add("Range");
        publicIdentifiers.add("RangeException");
        publicIdentifiers.add("RangeExceptionImpl");
        publicIdentifiers.add("RangeImpl");
        publicIdentifiers.add("Raster");
        publicIdentifiers.add("RasterFormatException");
        publicIdentifiers.add("RasterOp");
        publicIdentifiers.add("RasterPrinterJob");
        publicIdentifiers.add("RawChannel");
        publicIdentifiers.add("RawChannel$Provider");
        publicIdentifiers.add("RawChannel$RawEvent");
        publicIdentifiers.add("RawChannelTube");
        publicIdentifiers.add("RawCharacterHandler");
        publicIdentifiers.add("RawCommandLineLauncher");
        publicIdentifiers.add("RawConstant");
        publicIdentifiers.add("RawHeapVisitor");
        publicIdentifiers.add("RawHtml");
        publicIdentifiers.add("RawOutputFormatter");
        publicIdentifiers.add("RBColor");
        publicIdentifiers.add("RBNode");
        publicIdentifiers.add("RBTree");
        publicIdentifiers.add("RC2Cipher");
        publicIdentifiers.add("RC2ParameterSpec");
        publicIdentifiers.add("RC5ParameterSpec");
        publicIdentifiers.add("Rdn");
        publicIdentifiers.add("RDN");
        publicIdentifiers.add("Readable");
        publicIdentifiers.add("ReadableByteChannel");
        publicIdentifiers.add("Reader");
        publicIdentifiers.add("ReaderUTF16");
        publicIdentifiers.add("ReaderUTF8");
        publicIdentifiers.add("ReaderUtil");
        publicIdentifiers.add("ReaderUtils");
        publicIdentifiers.add("ReadOnlyBufferException");
        publicIdentifiers.add("ReadOnlyFileSystemException");
        publicIdentifiers.add("ReadOnlyIterator");
        publicIdentifiers.add("ReadPendingException");
        publicIdentifiers.add("ReadResult");
        publicIdentifiers.add("ReadWriteLock");
        publicIdentifiers.add("Realm");
        publicIdentifiers.add("RealmCallback");
        publicIdentifiers.add("RealmChoiceCallback");
        publicIdentifiers.add("RealmException");
        publicIdentifiers.add("ReasonFlags");
        publicIdentifiers.add("Receiver");
        publicIdentifiers.add("ReceiverTypeData");
        publicIdentifiers.add("Record");
        publicIdentifiers.add("Record_attribute");
        publicIdentifiers.add("Record_attribute$ComponentInfo");
        publicIdentifiers.add("RecordComponentElement");
        publicIdentifiers.add("RecordComponentNode");
        publicIdentifiers.add("RecordComponentRemapper");
        publicIdentifiers.add("RecordComponentVisitor");
        publicIdentifiers.add("RecordedObject");
        publicIdentifiers.add("Rect");
        publicIdentifiers.add("Rectangle");
        publicIdentifiers.add("Rectangle2D");
        publicIdentifiers.add("Rectangle2D$Double");
        publicIdentifiers.add("Rectangle2D$Float");
        publicIdentifiers.add("RectangularShape");
        publicIdentifiers.add("RecursiveAction");
        publicIdentifiers.add("RecursiveTask");
        publicIdentifiers.add("ReentrantContext");
        publicIdentifiers.add("ReentrantContextProvider");
        publicIdentifiers.add("ReentrantContextProviderCLQ");
        publicIdentifiers.add("ReentrantContextProviderTL");
        publicIdentifiers.add("ReentrantLock");
        publicIdentifiers.add("ReentrantReadWriteLock");
        publicIdentifiers.add("ReentrantReadWriteLock$ReadLock");
        publicIdentifiers.add("ReentrantReadWriteLock$WriteLock");
        publicIdentifiers.add("Ref");
        publicIdentifiers.add("RefAddr");
        publicIdentifiers.add("Reference");
        publicIdentifiers.add("Referenceable");
        publicIdentifiers.add("ReferenceCountingDevice");
        publicIdentifiers.add("ReferenceData");
        publicIdentifiers.add("ReferenceFinder$Filter");
        publicIdentifiers.add("ReferenceFinder$Visitor");
        publicIdentifiers.add("ReferenceMap");
        publicIdentifiers.add("ReferenceNodeSetData");
        publicIdentifiers.add("ReferenceNotInitializedException");
        publicIdentifiers.add("ReferenceOctetStreamData");
        publicIdentifiers.add("ReferenceParser");
        publicIdentifiers.add("ReferenceParser$ParseException");
        publicIdentifiers.add("ReferenceParser$Reference");
        publicIdentifiers.add("ReferenceQueue");
        publicIdentifiers.add("ReferenceSubTreeData");
        publicIdentifiers.add("ReferenceTree");
        publicIdentifiers.add("ReferenceType");
        publicIdentifiers.add("ReferenceTypeImpl");
        publicIdentifiers.add("ReferenceUriSchemesSupported");
        publicIdentifiers.add("ReferenceWrapper");
        publicIdentifiers.add("ReferralException");
        publicIdentifiers.add("Reflection");
        publicIdentifiers.add("ReflectionException");
        publicIdentifiers.add("ReflectionFactory");
        publicIdentifiers.add("ReflectiveOperationException");
        publicIdentifiers.add("Refreshable");
        publicIdentifiers.add("RefreshFailedException");
        publicIdentifiers.add("RefType");
        publicIdentifiers.add("RegexMatcher");
        publicIdentifiers.add("Region");
        publicIdentifiers.add("RegionClipSpanIterator");
        publicIdentifiers.add("RegionIterator");
        publicIdentifiers.add("RegionNode");
        publicIdentifiers.add("RegionSpanIterator");
        publicIdentifiers.add("Register");
        publicIdentifiers.add("Register$RegisterCategory");
        publicIdentifiers.add("RegisterableService");
        publicIdentifiers.add("RegisterAttributes");
        publicIdentifiers.add("RegisterConfig");
        publicIdentifiers.add("Registered");
        publicIdentifiers.add("RegisteredDomain");
        publicIdentifiers.add("RegisterMap");
        publicIdentifiers.add("Registry");
        publicIdentifiers.add("RegistryContext");
        publicIdentifiers.add("RegistryContextFactory");
        publicIdentifiers.add("RegistryHandler");
        publicIdentifiers.add("RegistryImpl");
        publicIdentifiers.add("RegularExpression");
        publicIdentifiers.add("Reifier");
        publicIdentifiers.add("RejectedExecutionException");
        publicIdentifiers.add("RejectedExecutionHandler");
        publicIdentifiers.add("Relation");
        publicIdentifiers.add("Relational");
        publicIdentifiers.add("RelationException");
        publicIdentifiers.add("RelationNotFoundException");
        publicIdentifiers.add("RelationNotification");
        publicIdentifiers.add("RelationService");
        publicIdentifiers.add("RelationServiceMBean");
        publicIdentifiers.add("RelationServiceNotRegisteredException");
        publicIdentifiers.add("RelationSupport");
        publicIdentifiers.add("RelationSupportMBean");
        publicIdentifiers.add("RelationType");
        publicIdentifiers.add("RelationTypeNotFoundException");
        publicIdentifiers.add("RelationTypeSupport");
        publicIdentifiers.add("RelativePath");
        publicIdentifiers.add("RelativePath$RelativeDirectory");
        publicIdentifiers.add("RelativePath$RelativeFile");
        publicIdentifiers.add("ReliableLog");
        publicIdentifiers.add("ReliableLog$LogFile");
        publicIdentifiers.add("RelinkableCallSite");
        publicIdentifiers.add("Remapper");
        publicIdentifiers.add("RemappingAnnotationAdapter");
        publicIdentifiers.add("RemappingMethodAdapter");
        publicIdentifiers.add("Remote");
        publicIdentifiers.add("RemoteAARCH64Thread");
        publicIdentifiers.add("RemoteAARCH64ThreadContext");
        publicIdentifiers.add("RemoteAARCH64ThreadFactory");
        publicIdentifiers.add("RemoteAMD64Thread");
        publicIdentifiers.add("RemoteAMD64ThreadContext");
        publicIdentifiers.add("RemoteAMD64ThreadFactory");
        publicIdentifiers.add("RemoteCall");
        publicIdentifiers.add("RemoteDebugger");
        publicIdentifiers.add("RemoteDebuggerClient");
        publicIdentifiers.add("RemoteDebuggerServer");
        publicIdentifiers.add("RemoteException");
        publicIdentifiers.add("RemoteExecutionControl");
        publicIdentifiers.add("RemoteHost");
        publicIdentifiers.add("RemoteHostImpl");
        publicIdentifiers.add("RemoteMonitoredVm");
        publicIdentifiers.add("RemoteObject");
        publicIdentifiers.add("RemoteObjectInvocationHandler");
        publicIdentifiers.add("RemotePPC64Thread");
        publicIdentifiers.add("RemotePPC64ThreadContext");
        publicIdentifiers.add("RemotePPC64ThreadFactory");
        publicIdentifiers.add("RemoteRef");
        publicIdentifiers.add("RemoteReference");
        publicIdentifiers.add("RemoteRISCV64Thread");
        publicIdentifiers.add("RemoteRISCV64ThreadContext");
        publicIdentifiers.add("RemoteRISCV64ThreadFactory");
        publicIdentifiers.add("RemoteServer");
        publicIdentifiers.add("RemoteStub");
        publicIdentifiers.add("RemoteThread");
        publicIdentifiers.add("RemoteThreadFactory");
        publicIdentifiers.add("RemoteVm");
        publicIdentifiers.add("RemoteVmImpl");
        publicIdentifiers.add("RemoteVmManager");
        publicIdentifiers.add("RemoteX86Thread");
        publicIdentifiers.add("RemoteX86ThreadContext");
        publicIdentifiers.add("RemoteX86ThreadFactory");
        publicIdentifiers.add("RenderableImage");
        publicIdentifiers.add("RenderableImageOp");
        publicIdentifiers.add("RenderableImageProducer");
        publicIdentifiers.add("RenderBuffer");
        publicIdentifiers.add("RenderContext");
        publicIdentifiers.add("RenderedImage");
        publicIdentifiers.add("RenderedImageFactory");
        publicIdentifiers.add("Renderer");
        publicIdentifiers.add("RenderingEngine");
        publicIdentifiers.add("RenderingHints");
        publicIdentifiers.add("RenderingHints$Key");
        publicIdentifiers.add("RenderLoops");
        publicIdentifiers.add("RenderQueue");
        publicIdentifiers.add("RepaintArea");
        publicIdentifiers.add("RepaintManager");
        publicIdentifiers.add("Repeatable");
        publicIdentifiers.add("Replaceable");
        publicIdentifiers.add("ReplaceableString");
        publicIdentifiers.add("ReplaceableUCharacterIterator");
        publicIdentifiers.add("ReplayCache");
        publicIdentifiers.add("ReplicateScaleFilter");
        publicIdentifiers.add("Reporter");
        publicIdentifiers.add("Repository");
        publicIdentifiers.add("Repository$RegistrationContext");
        publicIdentifiers.add("Request");
        publicIdentifiers.add("RequestFocusController");
        publicIdentifiers.add("RequestPublishers$ByteArrayPublisher");
        publicIdentifiers.add("RequestPublishers$EmptyPublisher");
        publicIdentifiers.add("RequestPublishers$FilePublisher");
        publicIdentifiers.add("RequestPublishers$InputStreamPublisher");
        publicIdentifiers.add("RequestPublishers$IterablePublisher");
        publicIdentifiers.add("RequestPublishers$StreamIterator");
        publicIdentifiers.add("RequestPublishers$StringPublisher");
        publicIdentifiers.add("RequiredModelMBean");
        publicIdentifiers.add("RequiresTree");
        publicIdentifiers.add("RescaleOp");
        publicIdentifiers.add("ReservedStackAccess");
        publicIdentifiers.add("ResetFrame");
        publicIdentifiers.add("ResolutionException");
        publicIdentifiers.add("ResolutionSyntax");
        publicIdentifiers.add("Resolve");
        publicIdentifiers.add("Resolve$InapplicableMethodException");
        publicIdentifiers.add("Resolve$RecoveryLoadClass");
        publicIdentifiers.add("ResolvedJavaField");
        publicIdentifiers.add("ResolvedJavaMethod");
        publicIdentifiers.add("ResolvedJavaMethod$Parameter");
        publicIdentifiers.add("ResolvedJavaType");
        publicIdentifiers.add("ResolveListener");
        publicIdentifiers.add("Resolver");
        publicIdentifiers.add("ResolverAnonymous");
        publicIdentifiers.add("ResolverConfiguration");
        publicIdentifiers.add("ResolverConfiguration$Options");
        publicIdentifiers.add("ResolverDirectHTTP");
        publicIdentifiers.add("ResolveResult");
        publicIdentifiers.add("ResolverFragment");
        publicIdentifiers.add("ResolverLocalFilesystem");
        publicIdentifiers.add("ResolverXPointer");
        publicIdentifiers.add("Resource");
        publicIdentifiers.add("ResourceBundle");
        publicIdentifiers.add("ResourceBundle$Control");
        publicIdentifiers.add("ResourceBundleBasedAdapter");
        publicIdentifiers.add("ResourceBundleControlProvider");
        publicIdentifiers.add("ResourceBundleEnumeration");
        publicIdentifiers.add("ResourceBundleProvider");
        publicIdentifiers.add("ResourceDecompressor");
        publicIdentifiers.add("ResourceDecompressor$StringsProvider");
        publicIdentifiers.add("ResourceDecompressorFactory");
        publicIdentifiers.add("ResourceFilter");
        publicIdentifiers.add("ResourceIOException");
        publicIdentifiers.add("ResourceLocator");
        publicIdentifiers.add("ResourceManager");
        publicIdentifiers.add("ResourcePool");
        publicIdentifiers.add("ResourcePoolBuilder");
        publicIdentifiers.add("ResourcePoolEntry");
        publicIdentifiers.add("ResourcePoolManager");
        publicIdentifiers.add("ResourcePoolManager$ResourcePoolImpl");
        publicIdentifiers.add("ResourcePoolModule");
        publicIdentifiers.add("ResourcePoolModuleView");
        publicIdentifiers.add("ResourcePrevisitor");
        publicIdentifiers.add("ResourceRecord");
        publicIdentifiers.add("ResourceResolver");
        publicIdentifiers.add("ResourceResolverContext");
        publicIdentifiers.add("ResourceResolverException");
        publicIdentifiers.add("ResourceResolverSpi");
        publicIdentifiers.add("Resources");
        publicIdentifiers.add("Resources_de");
        publicIdentifiers.add("Resources_ja");
        publicIdentifiers.add("ResourcesMgr");
        publicIdentifiers.add("Resources_zh_CN");
        publicIdentifiers.add("ResponseBodyHandlers$FileDownloadBodyHandler");
        publicIdentifiers.add("ResponseBodyHandlers$PathBodyHandler");
        publicIdentifiers.add("ResponseBodyHandlers$PushPromisesHandlerWithMap");
        publicIdentifiers.add("ResponseCache");
        publicIdentifiers.add("ResponseSubscribers");
        publicIdentifiers.add("ResponseSubscribers$ByteArraySubscriber");
        publicIdentifiers.add("ResponseSubscribers$ConsumerSubscriber");
        publicIdentifiers.add("ResponseSubscribers$HttpResponseInputStream");
        publicIdentifiers.add("ResponseSubscribers$MappingSubscriber");
        publicIdentifiers.add("ResponseSubscribers$NullSubscriber");
        publicIdentifiers.add("ResponseSubscribers$PathSubscriber");
        publicIdentifiers.add("ResponseSubscribers$TrustedSubscriber");
        publicIdentifiers.add("ResponseTimerEvent");
        publicIdentifiers.add("Result");
        publicIdentifiers.add("ResultContainer");
        publicIdentifiers.add("ResultSet");
        publicIdentifiers.add("ResultSetMetaData");
        publicIdentifiers.add("ResultTypeFinder");
        publicIdentifiers.add("RET");
        publicIdentifiers.add("RetData");
        publicIdentifiers.add("Retention");
        publicIdentifiers.add("RetrievalMethod");
        publicIdentifiers.add("RetrievalMethodResolver");
        publicIdentifiers.add("RETURN");
        publicIdentifiers.add("ReturnaddressType");
        publicIdentifiers.add("ReturnInstruction");
        publicIdentifiers.add("ReturnTaglet");
        publicIdentifiers.add("ReturnTree");
        publicIdentifiers.add("ReturnType");
        publicIdentifiers.add("ReturnTypeEntry");
        publicIdentifiers.add("RevalidationHandler");
        publicIdentifiers.add("ReverbType");
        publicIdentifiers.add("ReverseAxesWalker");
        publicIdentifiers.add("ReversePtrs");
        publicIdentifiers.add("ReversePtrsAnalysis");
        publicIdentifiers.add("RevPtrsTreeNodeAdapter");
        publicIdentifiers.add("RFC2253Parser");
        publicIdentifiers.add("RFC822Name");
        publicIdentifiers.add("RGBColor");
        publicIdentifiers.add("RGBImageFilter");
        publicIdentifiers.add("RichDiagnosticFormatter");
        publicIdentifiers.add("RichDiagnosticFormatter$ClassNameSimplifier");
        publicIdentifiers.add("RichDiagnosticFormatter$RichConfiguration");
        publicIdentifiers.add("RichDiagnosticFormatter$RichPrinter");
        publicIdentifiers.add("RISCV64");
        publicIdentifiers.add("RISCV64CurrentFrameGuess");
        publicIdentifiers.add("RISCV64Frame");
        publicIdentifiers.add("RISCV64HotSpotJVMCIBackendFactory");
        publicIdentifiers.add("RISCV64HotSpotRegisterConfig");
        publicIdentifiers.add("RISCV64JavaCallWrapper");
        publicIdentifiers.add("RISCV64RegisterMap");
        publicIdentifiers.add("RISCV64ThreadContext");
        publicIdentifiers.add("RMIClassLoader");
        publicIdentifiers.add("RMIClassLoaderSpi");
        publicIdentifiers.add("RMIClientSocketFactory");
        publicIdentifiers.add("RMIConnection");
        publicIdentifiers.add("RMIConnectionImpl");
        publicIdentifiers.add("RMIConnector");
        publicIdentifiers.add("RMIConnectorServer");
        publicIdentifiers.add("RMIExporter");
        publicIdentifiers.add("RMIFailureHandler");
        publicIdentifiers.add("RMIHelper");
        publicIdentifiers.add("RMIIIOPServerImpl");
        publicIdentifiers.add("RMIJRMPServerImpl");
        publicIdentifiers.add("RMISecurityException");
        publicIdentifiers.add("RMISecurityManager");
        publicIdentifiers.add("RMIServer");
        publicIdentifiers.add("RMIServerImpl");
        publicIdentifiers.add("RMIServerSocketFactory");
        publicIdentifiers.add("RMISocketFactory");
        publicIdentifiers.add("rmiURLContext");
        publicIdentifiers.add("rmiURLContext$Parser");
        publicIdentifiers.add("rmiURLContextFactory");
        publicIdentifiers.add("Robot");
        publicIdentifiers.add("RobotPeer");
        publicIdentifiers.add("RobustOopDeterminator");
        publicIdentifiers.add("Role");
        publicIdentifiers.add("RoleInfo");
        publicIdentifiers.add("RoleInfoNotFoundException");
        publicIdentifiers.add("RoleList");
        publicIdentifiers.add("RoleNotFoundException");
        publicIdentifiers.add("RoleResult");
        publicIdentifiers.add("RoleStatus");
        publicIdentifiers.add("RoleUnresolved");
        publicIdentifiers.add("RoleUnresolvedList");
        publicIdentifiers.add("RootNode");
        publicIdentifiers.add("RootPaneContainer");
        publicIdentifiers.add("RootPaneUI");
        publicIdentifiers.add("RootTreeNodeAdapter");
        publicIdentifiers.add("RoundEnvironment");
        publicIdentifiers.add("RoundRectangle2D");
        publicIdentifiers.add("RoundRectangle2D$Double");
        publicIdentifiers.add("RoundRectangle2D$Float");
        publicIdentifiers.add("Row");
        publicIdentifiers.add("RowClosure");
        publicIdentifiers.add("RowFilter");
        publicIdentifiers.add("RowFilter$Entry");
        publicIdentifiers.add("RowId");
        publicIdentifiers.add("RowMapper");
        publicIdentifiers.add("Rows");
        publicIdentifiers.add("RowSet");
        publicIdentifiers.add("RowSetEvent");
        publicIdentifiers.add("RowSetFactory");
        publicIdentifiers.add("RowSetInternal");
        publicIdentifiers.add("RowSetListener");
        publicIdentifiers.add("RowSetMetaData");
        publicIdentifiers.add("RowSetMetaDataImpl");
        publicIdentifiers.add("RowSetProvider");
        publicIdentifiers.add("RowSetReader");
        publicIdentifiers.add("RowSetWarning");
        publicIdentifiers.add("RowSetWriter");
        publicIdentifiers.add("RowSorter");
        publicIdentifiers.add("RowSorter$SortKey");
        publicIdentifiers.add("RowSorterEvent");
        publicIdentifiers.add("RowSorterListener");
        publicIdentifiers.add("RSAKey");
        publicIdentifiers.add("RSAKeyFactory");
        publicIdentifiers.add("RSAKeyGenParameterSpec");
        publicIdentifiers.add("RSAKeyValue");
        publicIdentifiers.add("RSAKeyValueResolver");
        publicIdentifiers.add("RSAMultiPrimePrivateCrtKey");
        publicIdentifiers.add("RSAMultiPrimePrivateCrtKeySpec");
        publicIdentifiers.add("RSAOtherPrimeInfo");
        publicIdentifiers.add("RSAPrivateCrtKey");
        publicIdentifiers.add("RSAPrivateCrtKeySpec");
        publicIdentifiers.add("RSAPrivateKey");
        publicIdentifiers.add("RSAPrivateKeySpec");
        publicIdentifiers.add("RSAPSSSignature");
        publicIdentifiers.add("RSAPublicKey");
        publicIdentifiers.add("RSAPublicKeySpec");
        publicIdentifiers.add("RSAUtil");
        publicIdentifiers.add("RTFEditorKit");
        publicIdentifiers.add("RTFIterator");
        publicIdentifiers.add("RuleBasedBreakIterator");
        publicIdentifiers.add("RuleBasedCollator");
        publicIdentifiers.add("Runnable");
        publicIdentifiers.add("RunnableFuture");
        publicIdentifiers.add("RunnableScheduledFuture");
        publicIdentifiers.add("Runtime");
        publicIdentifiers.add("Runtime1");
        publicIdentifiers.add("RuntimeAnnotations_attribute");
        publicIdentifiers.add("RuntimeBlob");
        publicIdentifiers.add("RuntimeErrorException");
        publicIdentifiers.add("RuntimeException");
        publicIdentifiers.add("RuntimeInvisibleAnnotations");
        publicIdentifiers.add("RuntimeInvisibleAnnotations_attribute");
        publicIdentifiers.add("RuntimeInvisibleParameterAnnotations");
        publicIdentifiers.add("RuntimeInvisibleParameterAnnotations_attribute");
        publicIdentifiers.add("RuntimeInvisibleTypeAnnotations_attribute");
        publicIdentifiers.add("RuntimeMBeanException");
        publicIdentifiers.add("RuntimeMXBean");
        publicIdentifiers.add("RuntimeOperationsException");
        publicIdentifiers.add("RuntimeParameterAnnotations_attribute");
        publicIdentifiers.add("RuntimePermission");
        publicIdentifiers.add("RuntimeStub");
        publicIdentifiers.add("RuntimeTypeAnnotations_attribute");
        publicIdentifiers.add("RuntimeUtil$GetInstanceAction");
        publicIdentifiers.add("Runtime.Version");
        publicIdentifiers.add("RuntimeVisibleAnnotations");
        publicIdentifiers.add("RuntimeVisibleAnnotations_attribute");
        publicIdentifiers.add("RuntimeVisibleParameterAnnotations");
        publicIdentifiers.add("RuntimeVisibleParameterAnnotations_attribute");
        publicIdentifiers.add("RuntimeVisibleTypeAnnotations_attribute");
    }

    private void addPublicIdentifiersSS() {
        publicIdentifiers.add("Short");
        publicIdentifiers.add("StackTraceElement");
        publicIdentifiers.add("StackWalker");
        publicIdentifiers.add("StackWalker.Option");
        publicIdentifiers.add("StackWalker.StackFrame");
        publicIdentifiers.add("StrictMath");
        publicIdentifiers.add("StringBuffer");
        publicIdentifiers.add("StringBuilder");
        publicIdentifiers.add("System");
        publicIdentifiers.add("System.Logger");
        publicIdentifiers.add("System.Logger.Level");
        publicIdentifiers.add("System.LoggerFinder");
        publicIdentifiers.add("SAEditorPane");
        publicIdentifiers.add("SafepointBlob");
        publicIdentifiers.add("SafePointNode");
        publicIdentifiers.add("SafeThread");
        publicIdentifiers.add("SafeVarargs");
        publicIdentifiers.add("SAGetopt");
        publicIdentifiers.add("SAGetoptException");
        publicIdentifiers.add("SALauncher");
        publicIdentifiers.add("SALauncherLoader");
        publicIdentifiers.add("SAListener");
        publicIdentifiers.add("SALOAD");
        publicIdentifiers.add("SampleModel");
        publicIdentifiers.add("SAPanel");
        publicIdentifiers.add("Sasl");
        publicIdentifiers.add("SaslClient");
        publicIdentifiers.add("SaslClientFactory");
        publicIdentifiers.add("SaslException");
        publicIdentifiers.add("SaslInputStream");
        publicIdentifiers.add("SaslServer");
        publicIdentifiers.add("SaslServerFactory");
        publicIdentifiers.add("SASTORE");
        publicIdentifiers.add("SaveAction");
        publicIdentifiers.add("SaveAsAction");
        publicIdentifiers.add("Savepoint");
        publicIdentifiers.add("SAX2DOM");
        publicIdentifiers.add("SAX2DTM");
        publicIdentifiers.add("SAX2DTM2");
        publicIdentifiers.add("SAX2DTM2$AncestorIterator");
        publicIdentifiers.add("SAX2DTM2$DescendantIterator");
        publicIdentifiers.add("SAX2DTM2$FollowingIterator");
        publicIdentifiers.add("SAX2DTM2$FollowingSiblingIterator");
        publicIdentifiers.add("SAX2DTM2$PrecedingIterator");
        publicIdentifiers.add("SAX2DTM2$PrecedingSiblingIterator");
        publicIdentifiers.add("SAX2DTM2$TypedRootIterator");
        publicIdentifiers.add("SAX2RTFDTM");
        publicIdentifiers.add("SAX2StAXBaseWriter");
        publicIdentifiers.add("SAX2StAXEventWriter");
        publicIdentifiers.add("SAX2StAXStreamWriter");
        publicIdentifiers.add("SAX2XNI");
        publicIdentifiers.add("SAXException");
        publicIdentifiers.add("SAXImpl$TypedNamespaceIterator");
        publicIdentifiers.add("SAXMessageFormatter");
        publicIdentifiers.add("SAXNotRecognizedException");
        publicIdentifiers.add("SAXNotSupportedException");
        publicIdentifiers.add("SAXParseException");
        publicIdentifiers.add("SAXParser");
        publicIdentifiers.add("SAXParserFactory");
        publicIdentifiers.add("SAXParserFactoryImpl");
        publicIdentifiers.add("SAXParserImpl");
        publicIdentifiers.add("SAXParserImpl$JAXPSAXParser");
        publicIdentifiers.add("SAXResult");
        publicIdentifiers.add("SAXSource");
        publicIdentifiers.add("SAXSourceLocator");
        publicIdentifiers.add("SAXTransformerFactory");
        publicIdentifiers.add("Scale");
        publicIdentifiers.add("ScaledBlit");
        publicIdentifiers.add("Scan");
        publicIdentifiers.add("Scanner");
        publicIdentifiers.add("ScannerFactory");
        publicIdentifiers.add("ScatteringByteChannel");
        publicIdentifiers.add("SCDynamicStoreConfig");
        publicIdentifiers.add("ScheduledExecutorService");
        publicIdentifiers.add("ScheduledFuture");
        publicIdentifiers.add("ScheduledThreadPoolExecutor");
        publicIdentifiers.add("Schema");
        publicIdentifiers.add("SchemaDateTimeException");
        publicIdentifiers.add("SchemaDOM");
        publicIdentifiers.add("SchemaDOMParser");
        publicIdentifiers.add("SchemaDVFactory");
        publicIdentifiers.add("SchemaDVFactoryImpl");
        publicIdentifiers.add("SchemaFactory");
        publicIdentifiers.add("SchemaFactoryLoader");
        publicIdentifiers.add("SchemaGrammar");
        publicIdentifiers.add("SchemaGrammar$BuiltinSchemaGrammar");
        publicIdentifiers.add("SchemaNamespaceSupport");
        publicIdentifiers.add("SchemaParsingConfig");
        publicIdentifiers.add("SchemaViolationException");
        publicIdentifiers.add("Scope");
        publicIdentifiers.add("Scope$CompoundScope");
        publicIdentifiers.add("Scope$ErrorScope");
        publicIdentifiers.add("Scope$ImportFilter");
        publicIdentifiers.add("Scope$ImportScope");
        publicIdentifiers.add("Scope$NamedImportScope");
        publicIdentifiers.add("Scope$ScopeListener");
        publicIdentifiers.add("Scope$ScopeListenerList");
        publicIdentifiers.add("Scope$StarImportScope");
        publicIdentifiers.add("Scope$WriteableScope");
        publicIdentifiers.add("ScopeDesc");
        publicIdentifiers.add("ScopedMemoryAccess");
        publicIdentifiers.add("ScopedValueContainer");
        publicIdentifiers.add("ScopeValue");
        publicIdentifiers.add("Screen");
        publicIdentifiers.add("ScreenSleepListener");
        publicIdentifiers.add("Script");
        publicIdentifiers.add("ScriptContext");
        publicIdentifiers.add("ScriptEngine");
        publicIdentifiers.add("ScriptEngineFactory");
        publicIdentifiers.add("ScriptEngineManager");
        publicIdentifiers.add("ScriptException");
        publicIdentifiers.add("Scrollable");
        publicIdentifiers.add("Scrollbar");
        publicIdentifiers.add("Scrollbar$AccessibleAWTScrollBar");
        publicIdentifiers.add("ScrollbarPeer");
        publicIdentifiers.add("ScrollBarUI");
        publicIdentifiers.add("ScrollPane");
        publicIdentifiers.add("ScrollPane$AccessibleAWTScrollPane");
        publicIdentifiers.add("ScrollPaneConstants");
        publicIdentifiers.add("ScrollPaneLayout");
        publicIdentifiers.add("ScrollPaneLayout$UIResource");
        publicIdentifiers.add("ScrollPanePeer");
        publicIdentifiers.add("ScrollPaneUI");
        publicIdentifiers.add("ScrollPaneWheelScroller");
        publicIdentifiers.add("SctpChannel");
        publicIdentifiers.add("SctpChannelImpl");
        publicIdentifiers.add("SctpMultiChannel");
        publicIdentifiers.add("SctpMultiChannelImpl");
        publicIdentifiers.add("SctpNet");
        publicIdentifiers.add("SctpServerChannel");
        publicIdentifiers.add("SctpServerChannelImpl");
        publicIdentifiers.add("SctpSocketOption");
        publicIdentifiers.add("SctpStandardSocketOptions");
        publicIdentifiers.add("SctpStandardSocketOptions$InitMaxStreams");
        publicIdentifiers.add("SctpStdSocketOption");
        publicIdentifiers.add("SdpProvider");
        publicIdentifiers.add("SealedObject");
        publicIdentifiers.add("SearchControls");
        publicIdentifiers.add("SearchFilter");
        publicIdentifiers.add("SearchResult");
        publicIdentifiers.add("SearchWriter");
        publicIdentifiers.add("SecondaryLoop");
        publicIdentifiers.add("SecretKey");
        publicIdentifiers.add("SecretKeyFactory");
        publicIdentifiers.add("SecretKeyFactorySpi");
        publicIdentifiers.add("SecretKeyResolver");
        publicIdentifiers.add("SecretKeySpec");
        publicIdentifiers.add("SectionFlags");
        publicIdentifiers.add("SectionHeader");
        publicIdentifiers.add("SecureCacheResponse");
        publicIdentifiers.add("SecureClassLoader");
        publicIdentifiers.add("SecureDirectoryStream");
        publicIdentifiers.add("SecureLookupSupplier");
        publicIdentifiers.add("SecureRandom");
        publicIdentifiers.add("SecureRandomParameters");
        publicIdentifiers.add("SecureRandomSpi");
        publicIdentifiers.add("SecurityConfiguration");
        publicIdentifiers.add("SecurityException");
        publicIdentifiers.add("SecurityManager");
        publicIdentifiers.add("SecurityProperties");
        publicIdentifiers.add("SecuritySupport");
        publicIdentifiers.add("SeekableByteChannel");
        publicIdentifiers.add("SeeTaglet");
        publicIdentifiers.add("SeeTree");
        publicIdentifiers.add("Segment");
        publicIdentifiers.add("SegmentAllocator");
        publicIdentifiers.add("SegmentScope");
        publicIdentifiers.add("SelChImpl");
        publicIdentifiers.add("Select");
        publicIdentifiers.add("SelectableChannel");
        publicIdentifiers.add("SelectionKey");
        publicIdentifiers.add("Selector");
        publicIdentifiers.add("Selector$Matcher");
        publicIdentifiers.add("Selector$XPath");
        publicIdentifiers.add("SelectorImpl");
        publicIdentifiers.add("SelectorProvider");
        publicIdentifiers.add("SelectorProviderImpl");
        publicIdentifiers.add("SelfIteratorNoPredicate");
        publicIdentifiers.add("Semaphore");
        publicIdentifiers.add("SendFailed");
        publicIdentifiers.add("SendFailedNotification");
        publicIdentifiers.add("Sensor");
        publicIdentifiers.add("SeparatorUI");
        publicIdentifiers.add("SeqNumber");
        publicIdentifiers.add("Sequence");
        publicIdentifiers.add("SequenceInputStream");
        publicIdentifiers.add("SequenceLayout");
        publicIdentifiers.add("Sequencer");
        publicIdentifiers.add("Sequencer$SyncMode");
        publicIdentifiers.add("SequentialScheduler$CompleteRestartableTask");
        publicIdentifiers.add("SequentialScheduler$DeferredCompleter");
        publicIdentifiers.add("SequentialScheduler$RestartableTask");
        publicIdentifiers.add("Serial");
        publicIdentifiers.add("SerialArray");
        publicIdentifiers.add("SerialBlob");
        publicIdentifiers.add("SerialClob");
        publicIdentifiers.add("SerialDatalink");
        publicIdentifiers.add("SerialDataTree");
        publicIdentifiers.add("SerialException");
        publicIdentifiers.add("SerialFieldTree");
        publicIdentifiers.add("SerialHeap");
        publicIdentifiers.add("Serializable");
        publicIdentifiers.add("SerializableConstant");
        publicIdentifiers.add("SerializableLocatorImpl");
        publicIdentifiers.add("SerializationHandler");
        publicIdentifiers.add("SerializedFormBuilder");
        publicIdentifiers.add("SerializedFormWriter");
        publicIdentifiers.add("SerializedFormWriter$SerialFieldWriter");
        publicIdentifiers.add("SerializedFormWriter$SerialMethodWriter");
        publicIdentifiers.add("SerializedFormWriterImpl");
        publicIdentifiers.add("Serializer");
        publicIdentifiers.add("SerializerBase");
        publicIdentifiers.add("SerializerFactory");
        publicIdentifiers.add("SerializerMessages");
        publicIdentifiers.add("SerializerMessages_de");
        publicIdentifiers.add("SerializerMessages_ja");
        publicIdentifiers.add("SerializerMessages_zh_CN");
        publicIdentifiers.add("SerializerTrace");
        publicIdentifiers.add("SerialJavaObject");
        publicIdentifiers.add("SerialNumber");
        publicIdentifiers.add("SerialRef");
        publicIdentifiers.add("SerialStruct");
        publicIdentifiers.add("SerialTree");
        publicIdentifiers.add("SerialVer");
        publicIdentifiers.add("SerialVersionUIDAdder");
        publicIdentifiers.add("Server");
        publicIdentifiers.add("ServerCloneException");
        publicIdentifiers.add("ServerCommunicatorAdmin");
        publicIdentifiers.add("ServerError");
        publicIdentifiers.add("ServerException");
        publicIdentifiers.add("ServerNotActiveException");
        publicIdentifiers.add("ServerNotifForwarder");
        publicIdentifiers.add("ServerProvider");
        publicIdentifiers.add("ServerRef");
        publicIdentifiers.add("ServerRuntimeException");
        publicIdentifiers.add("ServerSocket");
        publicIdentifiers.add("ServerSocketChannel");
        publicIdentifiers.add("ServerSocketFactory");
        publicIdentifiers.add("ServiceConfigurationError");
        publicIdentifiers.add("ServiceDialog");
        publicIdentifiers.add("ServiceLoader$Provider");
        publicIdentifiers.add("ServiceName");
        publicIdentifiers.add("ServiceNotFoundException");
        publicIdentifiers.add("ServiceRegistry");
        publicIdentifiers.add("ServiceRegistry$Filter");
        publicIdentifiers.add("ServiceThread");
        publicIdentifiers.add("ServiceUI");
        publicIdentifiers.add("ServiceUIFactory");
        publicIdentifiers.add("ServiceUnavailableException");
        publicIdentifiers.add("Set");
        publicIdentifiers.add("SetOfIntegerSyntax");
        publicIdentifiers.add("SettingControl");
        publicIdentifiers.add("SettingDefinition");
        publicIdentifiers.add("SettingsFrame");
        publicIdentifiers.add("SF2Region");
        publicIdentifiers.add("Shape");
        publicIdentifiers.add("ShapeDrawPipe");
        publicIdentifiers.add("ShardingKey");
        publicIdentifiers.add("ShardingKeyBuilder");
        publicIdentifiers.add("SharedHotSpotSpeculationLog");
        publicIdentifiers.add("SharedNameTable");
        publicIdentifiers.add("SharedSecrets");
        publicIdentifiers.add("SharedThreadContainer");
        publicIdentifiers.add("ShellFolder");
        publicIdentifiers.add("ShellFolder$Invoker");
        publicIdentifiers.add("ShellFolderColumnInfo");
        publicIdentifiers.add("ShenandoahBitMap");
        publicIdentifiers.add("ShenandoahHeap");
        publicIdentifiers.add("ShenandoahHeapRegion");
        publicIdentifiers.add("ShortBandedRaster");
        publicIdentifiers.add("ShortBuffer");
        publicIdentifiers.add("ShortBufferException");
        publicIdentifiers.add("ShortComponentRaster");
        publicIdentifiers.add("ShortEditor");
        publicIdentifiers.add("ShortField");
        publicIdentifiers.add("ShortInterleavedRaster");
        publicIdentifiers.add("ShortList");
        publicIdentifiers.add("ShortLookupTable");
        publicIdentifiers.add("ShortMessage");
        publicIdentifiers.add("ShortSignature");
        publicIdentifiers.add("ShortType");
        publicIdentifiers.add("ShortTypeImpl");
        publicIdentifiers.add("ShortValue");
        publicIdentifiers.add("ShortValueImpl");
        publicIdentifiers.add("ShortVector");
        publicIdentifiers.add("ShowAction");
        publicIdentifiers.add("Shutdown");
        publicIdentifiers.add("ShutdownChannelGroupException");
        publicIdentifiers.add("ShutdownHooks$Task");
        publicIdentifiers.add("ShutdownNotification");
        publicIdentifiers.add("Signal$Handler");
        publicIdentifiers.add("SignalHandler");
        publicIdentifiers.add("Signature");
        publicIdentifiers.add("Signature11ElementProxy");
        publicIdentifiers.add("SignatureAlgorithm");
        publicIdentifiers.add("SignatureAlgorithmSpi");
        publicIdentifiers.add("Signature_attribute");
        publicIdentifiers.add("SignatureBaseRSA");
        publicIdentifiers.add("SignatureBaseRSA$SignatureRSAMD5");
        publicIdentifiers.add("SignatureBaseRSA$SignatureRSARIPEMD160");
        publicIdentifiers.add("SignatureBaseRSA$SignatureRSASHA1");
        publicIdentifiers.add("SignatureBaseRSA$SignatureRSASHA1MGF1");
        publicIdentifiers.add("SignatureBaseRSA$SignatureRSASHA224");
        publicIdentifiers.add("SignatureBaseRSA$SignatureRSASHA224MGF1");
        publicIdentifiers.add("SignatureBaseRSA$SignatureRSASHA256");
        publicIdentifiers.add("SignatureBaseRSA$SignatureRSASHA256MGF1");
        publicIdentifiers.add("SignatureBaseRSA$SignatureRSASHA3_224MGF1");
        publicIdentifiers.add("SignatureBaseRSA$SignatureRSASHA3_256MGF1");
        publicIdentifiers.add("SignatureBaseRSA$SignatureRSASHA3_384MGF1");
        publicIdentifiers.add("SignatureBaseRSA$SignatureRSASHA3_512MGF1");
        publicIdentifiers.add("SignatureBaseRSA$SignatureRSASHA384");
        publicIdentifiers.add("SignatureBaseRSA$SignatureRSASHA384MGF1");
        publicIdentifiers.add("SignatureBaseRSA$SignatureRSASHA512");
        publicIdentifiers.add("SignatureBaseRSA$SignatureRSASHA512MGF1");
        publicIdentifiers.add("SignatureBaseRSA$SignatureRSASSAPSS");
        publicIdentifiers.add("SignatureConverter");
        publicIdentifiers.add("SignatureDSA");
        publicIdentifiers.add("SignatureDSA$SHA256");
        publicIdentifiers.add("SignatureECDSA");
        publicIdentifiers.add("SignatureECDSA$SignatureECDSARIPEMD160");
        publicIdentifiers.add("SignatureECDSA$SignatureECDSASHA1");
        publicIdentifiers.add("SignatureECDSA$SignatureECDSASHA224");
        publicIdentifiers.add("SignatureECDSA$SignatureECDSASHA256");
        publicIdentifiers.add("SignatureECDSA$SignatureECDSASHA384");
        publicIdentifiers.add("SignatureECDSA$SignatureECDSASHA512");
        publicIdentifiers.add("SignatureElementProxy");
        publicIdentifiers.add("SignatureException");
        publicIdentifiers.add("SignatureFileVerifier");
        publicIdentifiers.add("SignatureInfo");
        publicIdentifiers.add("SignatureIterator");
        publicIdentifiers.add("SignatureMethod");
        publicIdentifiers.add("SignatureMethodParameterSpec");
        publicIdentifiers.add("SignatureParser");
        publicIdentifiers.add("SignatureParser$ParseResult");
        publicIdentifiers.add("SignatureProperties");
        publicIdentifiers.add("SignatureProperty");
        publicIdentifiers.add("SignatureReader");
        publicIdentifiers.add("SignatureRemapper");
        publicIdentifiers.add("Signatures");
        publicIdentifiers.add("SignatureSpi");
        publicIdentifiers.add("SignatureUtil");
        publicIdentifiers.add("SignatureUtil$EdDSADigestAlgHolder");
        publicIdentifiers.add("SignatureVisitor");
        publicIdentifiers.add("SignatureWriter");
        publicIdentifiers.add("SignedInfo");
        publicIdentifiers.add("Signer");
        publicIdentifiers.add("SignerInfo");
        publicIdentifiers.add("SignerOutputStream");
        publicIdentifiers.add("SimpleAnnotationValueVisitor14");
        publicIdentifiers.add("SimpleAnnotationValueVisitor6");
        publicIdentifiers.add("SimpleAnnotationValueVisitor7");
        publicIdentifiers.add("SimpleAnnotationValueVisitor8");
        publicIdentifiers.add("SimpleAnnotationValueVisitor9");
        publicIdentifiers.add("SimpleAsynchronousFileChannelImpl");
        publicIdentifiers.add("SimpleAttributeSet");
        publicIdentifiers.add("SimpleBeanInfo");
        publicIdentifiers.add("SimpleBindings");
        publicIdentifiers.add("SimpleClassTypeSignature");
        publicIdentifiers.add("SimpleConsoleLogger");
        publicIdentifiers.add("SimpleContentModel");
        publicIdentifiers.add("SimpleDateFormat");
        publicIdentifiers.add("SimpleDocletException");
        publicIdentifiers.add("SimpleDocTreeVisitor");
        publicIdentifiers.add("SimpleElementValue");
        publicIdentifiers.add("SimpleElementValueGen");
        publicIdentifiers.add("SimpleElementVisitor14");
        publicIdentifiers.add("SimpleElementVisitor6");
        publicIdentifiers.add("SimpleElementVisitor7");
        publicIdentifiers.add("SimpleElementVisitor8");
        publicIdentifiers.add("SimpleElementVisitor9");
        publicIdentifiers.add("SimpleEUCEncoder");
        publicIdentifiers.add("SimpleFileVisitor");
        publicIdentifiers.add("SimpleFormatter");
        publicIdentifiers.add("SimpleInputMethodWindow");
        publicIdentifiers.add("SimpleInstrument");
        publicIdentifiers.add("SimpleJavaFileObject");
        publicIdentifiers.add("SimpleLinkRequest");
        publicIdentifiers.add("SimpleLocator");
        publicIdentifiers.add("SimpleOptionNameMap");
        publicIdentifiers.add("SimpleRelinkableCallSite");
        publicIdentifiers.add("SimpleRemapper");
        publicIdentifiers.add("SimpleRenderedImage");
        publicIdentifiers.add("SimpleResultTreeImpl");
        publicIdentifiers.add("SimpleScriptContext");
        publicIdentifiers.add("SimpleSoundbank");
        publicIdentifiers.add("SimpleTaglet");
        publicIdentifiers.add("SimpleTimeZone");
        publicIdentifiers.add("SimpleTreeGroupNode");
        publicIdentifiers.add("SimpleTreeModel");
        publicIdentifiers.add("SimpleTreeNode");
        publicIdentifiers.add("SimpleTreeTableModel");
        publicIdentifiers.add("SimpleTreeVisitor");
        publicIdentifiers.add("SimpleTypeVisitor14");
        publicIdentifiers.add("SimpleTypeVisitor6");
        publicIdentifiers.add("SimpleTypeVisitor7");
        publicIdentifiers.add("SimpleTypeVisitor8");
        publicIdentifiers.add("SimpleTypeVisitor9");
        publicIdentifiers.add("SimpleVerifier");
        publicIdentifiers.add("SinceTree");
        publicIdentifiers.add("SingleByte");
        publicIdentifiers.add("SingleCertificateResolver");
        publicIdentifiers.add("SingleEntryRegistry");
        publicIdentifiers.add("SingleKeyResolver");
        publicIdentifiers.add("SingleNodeCounter");
        publicIdentifiers.add("SinglePixelPackedSampleModel");
        publicIdentifiers.add("SingleSelectionModel");
        publicIdentifiers.add("SingleTileRenderedImage");
        publicIdentifiers.add("SingletonBlob");
        publicIdentifiers.add("SingletonIterator");
        publicIdentifiers.add("Sink$ChainedDouble");
        publicIdentifiers.add("Sink$ChainedInt");
        publicIdentifiers.add("Sink$ChainedLong");
        publicIdentifiers.add("Sink$ChainedReference");
        publicIdentifiers.add("Sink$OfDouble");
        publicIdentifiers.add("Sink$OfInt");
        publicIdentifiers.add("Sink$OfLong");
        publicIdentifiers.add("SIPUSH");
        publicIdentifiers.add("Site");
        publicIdentifiers.add("Size");
        publicIdentifiers.add("Size2DSyntax");
        publicIdentifiers.add("SizeLimitExceededException");
        publicIdentifiers.add("SizeRequirements");
        publicIdentifiers.add("SizeSequence");
        publicIdentifiers.add("SJIS");
        publicIdentifiers.add("SJIS_0213");
        publicIdentifiers.add("SJIS_0213$Decoder");
        publicIdentifiers.add("SJIS_0213$Encoder");
        publicIdentifiers.add("Skeleton");
        publicIdentifiers.add("SkeletonMismatchException");
        publicIdentifiers.add("SkeletonNotFoundException");
        publicIdentifiers.add("SliderUI");
        publicIdentifiers.add("SmallValue");
        publicIdentifiers.add("SmtpClient");
        publicIdentifiers.add("SmtpProtocolException");
        publicIdentifiers.add("SNIMatcher");
        publicIdentifiers.add("Snippet");
        publicIdentifiers.add("SnippetEvent");
        publicIdentifiers.add("Snippets");
        publicIdentifiers.add("Snippets$CPUEvent");
        publicIdentifiers.add("Snippets$Example");
        publicIdentifiers.add("Snippets$OrderId");
        publicIdentifiers.add("Snippets$Severity");
        publicIdentifiers.add("Snippets$Temperature");
        publicIdentifiers.add("Snippets$TransactionId");
        publicIdentifiers.add("SnippetTaglet");
        publicIdentifiers.add("SnippetTaglet$Diags");
        publicIdentifiers.add("SnippetTree");
        publicIdentifiers.add("SNIServerName");
        publicIdentifiers.add("Socket");
        publicIdentifiers.add("SocketAddress");
        publicIdentifiers.add("SocketAttachingConnector");
        publicIdentifiers.add("SocketChannel");
        publicIdentifiers.add("SocketException");
        publicIdentifiers.add("SocketFactory");
        publicIdentifiers.add("SocketHandler");
        publicIdentifiers.add("SocketImpl");
        publicIdentifiers.add("SocketImplFactory");
        publicIdentifiers.add("SocketListeningConnector");
        publicIdentifiers.add("SocketOption");
        publicIdentifiers.add("SocketOptions");
        publicIdentifiers.add("Sockets");
        publicIdentifiers.add("SocketSecurityException");
        publicIdentifiers.add("SocketTimeoutException");
        publicIdentifiers.add("SocketTransportService");
        publicIdentifiers.add("SocketTube$BufferSource");
        publicIdentifiers.add("SoftAbstractResampler");
        publicIdentifiers.add("SoftAudioProcessor");
        publicIdentifiers.add("SoftBevelBorder");
        publicIdentifiers.add("SoftCache");
        publicIdentifiers.add("SoftControl");
        publicIdentifiers.add("SoftMixingDataLine");
        publicIdentifiers.add("SoftProcess");
        publicIdentifiers.add("SoftReference");
        publicIdentifiers.add("SoftResampler");
        publicIdentifiers.add("SoftResamplerStreamer");
        publicIdentifiers.add("SolidTextRenderer");
        publicIdentifiers.add("SortableTableModel");
        publicIdentifiers.add("SortArrowIcon");
        publicIdentifiers.add("SortedMap");
        publicIdentifiers.add("SortedSet");
        publicIdentifiers.add("SortHeaderCellRenderer");
        publicIdentifiers.add("SortHeaderMouseAdapter");
        publicIdentifiers.add("SortingFocusTraversalPolicy");
        publicIdentifiers.add("SortKey");
        publicIdentifiers.add("Soundbank");
        publicIdentifiers.add("SoundbankReader");
        publicIdentifiers.add("SoundbankResource");
        publicIdentifiers.add("Source");
        publicIdentifiers.add("SourceCodeAnalysis");
        publicIdentifiers.add("SourceCodeAnalysis$CompletionInfo");
        publicIdentifiers.add("SourceCodeAnalysis$Documentation");
        publicIdentifiers.add("SourceCodeAnalysis$SnippetWrapper");
        publicIdentifiers.add("SourceCodeAnalysis$Suggestion");
        publicIdentifiers.add("SourceCodePanel");
        publicIdentifiers.add("SourceDataLine");
        publicIdentifiers.add("SourceDebugExtension_attribute");
        publicIdentifiers.add("SourceFile_attribute");
        publicIdentifiers.add("SourceID_attribute");
        publicIdentifiers.add("SourceInterpreter");
        publicIdentifiers.add("SourceLoader");
        publicIdentifiers.add("SourceLocator");
        publicIdentifiers.add("SourcePositions");
        publicIdentifiers.add("SourceToHTMLConverter");
        publicIdentifiers.add("SourceTree");
        publicIdentifiers.add("SourceValue");
        publicIdentifiers.add("SourceWriter");
        publicIdentifiers.add("Space");
        publicIdentifiers.add("SpaceClosure");
        publicIdentifiers.add("SpanClipRenderer");
        publicIdentifiers.add("SpanIterator");
        publicIdentifiers.add("Spans");
        publicIdentifiers.add("SpanShapeRenderer");
        publicIdentifiers.add("SpanShapeRenderer$Composite");
        publicIdentifiers.add("SpanShapeRenderer$Simple");
        publicIdentifiers.add("SpecTaglet");
        publicIdentifiers.add("SpecTree");
        publicIdentifiers.add("SpeculationLog");
        publicIdentifiers.add("SpeculationLog$Speculation");
        publicIdentifiers.add("SpeculationLog$SpeculationReason");
        publicIdentifiers.add("SpeculationLog$SpeculationReasonEncoding");
        publicIdentifiers.add("SpeculativeTrapData");
        publicIdentifiers.add("SPILocaleProviderAdapter");
        publicIdentifiers.add("SpinnerDateModel");
        publicIdentifiers.add("SpinnerListModel");
        publicIdentifiers.add("SpinnerModel");
        publicIdentifiers.add("SpinnerNumberModel");
        publicIdentifiers.add("SpinnerUI");
        publicIdentifiers.add("SPIResolutionException");
        publicIdentifiers.add("SPKIData");
        publicIdentifiers.add("SplashScreen");
        publicIdentifiers.add("Spliterator");
        publicIdentifiers.add("Spliterator$OfDouble");
        publicIdentifiers.add("Spliterator$OfInt");
        publicIdentifiers.add("Spliterator$OfLong");
        publicIdentifiers.add("Spliterator$OfPrimitive");
        publicIdentifiers.add("Spliterators$AbstractDoubleSpliterator");
        publicIdentifiers.add("Spliterators$AbstractIntSpliterator");
        publicIdentifiers.add("Spliterators$AbstractLongSpliterator");
        publicIdentifiers.add("Spliterators$AbstractSpliterator");
        publicIdentifiers.add("SplitPaneUI");
        publicIdentifiers.add("SpNegoContext");
        publicIdentifiers.add("SpNegoCredElement");
        publicIdentifiers.add("Spring");
        publicIdentifiers.add("SpringLayout");
        publicIdentifiers.add("SpringLayout$Constraints");
        publicIdentifiers.add("SQLClientInfoException");
        publicIdentifiers.add("SQLData");
        publicIdentifiers.add("SQLDataException");
        publicIdentifiers.add("SQLException");
        publicIdentifiers.add("SQLFeatureNotSupportedException");
        publicIdentifiers.add("SQLInput");
        publicIdentifiers.add("SQLInputImpl");
        publicIdentifiers.add("SQLIntegrityConstraintViolationException");
        publicIdentifiers.add("SQLInvalidAuthorizationSpecException");
        publicIdentifiers.add("SQLNonTransientConnectionException");
        publicIdentifiers.add("SQLNonTransientException");
        publicIdentifiers.add("SQLOutput");
        publicIdentifiers.add("SQLOutputImpl");
        publicIdentifiers.add("SQLRecoverableException");
        publicIdentifiers.add("SQLSyntaxErrorException");
        publicIdentifiers.add("SQLTimeoutException");
        publicIdentifiers.add("SQLTransactionRollbackException");
        publicIdentifiers.add("SQLTransientConnectionException");
        publicIdentifiers.add("SQLTransientException");
        publicIdentifiers.add("SQLType");
        publicIdentifiers.add("SQLWarning");
        publicIdentifiers.add("SQLXML");
        publicIdentifiers.add("SSLContext");
        publicIdentifiers.add("SSLContextImpl");
        publicIdentifiers.add("SSLContextSpi");
        publicIdentifiers.add("SSLEngine");
        publicIdentifiers.add("SSLEngineResult");
        publicIdentifiers.add("SSLException");
        publicIdentifiers.add("SSLFlowDelegate");
        publicIdentifiers.add("SSLFlowDelegate$Monitor");
        publicIdentifiers.add("SSLFlowDelegate$Monitorable");
        publicIdentifiers.add("SSLHandshakeException");
        publicIdentifiers.add("SSLKeyException");
        publicIdentifiers.add("SSLParameters");
        publicIdentifiers.add("SSLPeerUnverifiedException");
        publicIdentifiers.add("SSLProtocolException");
        publicIdentifiers.add("SslRMIClientSocketFactory");
        publicIdentifiers.add("SslRMIServerSocketFactory");
        publicIdentifiers.add("SSLServerSocket");
        publicIdentifiers.add("SSLServerSocketFactory");
        publicIdentifiers.add("SSLSession");
        publicIdentifiers.add("SSLSessionBindingEvent");
        publicIdentifiers.add("SSLSessionBindingListener");
        publicIdentifiers.add("SSLSessionContext");
        publicIdentifiers.add("SSLSocket");
        publicIdentifiers.add("SSLSocketFactory");
        publicIdentifiers.add("SSLTube");
        publicIdentifiers.add("Stable");
        publicIdentifiers.add("Stack");
        publicIdentifiers.add("StackableScope");
        publicIdentifiers.add("StackConsumer");
        publicIdentifiers.add("StackFrame");
        publicIdentifiers.add("StackFrameImpl");
        publicIdentifiers.add("StackFrameInfo");
        publicIdentifiers.add("StackFrameStream");
        publicIdentifiers.add("StackInstruction");
        publicIdentifiers.add("StackIntrospection");
        publicIdentifiers.add("StackMap_attribute");
        publicIdentifiers.add("StackMap_attribute$stack_map_frame");
        publicIdentifiers.add("StackMapTable_attribute");
        publicIdentifiers.add("StackMapTable_attribute$append_frame");
        publicIdentifiers.add("StackMapTable_attribute$chop_frame");
        publicIdentifiers.add("StackMapTable_attribute$full_frame");
        publicIdentifiers.add("StackMapTable_attribute$Object_variable_info");
        publicIdentifiers.add("StackMapTable_attribute$same_frame");
        publicIdentifiers.add("StackMapTable_attribute$same_frame_extended");
        publicIdentifiers.add("StackMapTable_attribute$same_locals_1_stack_item_frame");
        publicIdentifiers.add("StackMapTable_attribute$same_locals_1_stack_item_frame_extended");
        publicIdentifiers.add("StackMapTable_attribute$stack_map_frame");
        publicIdentifiers.add("StackMapTable_attribute$stack_map_frame$Visitor");
        publicIdentifiers.add("StackMapTable_attribute$Uninitialized_variable_info");
        publicIdentifiers.add("StackMapTable_attribute$verification_type_info");
        publicIdentifiers.add("StackMapWriter");
        publicIdentifiers.add("StackOverflowError");
        publicIdentifiers.add("StackProducer");
        publicIdentifiers.add("StackTrace");
        publicIdentifiers.add("StackTraceElementCompositeData");
        publicIdentifiers.add("StackValue");
        publicIdentifiers.add("StackValueCollection");
        publicIdentifiers.add("StackWalker$StackFrame");
        publicIdentifiers.add("StampedLock");
        publicIdentifiers.add("StandardCharsets");
        publicIdentifiers.add("StandardDoclet");
        publicIdentifiers.add("StandardEmitterMBean");
        publicIdentifiers.add("StandardGlyphVector");
        publicIdentifiers.add("StandardJavaFileManager");
        publicIdentifiers.add("StandardJavaFileManager$PathFactory");
        publicIdentifiers.add("StandardMBean");
        publicIdentifiers.add("StandardMBeanSupport");
        publicIdentifiers.add("StandardMetadataFormat");
        publicIdentifiers.add("StandardMetadataFormatResources");
        publicIdentifiers.add("StandardParserConfiguration");
        publicIdentifiers.add("Start");
        publicIdentifiers.add("StartDocument");
        publicIdentifiers.add("StartDocumentEvent");
        publicIdentifiers.add("StartElement");
        publicIdentifiers.add("StartElementEvent");
        publicIdentifiers.add("StartElementTree");
        publicIdentifiers.add("StartTlsRequest");
        publicIdentifiers.add("StartTlsResponse");
        publicIdentifiers.add("State");
        publicIdentifiers.add("StateChangeAction");
        publicIdentifiers.add("StateEdit");
        publicIdentifiers.add("StateEditable");
        publicIdentifiers.add("StateFactory");
        publicIdentifiers.add("Statement");
        publicIdentifiers.add("StatementEvent");
        publicIdentifiers.add("StatementEventListener");
        publicIdentifiers.add("StatementSnippet");
        publicIdentifiers.add("StatementTree");
        publicIdentifiers.add("StateTrackable");
        publicIdentifiers.add("StateTracker");
        publicIdentifiers.add("StaticBaseConstructor");
        publicIdentifiers.add("StaticInitMerger");
        publicIdentifiers.add("StatLong");
        publicIdentifiers.add("Status");
        publicIdentifiers.add("StatusBar");
        publicIdentifiers.add("StaxEntityResolverWrapper");
        publicIdentifiers.add("StaxErrorReporter");
        publicIdentifiers.add("StAXEvent2SAX");
        publicIdentifiers.add("StAXResult");
        publicIdentifiers.add("StAXSource");
        publicIdentifiers.add("StAXStream2SAX");
        publicIdentifiers.add("StaxXMLInputSource");
        publicIdentifiers.add("StepEvent");
        publicIdentifiers.add("StepIterator");
        publicIdentifiers.add("StepPattern");
        publicIdentifiers.add("StepRequest");
        publicIdentifiers.add("StopParseException");
        publicIdentifiers.add("StorageResolver");
        publicIdentifiers.add("StorageResolverException");
        publicIdentifiers.add("StorageResolverSpi");
        publicIdentifiers.add("StoreInstruction");
        publicIdentifiers.add("Stream");
        publicIdentifiers.add("Stream$Builder");
        publicIdentifiers.add("StreamCloser");
        publicIdentifiers.add("StreamCorruptedException");
        publicIdentifiers.add("StreamDecoder");
        publicIdentifiers.add("StreamFilter");
        publicIdentifiers.add("StreamFinalizer");
        publicIdentifiers.add("StreamHandler");
        publicIdentifiers.add("StreamingExecutionControl");
        publicIdentifiers.add("StreamMonitor");
        publicIdentifiers.add("StreamPrintService");
        publicIdentifiers.add("StreamPrintServiceFactory");
        publicIdentifiers.add("StreamReaderDelegate");
        publicIdentifiers.add("StreamRemoteCall");
        publicIdentifiers.add("StreamResult");
        publicIdentifiers.add("Streams");
        publicIdentifiers.add("StreamSource");
        publicIdentifiers.add("StreamTokenizer");
        publicIdentifiers.add("String");
        publicIdentifiers.add("StringArrayWrapper");
        publicIdentifiers.add("StringBufferInputStream");
        publicIdentifiers.add("StringBufferPool");
        publicIdentifiers.add("StringComparable");
        publicIdentifiers.add("StringConcat");
        publicIdentifiers.add("StringConcatException");
        publicIdentifiers.add("StringCounter");
        publicIdentifiers.add("StringDatatypeValidator");
        publicIdentifiers.add("StringDV");
        publicIdentifiers.add("StringEditor");
        publicIdentifiers.add("StringElementHandler");
        publicIdentifiers.add("StringHeadTail");
        publicIdentifiers.add("StringIndexOutOfBoundsException");
        publicIdentifiers.add("StringList");
        publicIdentifiers.add("StringMonitor");
        publicIdentifiers.add("StringMonitorMBean");
        publicIdentifiers.add("StringReader");
        publicIdentifiers.add("StringRefAddr");
        publicIdentifiers.add("StringReference");
        publicIdentifiers.add("StringReferenceImpl");
        publicIdentifiers.add("StringsCompleter");
        publicIdentifiers.add("StringSelection");
        publicIdentifiers.add("StringSharingDecompressor");
        publicIdentifiers.add("StringSharingDecompressorFactory");
        publicIdentifiers.add("StringSharingPlugin");
        publicIdentifiers.add("StringTable");
        publicIdentifiers.add("StringToIntTable");
        publicIdentifiers.add("StringTokenIterator");
        publicIdentifiers.add("StringTokenizer");
        publicIdentifiers.add("StringToStringTable");
        publicIdentifiers.add("StringToStringTableVector");
        publicIdentifiers.add("StringType");
        publicIdentifiers.add("StringUIClientPropertyKey");
        publicIdentifiers.add("StringUtils");
        publicIdentifiers.add("StringValueExp");
        publicIdentifiers.add("StringVector");
        publicIdentifiers.add("StringWriter");
        publicIdentifiers.add("StripFilter");
        publicIdentifiers.add("StripNativeDebugSymbolsPlugin$ObjCopyCmdBuilder");
        publicIdentifiers.add("StripWhitespaceFilter");
        publicIdentifiers.add("Stroke");
        publicIdentifiers.add("StrokeBorder");
        publicIdentifiers.add("Struct");
        publicIdentifiers.add("StructLayout");
        publicIdentifiers.add("StructuredTaskScope");
        publicIdentifiers.add("StructureViolationExceptions");
        publicIdentifiers.add("Stub");
        publicIdentifiers.add("StubNotFoundException");
        publicIdentifiers.add("StubQueue");
        publicIdentifiers.add("StubRoutines");
        publicIdentifiers.add("Style");
        publicIdentifiers.add("StyleAssociation");
        publicIdentifiers.add("StyleConstants");
        publicIdentifiers.add("StyleContext");
        publicIdentifiers.add("StyleContext$NamedStyle");
        publicIdentifiers.add("StyleContext$SmallAttributeSet");
        publicIdentifiers.add("StyledDocument");
        publicIdentifiers.add("StyledEditorKit");
        publicIdentifiers.add("StyledEditorKit$AlignmentAction");
        publicIdentifiers.add("StyledEditorKit$BoldAction");
        publicIdentifiers.add("StyledEditorKit$FontFamilyAction");
        publicIdentifiers.add("StyledEditorKit$FontSizeAction");
        publicIdentifiers.add("StyledEditorKit$ForegroundAction");
        publicIdentifiers.add("StyledEditorKit$ItalicAction");
        publicIdentifiers.add("StyledEditorKit$StyledTextAction");
        publicIdentifiers.add("StyledEditorKit$UnderlineAction");
        publicIdentifiers.add("StyledText");
        publicIdentifiers.add("StyledText$Consumer");
        publicIdentifiers.add("StyleResolver");
        publicIdentifiers.add("StyleSheet");
        publicIdentifiers.add("StyleSheetList");
        publicIdentifiers.add("StylesheetPIHandler");
        publicIdentifiers.add("SuballocatedByteVector");
        publicIdentifiers.add("SuballocatedIntVector");
        publicIdentifiers.add("SubContextList");
        publicIdentifiers.add("SubjectAlternativeNameExtension");
        publicIdentifiers.add("SubjectDelegator");
        publicIdentifiers.add("SubjectDomainCombiner");
        publicIdentifiers.add("SubjectInfoAccessExtension");
        publicIdentifiers.add("SubjectKeyIdentifierExtension");
        publicIdentifiers.add("SubmissionPublisher");
        publicIdentifiers.add("SubRegionShowable");
        publicIdentifiers.add("SubscriberWrapper");
        publicIdentifiers.add("SubscriptionBase");
        publicIdentifiers.add("SubstitutionGroupHandler");
        publicIdentifiers.add("SubWriterHolderWriter");
        publicIdentifiers.add("SummaryAPIListBuilder");
        publicIdentifiers.add("SummaryListWriter");
        publicIdentifiers.add("SummaryTaglet");
        publicIdentifiers.add("SummaryTree");
        publicIdentifiers.add("SunAlternateMedia");
        publicIdentifiers.add("SunCertPathBuilderException");
        publicIdentifiers.add("SunClipboard");
        publicIdentifiers.add("SunCommandLineLauncher");
        publicIdentifiers.add("SunCompositeContext");
        publicIdentifiers.add("SunDisplayChanger");
        publicIdentifiers.add("SunDragSourceContextPeer");
        publicIdentifiers.add("SunDropTargetContextPeer");
        publicIdentifiers.add("SunDropTargetContextPeer$EventDispatcher");
        publicIdentifiers.add("SunFontManager");
        publicIdentifiers.add("SunFontManager$FamilyDescription");
        publicIdentifiers.add("SunGraphicsCallback");
        publicIdentifiers.add("SunGraphicsEnvironment");
        publicIdentifiers.add("SunHints");
        publicIdentifiers.add("SunHints$Key");
        publicIdentifiers.add("SunHints$LCDContrastKey");
        publicIdentifiers.add("SunHints$Value");
        publicIdentifiers.add("SunJmxMBeanServer");
        publicIdentifiers.add("SunJSSE");
        publicIdentifiers.add("SunPrinterJobService");
        publicIdentifiers.add("SunToolkit");
        publicIdentifiers.add("SunToolkit$IllegalThreadException");
        publicIdentifiers.add("SunVolatileImage");
        publicIdentifiers.add("SunWritableRaster");
        publicIdentifiers.add("SunWritableRaster$DataStealer");
        publicIdentifiers.add("SupplementaryLocaleDataProvider");
        publicIdentifiers.add("Supplier");
        publicIdentifiers.add("SupportedAnnotationTypes");
        publicIdentifiers.add("SupportedOptions");
        publicIdentifiers.add("SupportedSourceVersion");
        publicIdentifiers.add("SupportedValuesAttribute");
        publicIdentifiers.add("SuppressWarnings");
        publicIdentifiers.add("Surface");
        publicIdentifiers.add("SurfaceData");
        publicIdentifiers.add("SurfaceDataProxy");
        publicIdentifiers.add("SurfaceDataProxy$CountdownTracker");
        publicIdentifiers.add("SurfaceManager");
        publicIdentifiers.add("SurfaceManager$FlushableCacheData");
        publicIdentifiers.add("SurfaceManager$ImageAccessor");
        publicIdentifiers.add("SurfaceManager$ProxiedGraphicsConfig");
        publicIdentifiers.add("SurfaceManagerFactory");
        publicIdentifiers.add("Surrogate");
        publicIdentifiers.add("Surrogate$Generator");
        publicIdentifiers.add("Surrogate$Parser");
        publicIdentifiers.add("SWAP");
        publicIdentifiers.add("SwingAccessor$JComponentAccessor");
        publicIdentifiers.add("SwingAccessor$JLightweightFrameAccessor");
        publicIdentifiers.add("SwingAccessor$JTextComponentAccessor");
        publicIdentifiers.add("SwingAccessor$KeyStrokeAccessor");
        publicIdentifiers.add("SwingAccessor$PopupFactoryAccessor");
        publicIdentifiers.add("SwingAccessor$RepaintManagerAccessor");
        publicIdentifiers.add("SwingAccessor$UIDefaultsAccessor");
        publicIdentifiers.add("SwingConstants");
        publicIdentifiers.add("SwingContainer");
        publicIdentifiers.add("SwingEventMonitor");
        publicIdentifiers.add("SwingInterOpUtils");
        publicIdentifiers.add("SwingUtilities");
        publicIdentifiers.add("SwingUtilities2");
        publicIdentifiers.add("SwingUtilities2$RepaintListener");
        publicIdentifiers.add("SwingUtilities3");
        publicIdentifiers.add("SwingWorker");
        publicIdentifiers.add("SwitchBootstraps");
        publicIdentifiers.add("SwitchExpressionTree");
        publicIdentifiers.add("SwitchPoint");
        publicIdentifiers.add("SwitchTree");
        publicIdentifiers.add("sym");
        publicIdentifiers.add("Sym");
        publicIdentifiers.add("Symbol");
        publicIdentifiers.add("Symbol$BindingSymbol");
        publicIdentifiers.add("Symbol$ClassSymbol");
        publicIdentifiers.add("Symbol$Completer");
        publicIdentifiers.add("Symbol$CompletionFailure");
        publicIdentifiers.add("Symbol$DelegatedSymbol");
        publicIdentifiers.add("Symbol$DynamicMethodSymbol");
        publicIdentifiers.add("Symbol$DynamicVarSymbol");
        publicIdentifiers.add("Symbol$MethodHandleSymbol");
        publicIdentifiers.add("Symbol$MethodSymbol");
        publicIdentifiers.add("Symbol$ModuleSymbol");
        publicIdentifiers.add("Symbol$OperatorSymbol");
        publicIdentifiers.add("Symbol$PackageSymbol");
        publicIdentifiers.add("Symbol$ParamSymbol");
        publicIdentifiers.add("Symbol$RecordComponent");
        publicIdentifiers.add("Symbol$RootPackageSymbol");
        publicIdentifiers.add("Symbol$TypeSymbol");
        publicIdentifiers.add("Symbol$TypeVariableSymbol");
        publicIdentifiers.add("Symbol$VarSymbol");
        publicIdentifiers.add("Symbol$Visitor");
        publicIdentifiers.add("SymbolFinder");
        publicIdentifiers.add("SymbolHash");
        publicIdentifiers.add("SymbolLookup");
        publicIdentifiers.add("SymbolMetadata");
        publicIdentifiers.add("SymbolResolutionClosure");
        publicIdentifiers.add("SymbolTable");
        publicIdentifiers.add("SymLinkResourcePoolEntry");
        publicIdentifiers.add("Symtab");
        publicIdentifiers.add("SyncFactory");
        publicIdentifiers.add("SyncFactoryException");
        publicIdentifiers.add("SyncFailedException");
        publicIdentifiers.add("SynchronizedTree");
        publicIdentifiers.add("SynchronousQueue");
        publicIdentifiers.add("SyncProvider");
        publicIdentifiers.add("SyncProviderException");
        publicIdentifiers.add("SyncResolver");
        publicIdentifiers.add("SyncResolverImpl");
        publicIdentifiers.add("SyntaxError");
        publicIdentifiers.add("SyntaxException");
        publicIdentifiers.add("SyntaxTreeNode");
        publicIdentifiers.add("SynthButtonUI");
        publicIdentifiers.add("SynthCheckBoxMenuItemUI");
        publicIdentifiers.add("SynthCheckBoxUI");
        publicIdentifiers.add("SynthColorChooserUI");
        publicIdentifiers.add("SynthComboBoxUI");
        publicIdentifiers.add("SynthConstants");
        publicIdentifiers.add("SynthContext");
        publicIdentifiers.add("SynthDesktopIconUI");
        publicIdentifiers.add("SynthDesktopPaneUI");
        publicIdentifiers.add("SynthEditorPaneUI");
        publicIdentifiers.add("Synthesizer");
        publicIdentifiers.add("Synthetic_attribute");
        publicIdentifiers.add("SyntheticRepository");
        publicIdentifiers.add("SynthFileChooserUI");
        publicIdentifiers.add("SynthFileChooserUIImpl");
        publicIdentifiers.add("SynthFileChooserUIImpl$DirectoryComboBoxAction");
        publicIdentifiers.add("SynthFileChooserUIImpl$DirectoryComboBoxModel");
        publicIdentifiers.add("SynthFileChooserUIImpl$FilterComboBoxModel");
        publicIdentifiers.add("SynthFileChooserUIImpl$FilterComboBoxRenderer");
        publicIdentifiers.add("SynthFormattedTextFieldUI");
        publicIdentifiers.add("SynthGraphicsUtils");
        publicIdentifiers.add("SynthIcon");
        publicIdentifiers.add("SynthInternalFrameUI");
        publicIdentifiers.add("SynthLabelUI");
        publicIdentifiers.add("SynthListUI");
        publicIdentifiers.add("SynthLookAndFeel");
        publicIdentifiers.add("SynthMenuBarUI");
        publicIdentifiers.add("SynthMenuItemUI");
        publicIdentifiers.add("SynthMenuUI");
        publicIdentifiers.add("SynthOptionPaneUI");
        publicIdentifiers.add("SynthPainter");
        publicIdentifiers.add("SynthPanelUI");
        publicIdentifiers.add("SynthPasswordFieldUI");
        publicIdentifiers.add("SynthPopupMenuUI");
        publicIdentifiers.add("SynthProgressBarUI");
        publicIdentifiers.add("SynthRadioButtonMenuItemUI");
        publicIdentifiers.add("SynthRadioButtonUI");
        publicIdentifiers.add("SynthRootPaneUI");
        publicIdentifiers.add("SynthScrollBarUI");
        publicIdentifiers.add("SynthScrollPaneUI");
        publicIdentifiers.add("SynthSeparatorUI");
        publicIdentifiers.add("SynthSliderUI");
        publicIdentifiers.add("SynthSpinnerUI");
        publicIdentifiers.add("SynthSplitPaneUI");
        publicIdentifiers.add("SynthStyle");
        publicIdentifiers.add("SynthStyleFactory");
        publicIdentifiers.add("SynthTabbedPaneUI");
        publicIdentifiers.add("SynthTableHeaderUI");
        publicIdentifiers.add("SynthTableUI");
        publicIdentifiers.add("SynthTextAreaUI");
        publicIdentifiers.add("SynthTextFieldUI");
        publicIdentifiers.add("SynthTextPaneUI");
        publicIdentifiers.add("SynthToggleButtonUI");
        publicIdentifiers.add("SynthToolBarUI");
        publicIdentifiers.add("SynthToolTipUI");
        publicIdentifiers.add("SynthTreeUI");
        publicIdentifiers.add("SynthUI");
        publicIdentifiers.add("SynthViewportUI");
        publicIdentifiers.add("SysexMessage");
        publicIdentifiers.add("SysPropsDumper");
        publicIdentifiers.add("SysPropsPanel");
        publicIdentifiers.add("System$Logger");
        publicIdentifiers.add("System$LoggerFinder");
        publicIdentifiers.add("SystemCompleter");
        publicIdentifiers.add("SystemDictionary");
        publicIdentifiers.add("SystemDictionaryHelper");
        publicIdentifiers.add("SystemEventListener");
        publicIdentifiers.add("SystemIDResolver");
        publicIdentifiers.add("SystemMetrics");
        publicIdentifiers.add("SystemPropertiesWriter");
        publicIdentifiers.add("SystemPropertyTaglet");
        publicIdentifiers.add("SystemPropertyTree");
        publicIdentifiers.add("SystemProps$Raw");
        publicIdentifiers.add("SystemSleepListener");
        publicIdentifiers.add("SystemTray");
        publicIdentifiers.add("SystemTrayPeer");
        publicIdentifiers.add("SysVVaList");
        publicIdentifiers.add("SysVVaList$Builder");
    }

    private void addPublicIdentifiersTU() {
        publicIdentifiers.add("Thread.State");
        publicIdentifiers.add("Thread.UncaughtExceptionHandler");
        publicIdentifiers.add("Tab");
        publicIdentifiers.add("TabableView");
        publicIdentifiers.add("TabbedPaneUI");
        publicIdentifiers.add("TabExpander");
        publicIdentifiers.add("Table");
        publicIdentifiers.add("TableCellEditor");
        publicIdentifiers.add("TableCellRenderer");
        publicIdentifiers.add("TableColumn");
        publicIdentifiers.add("TableColumnModel");
        publicIdentifiers.add("TableColumnModelEvent");
        publicIdentifiers.add("TableColumnModelListener");
        publicIdentifiers.add("TableHeader");
        publicIdentifiers.add("TableHeaderUI");
        publicIdentifiers.add("TableModel");
        publicIdentifiers.add("TableModelComparator");
        publicIdentifiers.add("TableModelEvent");
        publicIdentifiers.add("TableModelListener");
        publicIdentifiers.add("TableRowSorter");
        publicIdentifiers.add("TableSorter");
        publicIdentifiers.add("TableStringConverter");
        publicIdentifiers.add("TABLESWITCH");
        publicIdentifiers.add("TableSwitchGenerator");
        publicIdentifiers.add("TableSwitchInsnNode");
        publicIdentifiers.add("TableUI");
        publicIdentifiers.add("TableView");
        publicIdentifiers.add("TableView$RowView");
        publicIdentifiers.add("TableView$TableCell");
        publicIdentifiers.add("TableView$TableRow");
        publicIdentifiers.add("TabsDlg");
        publicIdentifiers.add("TabSet");
        publicIdentifiers.add("TabStop");
        publicIdentifiers.add("TabularData");
        publicIdentifiers.add("TabularDataSupport");
        publicIdentifiers.add("TabularType");
        publicIdentifiers.add("Tag");
        publicIdentifiers.add("TagElement");
        publicIdentifiers.add("Taglet");
        publicIdentifiers.add("Taglet$UnsupportedTagletOperationException");
        publicIdentifiers.add("TagletManager");
        publicIdentifiers.add("TagletWriter");
        publicIdentifiers.add("TagletWriterImpl");
        publicIdentifiers.add("Target");
        publicIdentifiers.add("TargetDataLine");
        publicIdentifiers.add("TargetDescription");
        publicIdentifiers.add("TargetedNotification");
        publicIdentifiers.add("TargetVM");
        publicIdentifiers.add("Taskbar");
        publicIdentifiers.add("TaskbarPeer");
        publicIdentifiers.add("TaskHelper$Option");
        publicIdentifiers.add("TaskHelper$Option$Processing");
        publicIdentifiers.add("TaskListener");
        publicIdentifiers.add("TCPChannel");
        publicIdentifiers.add("TCPConnection");
        publicIdentifiers.add("TCPDirectSocketFactory");
        publicIdentifiers.add("TCPEndpoint");
        publicIdentifiers.add("TCPTransport");
        publicIdentifiers.add("TeeXMLDocumentFilterImpl");
        publicIdentifiers.add("TelnetInputStream");
        publicIdentifiers.add("TelnetOutputStream");
        publicIdentifiers.add("TelnetProtocolException");
        publicIdentifiers.add("Templates");
        publicIdentifiers.add("TemplatesHandler");
        publicIdentifiers.add("TemplatesHandlerImpl");
        publicIdentifiers.add("TemplateType");
        publicIdentifiers.add("Temporal");
        publicIdentifiers.add("TemporalAccessor");
        publicIdentifiers.add("TemporalAdjuster");
        publicIdentifiers.add("TemporalAmount");
        publicIdentifiers.add("TemporalField");
        publicIdentifiers.add("TemporalQuery");
        publicIdentifiers.add("TemporalUnit");
        publicIdentifiers.add("TenuredGeneration");
        publicIdentifiers.add("TenuredSpace");
        publicIdentifiers.add("Terminal");
        publicIdentifiers.add("Terminal$SignalHandler");
        publicIdentifiers.add("TerminalFactorySpi");
        publicIdentifiers.add("TerminatingThreadLocal");
        publicIdentifiers.add("TestDebugInfo");
        publicIdentifiers.add("TestParser");
        publicIdentifiers.add("Text");
        publicIdentifiers.add("TextAction");
        publicIdentifiers.add("TextArea");
        publicIdentifiers.add("TextArea$AccessibleAWTTextArea");
        publicIdentifiers.add("TextAreaPeer");
        publicIdentifiers.add("TextBuilder");
        publicIdentifiers.add("TextCallbackHandler");
        publicIdentifiers.add("TextComponent");
        publicIdentifiers.add("TextComponent$AccessibleAWTTextComponent");
        publicIdentifiers.add("TextComponentPeer");
        publicIdentifiers.add("TextComponentPrintable");
        publicIdentifiers.add("TextComponentTranslator");
        publicIdentifiers.add("TextEvent");
        publicIdentifiers.add("TextField");
        publicIdentifiers.add("TextField$AccessibleAWTTextField");
        publicIdentifiers.add("TextFieldPeer");
        publicIdentifiers.add("Textifier");
        publicIdentifiers.add("TextifierSupport");
        publicIdentifiers.add("TextImpl");
        publicIdentifiers.add("TextInputCallback");
        publicIdentifiers.add("TextLabel");
        publicIdentifiers.add("TextLayout$CaretPolicy");
        publicIdentifiers.add("TextLineComponent");
        publicIdentifiers.add("TextListener");
        publicIdentifiers.add("TextOutputCallback");
        publicIdentifiers.add("TextPipe");
        publicIdentifiers.add("TextRenderer");
        publicIdentifiers.add("TextSerializer");
        publicIdentifiers.add("TextSource");
        publicIdentifiers.add("TextSourceLabel");
        publicIdentifiers.add("TextSyntax");
        publicIdentifiers.add("TextTree");
        publicIdentifiers.add("TextUI");
        publicIdentifiers.add("TexturePaint");
        publicIdentifiers.add("TGSRep");
        publicIdentifiers.add("TGSReq");
        publicIdentifiers.add("Thread");
        publicIdentifiers.add("Thread$Builder");
        publicIdentifiers.add("Thread$Builder$OfPlatform");
        publicIdentifiers.add("Thread$Builder$OfVirtual");
        publicIdentifiers.add("Thread$UncaughtExceptionHandler");
        publicIdentifiers.add("ThreadAccess");
        publicIdentifiers.add("ThreadContainer");
        publicIdentifiers.add("ThreadContainers");
        publicIdentifiers.add("ThreadContext");
        publicIdentifiers.add("ThreadControllerWrapper");
        publicIdentifiers.add("ThreadControllerWrapper$ThreadController");
        publicIdentifiers.add("ThreadDeath");
        publicIdentifiers.add("ThreadDeathEvent");
        publicIdentifiers.add("ThreadDeathRequest");
        publicIdentifiers.add("ThreadDialog");
        publicIdentifiers.add("ThreadDumper");
        publicIdentifiers.add("ThreadFactory");
        publicIdentifiers.add("ThreadFlock");
        publicIdentifiers.add("ThreadGroup");
        publicIdentifiers.add("ThreadGroupReference");
        publicIdentifiers.add("ThreadGroupReferenceImpl");
        publicIdentifiers.add("ThreadImpl");
        publicIdentifiers.add("ThreadInfo");
        publicIdentifiers.add("ThreadInfoAction");
        publicIdentifiers.add("ThreadInfoCompositeData");
        publicIdentifiers.add("ThreadInfoPanel");
        publicIdentifiers.add("ThreadLocal");
        publicIdentifiers.add("ThreadLocalAllocBuffer");
        publicIdentifiers.add("ThreadLocalBufferAllocator");
        publicIdentifiers.add("ThreadLocalCoders");
        publicIdentifiers.add("ThreadMXBean");
        publicIdentifiers.add("ThreadPool");
        publicIdentifiers.add("ThreadPoolExecutor");
        publicIdentifiers.add("ThreadPoolExecutor$AbortPolicy");
        publicIdentifiers.add("ThreadPoolExecutor$CallerRunsPolicy");
        publicIdentifiers.add("ThreadPoolExecutor$DiscardOldestPolicy");
        publicIdentifiers.add("ThreadPoolExecutor$DiscardPolicy");
        publicIdentifiers.add("ThreadProxy");
        publicIdentifiers.add("ThreadReference");
        publicIdentifiers.add("ThreadReferenceImpl");
        publicIdentifiers.add("Threads");
        publicIdentifiers.add("ThreadStackTrace");
        publicIdentifiers.add("ThreadStartEvent");
        publicIdentifiers.add("ThreadStartRequest");
        publicIdentifiers.add("ThreadState");
        publicIdentifiers.add("ThreadTracker");
        publicIdentifiers.add("Threshold");
        publicIdentifiers.add("Throttle");
        publicIdentifiers.add("Throwable");
        publicIdentifiers.add("ThrowsTaglet");
        publicIdentifiers.add("ThrowsTree");
        publicIdentifiers.add("ThrowTree");
        publicIdentifiers.add("Ticket");
        publicIdentifiers.add("TicketFlags");
        publicIdentifiers.add("TIFFAttrInfo");
        publicIdentifiers.add("TIFFBaseJPEGCompressor");
        publicIdentifiers.add("TIFFCIELabColorConverter");
        publicIdentifiers.add("TIFFColorConverter");
        publicIdentifiers.add("TIFFCompressor");
        publicIdentifiers.add("TIFFDecompressor");
        publicIdentifiers.add("TIFFDeflateCompressor");
        publicIdentifiers.add("TIFFDeflateDecompressor");
        publicIdentifiers.add("TIFFDeflater");
        publicIdentifiers.add("TIFFDirectory");
        publicIdentifiers.add("TIFFExifJPEGCompressor");
        publicIdentifiers.add("TIFFFieldNode");
        publicIdentifiers.add("TIFFIFD");
        publicIdentifiers.add("TIFFImageMetadata");
        publicIdentifiers.add("TIFFImageMetadataFormat");
        publicIdentifiers.add("TIFFImageMetadataFormatResources");
        publicIdentifiers.add("TIFFImageReader");
        publicIdentifiers.add("TIFFImageReaderSpi");
        publicIdentifiers.add("TIFFImageWriteParam");
        publicIdentifiers.add("TIFFImageWriter");
        publicIdentifiers.add("TIFFImageWriterSpi");
        publicIdentifiers.add("TIFFJPEGCompressor");
        publicIdentifiers.add("TIFFJPEGDecompressor");
        publicIdentifiers.add("TIFFLSBCompressor");
        publicIdentifiers.add("TIFFLSBDecompressor");
        publicIdentifiers.add("TIFFLZWCompressor");
        publicIdentifiers.add("TIFFMetadataFormat");
        publicIdentifiers.add("TIFFNullCompressor");
        publicIdentifiers.add("TIFFNullDecompressor");
        publicIdentifiers.add("TIFFOldJPEGDecompressor");
        publicIdentifiers.add("TIFFPackBitsCompressor");
        publicIdentifiers.add("TIFFPackBitsDecompressor");
        publicIdentifiers.add("TIFFPackBitsUtil");
        publicIdentifiers.add("TIFFRenderedImage");
        publicIdentifiers.add("TIFFRLECompressor");
        publicIdentifiers.add("TIFFStreamMetadata");
        publicIdentifiers.add("TIFFStreamMetadataFormat");
        publicIdentifiers.add("TIFFStreamMetadataFormatResources");
        publicIdentifiers.add("TIFFT4Compressor");
        publicIdentifiers.add("TIFFT6Compressor");
        publicIdentifiers.add("TIFFTag");
        publicIdentifiers.add("TIFFTagSet");
        publicIdentifiers.add("TIFFYCbCrColorConverter");
        publicIdentifiers.add("TIFFYCbCrDecompressor");
        publicIdentifiers.add("TIFFZLibCompressor");
        publicIdentifiers.add("TileObserver");
        publicIdentifiers.add("Time");
        publicIdentifiers.add("TimeComboBox");
        publicIdentifiers.add("TimeDV");
        publicIdentifiers.add("TimedWindowEvent");
        publicIdentifiers.add("TimeLimitExceededException");
        publicIdentifiers.add("TimeoutException");
        publicIdentifiers.add("Timer");
        publicIdentifiers.add("TimerMBean");
        publicIdentifiers.add("TimerNotification");
        publicIdentifiers.add("TimerTask");
        publicIdentifiers.add("Timespan");
        publicIdentifiers.add("Timestamp");
        publicIdentifiers.add("Timestamper");
        publicIdentifiers.add("TimestampToken");
        publicIdentifiers.add("TimeZone");
        publicIdentifiers.add("TimeZoneNameProvider");
        publicIdentifiers.add("TimeZoneNameProviderImpl");
        publicIdentifiers.add("TimeZoneNames");
        publicIdentifiers.add("TimeZoneNames_af");
        publicIdentifiers.add("TimeZoneNames_am");
        publicIdentifiers.add("TimeZoneNames_ar");
        publicIdentifiers.add("TimeZoneNames_as");
        publicIdentifiers.add("TimeZoneNames_ast");
        publicIdentifiers.add("TimeZoneNames_az");
        publicIdentifiers.add("TimeZoneNames_be");
        publicIdentifiers.add("TimeZoneNames_bg");
        publicIdentifiers.add("TimeZoneNames_bgc");
        publicIdentifiers.add("TimeZoneNames_bho");
        publicIdentifiers.add("TimeZoneNames_bn");
        publicIdentifiers.add("TimeZoneNames_bo");
        publicIdentifiers.add("TimeZoneNames_br");
        publicIdentifiers.add("TimeZoneNames_brx");
        publicIdentifiers.add("TimeZoneNames_bs");
        publicIdentifiers.add("TimeZoneNames_bs_Cyrl");
        publicIdentifiers.add("TimeZoneNamesBundle");
        publicIdentifiers.add("TimeZoneNames_ca");
        publicIdentifiers.add("TimeZoneNames_ccp");
        publicIdentifiers.add("TimeZoneNames_ce");
        publicIdentifiers.add("TimeZoneNames_ceb");
        publicIdentifiers.add("TimeZoneNames_chr");
        publicIdentifiers.add("TimeZoneNames_cs");
        publicIdentifiers.add("TimeZoneNames_cv");
        publicIdentifiers.add("TimeZoneNames_cy");
        publicIdentifiers.add("TimeZoneNames_da");
        publicIdentifiers.add("TimeZoneNames_de");
        publicIdentifiers.add("TimeZoneNames_de_CH");
        publicIdentifiers.add("TimeZoneNames_doi");
        publicIdentifiers.add("TimeZoneNames_dsb");
        publicIdentifiers.add("TimeZoneNames_dz");
        publicIdentifiers.add("TimeZoneNames_ee");
        publicIdentifiers.add("TimeZoneNames_el");
        publicIdentifiers.add("TimeZoneNames_en");
        publicIdentifiers.add("TimeZoneNames_en_001");
        publicIdentifiers.add("TimeZoneNames_en_150");
        publicIdentifiers.add("TimeZoneNames_en_AE");
        publicIdentifiers.add("TimeZoneNames_en_AU");
        publicIdentifiers.add("TimeZoneNames_en_BW");
        publicIdentifiers.add("TimeZoneNames_en_CA");
        publicIdentifiers.add("TimeZoneNames_en_CM");
        publicIdentifiers.add("TimeZoneNames_en_ER");
        publicIdentifiers.add("TimeZoneNames_en_GB");
        publicIdentifiers.add("TimeZoneNames_en_GH");
        publicIdentifiers.add("TimeZoneNames_en_GM");
        publicIdentifiers.add("TimeZoneNames_en_GU");
        publicIdentifiers.add("TimeZoneNames_en_GY");
        publicIdentifiers.add("TimeZoneNames_en_HK");
        publicIdentifiers.add("TimeZoneNames_en_IE");
        publicIdentifiers.add("TimeZoneNames_en_IN");
        publicIdentifiers.add("TimeZoneNames_en_KE");
        publicIdentifiers.add("TimeZoneNames_en_LR");
        publicIdentifiers.add("TimeZoneNames_en_LS");
        publicIdentifiers.add("TimeZoneNames_en_MG");
        publicIdentifiers.add("TimeZoneNames_en_MH");
        publicIdentifiers.add("TimeZoneNames_en_MO");
        publicIdentifiers.add("TimeZoneNames_en_MP");
        publicIdentifiers.add("TimeZoneNames_en_MU");
        publicIdentifiers.add("TimeZoneNames_en_MW");
        publicIdentifiers.add("TimeZoneNames_en_MY");
        publicIdentifiers.add("TimeZoneNames_en_NA");
        publicIdentifiers.add("TimeZoneNames_en_NG");
        publicIdentifiers.add("TimeZoneNames_en_NZ");
        publicIdentifiers.add("TimeZoneNames_en_RW");
        publicIdentifiers.add("TimeZoneNames_en_SD");
        publicIdentifiers.add("TimeZoneNames_en_SG");
        publicIdentifiers.add("TimeZoneNames_en_SL");
        publicIdentifiers.add("TimeZoneNames_en_SS");
        publicIdentifiers.add("TimeZoneNames_en_SZ");
        publicIdentifiers.add("TimeZoneNames_en_TZ");
        publicIdentifiers.add("TimeZoneNames_en_UG");
        publicIdentifiers.add("TimeZoneNames_en_ZA");
        publicIdentifiers.add("TimeZoneNames_en_ZM");
        publicIdentifiers.add("TimeZoneNames_en_ZW");
        publicIdentifiers.add("TimeZoneNames_es");
        publicIdentifiers.add("TimeZoneNames_es_419");
        publicIdentifiers.add("TimeZoneNames_es_AR");
        publicIdentifiers.add("TimeZoneNames_es_BO");
        publicIdentifiers.add("TimeZoneNames_es_CL");
        publicIdentifiers.add("TimeZoneNames_es_CO");
        publicIdentifiers.add("TimeZoneNames_es_EC");
        publicIdentifiers.add("TimeZoneNames_es_MX");
        publicIdentifiers.add("TimeZoneNames_es_PE");
        publicIdentifiers.add("TimeZoneNames_es_US");
        publicIdentifiers.add("TimeZoneNames_es_UY");
        publicIdentifiers.add("TimeZoneNames_es_VE");
        publicIdentifiers.add("TimeZoneNames_et");
        publicIdentifiers.add("TimeZoneNames_eu");
        publicIdentifiers.add("TimeZoneNames_fa");
        publicIdentifiers.add("TimeZoneNames_ff_Adlm");
        publicIdentifiers.add("TimeZoneNames_fi");
        publicIdentifiers.add("TimeZoneNames_fil");
        publicIdentifiers.add("TimeZoneNames_fo");
        publicIdentifiers.add("TimeZoneNames_fr");
        publicIdentifiers.add("TimeZoneNames_fr_CA");
        publicIdentifiers.add("TimeZoneNames_fr_GF");
        publicIdentifiers.add("TimeZoneNames_fur");
        publicIdentifiers.add("TimeZoneNames_fy");
        publicIdentifiers.add("TimeZoneNames_ga");
        publicIdentifiers.add("TimeZoneNames_gd");
        publicIdentifiers.add("TimeZoneNames_gl");
        publicIdentifiers.add("TimeZoneNames_gsw");
        publicIdentifiers.add("TimeZoneNames_gu");
        publicIdentifiers.add("TimeZoneNames_ha");
        publicIdentifiers.add("TimeZoneNames_haw");
        publicIdentifiers.add("TimeZoneNames_he");
        publicIdentifiers.add("TimeZoneNames_hi");
        publicIdentifiers.add("TimeZoneNames_hi_Latn");
        publicIdentifiers.add("TimeZoneNames_hr");
        publicIdentifiers.add("TimeZoneNames_hsb");
        publicIdentifiers.add("TimeZoneNames_hu");
        publicIdentifiers.add("TimeZoneNames_hy");
        publicIdentifiers.add("TimeZoneNames_ia");
        publicIdentifiers.add("TimeZoneNames_id");
        publicIdentifiers.add("TimeZoneNames_ig");
        publicIdentifiers.add("TimeZoneNames_ii");
        publicIdentifiers.add("TimeZoneNames_is");
        publicIdentifiers.add("TimeZoneNames_it");
        publicIdentifiers.add("TimeZoneNames_ja");
        publicIdentifiers.add("TimeZoneNames_jv");
        publicIdentifiers.add("TimeZoneNames_ka");
        publicIdentifiers.add("TimeZoneNames_kea");
        publicIdentifiers.add("TimeZoneNames_kgp");
        publicIdentifiers.add("TimeZoneNames_kk");
        publicIdentifiers.add("TimeZoneNames_km");
        publicIdentifiers.add("TimeZoneNames_kn");
        publicIdentifiers.add("TimeZoneNames_ko");
        publicIdentifiers.add("TimeZoneNames_kok");
        publicIdentifiers.add("TimeZoneNames_ko_KP");
        publicIdentifiers.add("TimeZoneNames_ks");
        publicIdentifiers.add("TimeZoneNames_ks_Deva");
        publicIdentifiers.add("TimeZoneNames_ksh");
        publicIdentifiers.add("TimeZoneNames_ky");
        publicIdentifiers.add("TimeZoneNames_lb");
        publicIdentifiers.add("TimeZoneNames_lo");
        publicIdentifiers.add("TimeZoneNames_lrc");
        publicIdentifiers.add("TimeZoneNames_lt");
        publicIdentifiers.add("TimeZoneNames_lv");
        publicIdentifiers.add("TimeZoneNames_mai");
        publicIdentifiers.add("TimeZoneNames_mi");
        publicIdentifiers.add("TimeZoneNames_mk");
        publicIdentifiers.add("TimeZoneNames_ml");
        publicIdentifiers.add("TimeZoneNames_mn");
        publicIdentifiers.add("TimeZoneNames_mni");
        publicIdentifiers.add("TimeZoneNames_mr");
        publicIdentifiers.add("TimeZoneNames_ms");
        publicIdentifiers.add("TimeZoneNames_mt");
        publicIdentifiers.add("TimeZoneNames_my");
        publicIdentifiers.add("TimeZoneNames_ne");
        publicIdentifiers.add("TimeZoneNames_ne_IN");
        publicIdentifiers.add("TimeZoneNames_nl");
        publicIdentifiers.add("TimeZoneNames_nl_SR");
        publicIdentifiers.add("TimeZoneNames_nn");
        publicIdentifiers.add("TimeZoneNames_no");
        publicIdentifiers.add("TimeZoneNames_or");
        publicIdentifiers.add("TimeZoneNames_os");
        publicIdentifiers.add("TimeZoneNames_pa");
        publicIdentifiers.add("TimeZoneNames_pcm");
        publicIdentifiers.add("TimeZoneNames_pis");
        publicIdentifiers.add("TimeZoneNames_pl");
        publicIdentifiers.add("TimeZoneNamesProvider");
        publicIdentifiers.add("TimeZoneNames_ps");
        publicIdentifiers.add("TimeZoneNames_ps_PK");
        publicIdentifiers.add("TimeZoneNames_pt");
        publicIdentifiers.add("TimeZoneNames_pt_AO");
        publicIdentifiers.add("TimeZoneNames_pt_CV");
        publicIdentifiers.add("TimeZoneNames_pt_GW");
        publicIdentifiers.add("TimeZoneNames_pt_MO");
        publicIdentifiers.add("TimeZoneNames_pt_MZ");
        publicIdentifiers.add("TimeZoneNames_pt_PT");
        publicIdentifiers.add("TimeZoneNames_pt_ST");
        publicIdentifiers.add("TimeZoneNames_pt_TL");
        publicIdentifiers.add("TimeZoneNames_qu");
        publicIdentifiers.add("TimeZoneNames_qu_BO");
        publicIdentifiers.add("TimeZoneNames_qu_EC");
        publicIdentifiers.add("TimeZoneNames_raj");
        publicIdentifiers.add("TimeZoneNames_rm");
        publicIdentifiers.add("TimeZoneNames_ro");
        publicIdentifiers.add("TimeZoneNames_ru");
        publicIdentifiers.add("TimeZoneNames_sa");
        publicIdentifiers.add("TimeZoneNames_sah");
        publicIdentifiers.add("TimeZoneNames_sat");
        publicIdentifiers.add("TimeZoneNames_sc");
        publicIdentifiers.add("TimeZoneNames_sd");
        publicIdentifiers.add("TimeZoneNames_sd_Deva");
        publicIdentifiers.add("TimeZoneNames_se");
        publicIdentifiers.add("TimeZoneNames_se_FI");
        publicIdentifiers.add("TimeZoneNames_si");
        publicIdentifiers.add("TimeZoneNames_sk");
        publicIdentifiers.add("TimeZoneNames_sl");
        publicIdentifiers.add("TimeZoneNames_so");
        publicIdentifiers.add("TimeZoneNames_sq");
        publicIdentifiers.add("TimeZoneNames_sr");
        publicIdentifiers.add("TimeZoneNames_sr_Cyrl_BA");
        publicIdentifiers.add("TimeZoneNames_sr_Latn");
        publicIdentifiers.add("TimeZoneNames_sr_Latn_BA");
        publicIdentifiers.add("TimeZoneNames_su");
        publicIdentifiers.add("TimeZoneNames_sv");
        publicIdentifiers.add("TimeZoneNames_sw");
        publicIdentifiers.add("TimeZoneNames_sw_KE");
        publicIdentifiers.add("TimeZoneNames_ta");
        publicIdentifiers.add("TimeZoneNames_ta_MY");
        publicIdentifiers.add("TimeZoneNames_ta_SG");
        publicIdentifiers.add("TimeZoneNames_te");
        publicIdentifiers.add("TimeZoneNames_tg");
        publicIdentifiers.add("TimeZoneNames_th");
        publicIdentifiers.add("TimeZoneNames_ti");
        publicIdentifiers.add("TimeZoneNames_tk");
        publicIdentifiers.add("TimeZoneNames_to");
        publicIdentifiers.add("TimeZoneNames_tr");
        publicIdentifiers.add("TimeZoneNames_tt");
        publicIdentifiers.add("TimeZoneNames_ug");
        publicIdentifiers.add("TimeZoneNames_uk");
        publicIdentifiers.add("TimeZoneNames_ur");
        publicIdentifiers.add("TimeZoneNames_ur_IN");
        publicIdentifiers.add("TimeZoneNames_uz");
        publicIdentifiers.add("TimeZoneNames_uz_Arab");
        publicIdentifiers.add("TimeZoneNames_uz_Cyrl");
        publicIdentifiers.add("TimeZoneNames_vi");
        publicIdentifiers.add("TimeZoneNames_wae");
        publicIdentifiers.add("TimeZoneNames_wo");
        publicIdentifiers.add("TimeZoneNames_xh");
        publicIdentifiers.add("TimeZoneNames_yi");
        publicIdentifiers.add("TimeZoneNames_yo");
        publicIdentifiers.add("TimeZoneNames_yo_BJ");
        publicIdentifiers.add("TimeZoneNames_yrl");
        publicIdentifiers.add("TimeZoneNames_yrl_CO");
        publicIdentifiers.add("TimeZoneNames_yrl_VE");
        publicIdentifiers.add("TimeZoneNames_yue");
        publicIdentifiers.add("TimeZoneNames_yue_Hans");
        publicIdentifiers.add("TimeZoneNames_zh");
        publicIdentifiers.add("TimeZoneNames_zh_Hans_SG");
        publicIdentifiers.add("TimeZoneNames_zh_Hant");
        publicIdentifiers.add("TimeZoneNames_zh_Hant_HK");
        publicIdentifiers.add("TimeZoneNames_zu");
        publicIdentifiers.add("TIS_620");
        publicIdentifiers.add("TitledBorder");
        publicIdentifiers.add("TlsChannelBinding");
        publicIdentifiers.add("TlsChannelBindingImpl");
        publicIdentifiers.add("TlsKeyMaterialParameterSpec");
        publicIdentifiers.add("TlsKeyMaterialSpec");
        publicIdentifiers.add("TlsMasterSecret");
        publicIdentifiers.add("TlsMasterSecretParameterSpec");
        publicIdentifiers.add("TlsPrfGenerator$V10");
        publicIdentifiers.add("TlsPrfGenerator$V12");
        publicIdentifiers.add("TlsPrfParameterSpec");
        publicIdentifiers.add("TlsRsaPremasterSecretParameterSpec");
        publicIdentifiers.add("Todo");
        publicIdentifiers.add("ToDoubleBiFunction");
        publicIdentifiers.add("ToDoubleFunction");
        publicIdentifiers.add("ToggleActionPropertyChangeListener");
        publicIdentifiers.add("ToIntBiFunction");
        publicIdentifiers.add("ToIntFunction");
        publicIdentifiers.add("Token");
        publicIdentifiers.add("TokenMgrError");
        publicIdentifiers.add("Tokens");
        publicIdentifiers.add("Tokens$Comment");
        publicIdentifiers.add("Tokens$Token");
        publicIdentifiers.add("TokenTracker");
        publicIdentifiers.add("ToLongBiFunction");
        publicIdentifiers.add("ToLongFunction");
        publicIdentifiers.add("Tool");
        publicIdentifiers.add("ToolBarUI");
        publicIdentifiers.add("ToolEnvironment");
        publicIdentifiers.add("Toolkit");
        publicIdentifiers.add("ToolkitImage");
        publicIdentifiers.add("ToolkitThreadBlockedHandler");
        publicIdentifiers.add("ToolOptions");
        publicIdentifiers.add("ToolProvider");
        publicIdentifiers.add("ToolTipManager$insideTimerAction");
        publicIdentifiers.add("ToolTipManager$outsideTimerAction");
        publicIdentifiers.add("ToolTipManager$stillInsideTimerAction");
        publicIdentifiers.add("ToolTipUI");
        publicIdentifiers.add("TooManyListenersException");
        publicIdentifiers.add("ToplevelStateListener");
        publicIdentifiers.add("TopLevelWindowListener");
        publicIdentifiers.add("ToSAXHandler");
        publicIdentifiers.add("ToStream");
        publicIdentifiers.add("TransactionalWriter");
        publicIdentifiers.add("Transferable");
        publicIdentifiers.add("TransferableProxy");
        publicIdentifiers.add("TransferHandler");
        publicIdentifiers.add("TransferHandler$DropLocation");
        publicIdentifiers.add("TransferProtocolClient");
        publicIdentifiers.add("TransferQueue");
        publicIdentifiers.add("Transform");
        publicIdentifiers.add("TransformationException");
        publicIdentifiers.add("TransformBase64Decode");
        publicIdentifiers.add("TransformBlit");
        publicIdentifiers.add("TransformC14N");
        publicIdentifiers.add("TransformC14N11");
        publicIdentifiers.add("TransformC14N11_WithComments");
        publicIdentifiers.add("TransformC14NExclusive");
        publicIdentifiers.add("TransformC14NExclusiveWithComments");
        publicIdentifiers.add("TransformC14NWithComments");
        publicIdentifiers.add("TransformEnvelopedSignature");
        publicIdentifiers.add("Transformer");
        publicIdentifiers.add("TransformerConfigurationException");
        publicIdentifiers.add("TransformerException");
        publicIdentifiers.add("TransformerFactory");
        publicIdentifiers.add("TransformerFactoryConfigurationError");
        publicIdentifiers.add("TransformerFactoryImpl");
        publicIdentifiers.add("TransformerHandler");
        publicIdentifiers.add("TransformerHandlerImpl");
        publicIdentifiers.add("TransformerManager");
        publicIdentifiers.add("TransformErrorListener");
        publicIdentifiers.add("TransformException");
        publicIdentifiers.add("TransformHelper");
        publicIdentifiers.add("TransformParam");
        publicIdentifiers.add("TransformParameterSpec");
        publicIdentifiers.add("Transforms");
        publicIdentifiers.add("TransformService");
        publicIdentifiers.add("TransformSpi");
        publicIdentifiers.add("TransformStateSetter");
        publicIdentifiers.add("TransformXPath");
        publicIdentifiers.add("TransformXPath2Filter");
        publicIdentifiers.add("TransformXSLT");
        publicIdentifiers.add("Transient");
        publicIdentifiers.add("TransitedEncoding");
        publicIdentifiers.add("TransitionFrom");
        publicIdentifiers.add("TransitionTo");
        publicIdentifiers.add("Translator");
        publicIdentifiers.add("Translet");
        publicIdentifiers.add("TransletOutputHandlerFactory");
        publicIdentifiers.add("Transmitter");
        publicIdentifiers.add("Transparency");
        publicIdentifiers.add("TransPatterns");
        publicIdentifiers.add("Transport");
        publicIdentifiers.add("TransportConstants");
        publicIdentifiers.add("TransportFactory");
        publicIdentifiers.add("TransportFactoryImpl");
        publicIdentifiers.add("TransportImpl");
        publicIdentifiers.add("TransportService");
        publicIdentifiers.add("TransportService$Capabilities");
        publicIdentifiers.add("TransportService$ListenKey");
        publicIdentifiers.add("TransportTimeoutException");
        publicIdentifiers.add("TransTypes");
        publicIdentifiers.add("TraverseProc");
        publicIdentifiers.add("TrAXFilter");
        publicIdentifiers.add("TrayIcon");
        publicIdentifiers.add("TrayIconPeer");
        publicIdentifiers.add("Tree");
        publicIdentifiers.add("TreeCellEditor");
        publicIdentifiers.add("TreeCellRenderer");
        publicIdentifiers.add("TreeCopier");
        publicIdentifiers.add("TreeDiffer");
        publicIdentifiers.add("TreeExpansionEvent");
        publicIdentifiers.add("TreeExpansionListener");
        publicIdentifiers.add("TreeHasher");
        publicIdentifiers.add("TreeInfo");
        publicIdentifiers.add("TreeMaker");
        publicIdentifiers.add("TreeMap");
        publicIdentifiers.add("TreeModel");
        publicIdentifiers.add("TreeModelEvent");
        publicIdentifiers.add("TreeModelListener");
        publicIdentifiers.add("TreeNode");
        publicIdentifiers.add("TreePath");
        publicIdentifiers.add("TreePathScanner");
        publicIdentifiers.add("Trees");
        publicIdentifiers.add("TreeScanner");
        publicIdentifiers.add("TreeSelectionEvent");
        publicIdentifiers.add("TreeSelectionListener");
        publicIdentifiers.add("TreeSelectionModel");
        publicIdentifiers.add("TreeSet");
        publicIdentifiers.add("TreeTableModel");
        publicIdentifiers.add("TreeTableModelAdapter");
        publicIdentifiers.add("TreeTranslator");
        publicIdentifiers.add("TreeUI");
        publicIdentifiers.add("TreeVisitor");
        publicIdentifiers.add("TreeWalker");
        publicIdentifiers.add("TreeWalkerImpl");
        publicIdentifiers.add("TreeWillExpandListener");
        publicIdentifiers.add("TreeWriter");
        publicIdentifiers.add("Trie");
        publicIdentifiers.add("Trie$DataManipulate");
        publicIdentifiers.add("Trie2$Range");
        publicIdentifiers.add("Trie2$ValueMapper");
        publicIdentifiers.add("TrueTypeFont");
        publicIdentifiers.add("TrueTypeGlyphMapper");
        publicIdentifiers.add("TrustAnchor");
        publicIdentifiers.add("TrustManager");
        publicIdentifiers.add("TrustManagerFactory");
        publicIdentifiers.add("TrustManagerFactorySpi");
        publicIdentifiers.add("TryBlockWriter");
        publicIdentifiers.add("TryBlockWriter$NoteKind");
        publicIdentifiers.add("TryCatchBlockNode");
        publicIdentifiers.add("TryCatchBlockSorter");
        publicIdentifiers.add("TryTree");
        publicIdentifiers.add("TSRequest");
        publicIdentifiers.add("TTY");
        publicIdentifiers.add("TTYResources");
        publicIdentifiers.add("TTYResources_de");
        publicIdentifiers.add("TTYResources_ja");
        publicIdentifiers.add("TTYResources_zh_CN");
        publicIdentifiers.add("Type");
        publicIdentifiers.add("Type$ArrayType");
        publicIdentifiers.add("Type$CapturedType");
        publicIdentifiers.add("Type$ClassSigType");
        publicIdentifiers.add("Type$ClassType");
        publicIdentifiers.add("Type$DelegatedType");
        publicIdentifiers.add("Type$ErasedClassType");
        publicIdentifiers.add("Type$ErrorType");
        publicIdentifiers.add("Type$ForAll");
        publicIdentifiers.add("Type$IntersectionClassType");
        publicIdentifiers.add("Type$JCNoType");
        publicIdentifiers.add("Type$JCPrimitiveType");
        publicIdentifiers.add("Type$JCVoidType");
        publicIdentifiers.add("Type$MethodType");
        publicIdentifiers.add("Type$ModuleType");
        publicIdentifiers.add("Type$PackageType");
        publicIdentifiers.add("Type$SimpleType");
        publicIdentifiers.add("Type$StructuralTypeMapping");
        publicIdentifiers.add("Type$TypeParamType");
        publicIdentifiers.add("Type$TypeVar");
        publicIdentifiers.add("Type$UndetVar");
        publicIdentifiers.add("Type$UndetVar$InferenceBound");
        publicIdentifiers.add("Type$UndetVar$UndetVarListener");
        publicIdentifiers.add("Type$UnionClassType");
        publicIdentifiers.add("Type$UnknownType");
        publicIdentifiers.add("Type$Visitor");
        publicIdentifiers.add("Type$WildcardType");
        publicIdentifiers.add("Type1Font");
        publicIdentifiers.add("TypeAnnotation");
        publicIdentifiers.add("TypeAnnotation$Position");
        publicIdentifiers.add("TypeAnnotation$Position$TypePathEntry");
        publicIdentifiers.add("TypeAnnotationNode");
        publicIdentifiers.add("TypeAnnotationPosition");
        publicIdentifiers.add("TypeAnnotationPosition$TypePathEntry");
        publicIdentifiers.add("TypeAnnotations");
        publicIdentifiers.add("TypeAnnotationWriter");
        publicIdentifiers.add("TypeAnnotationWriter$Note");
        publicIdentifiers.add("TypeArgument");
        publicIdentifiers.add("TypeArray");
        publicIdentifiers.add("TypeArrayKlass");
        publicIdentifiers.add("TypeBasedGuardingDynamicLinker");
        publicIdentifiers.add("TypeCastTree");
        publicIdentifiers.add("TypeCheckError");
        publicIdentifiers.add("TypeCode");
        publicIdentifiers.add("TypeComponent");
        publicIdentifiers.add("TypeComponentImpl");
        publicIdentifiers.add("TypeDataBase");
        publicIdentifiers.add("TypeDeclSnippet");
        publicIdentifiers.add("TypeDescriptor");
        publicIdentifiers.add("TypeDescriptor$OfField");
        publicIdentifiers.add("TypeDescriptor$OfMethod");
        publicIdentifiers.add("TypedInstruction");
        publicIdentifiers.add("TypeElement");
        publicIdentifiers.add("TypeElementCatalog");
        publicIdentifiers.add("TypeEnter");
        publicIdentifiers.add("TypeEntries");
        publicIdentifiers.add("TypeEntriesAtCall");
        publicIdentifiers.add("TypeImpl");
        publicIdentifiers.add("TypeIndicators");
        publicIdentifiers.add("TypeInfo");
        publicIdentifiers.add("TypeInfoProvider");
        publicIdentifiers.add("TypeInsnNode");
        publicIdentifiers.add("TypeKindVisitor14");
        publicIdentifiers.add("TypeKindVisitor6");
        publicIdentifiers.add("TypeKindVisitor7");
        publicIdentifiers.add("TypeKindVisitor8");
        publicIdentifiers.add("TypeKindVisitor9");
        publicIdentifiers.add("TypeMetadata");
        publicIdentifiers.add("TypeMetadata$Annotations");
        publicIdentifiers.add("TypeMetadata$Entry");
        publicIdentifiers.add("TypeMirror");
        publicIdentifiers.add("TypeNode");
        publicIdentifiers.add("TypeNotPresentException");
        publicIdentifiers.add("TypeNotPresentExceptionProxy");
        publicIdentifiers.add("TypeParameterElement");
        publicIdentifiers.add("TypeParameterTree");
        publicIdentifiers.add("TypeReference");
        publicIdentifiers.add("Types");
        publicIdentifiers.add("Types$AdaptFailure");
        publicIdentifiers.add("Types$CandidatesCache");
        publicIdentifiers.add("Types$DefaultSymbolVisitor");
        publicIdentifiers.add("Types$DefaultTypeVisitor");
        publicIdentifiers.add("Types$FunctionDescriptorLookupError");
        publicIdentifiers.add("Types$MapVisitor");
        publicIdentifiers.add("Types$MostSpecificReturnCheck");
        publicIdentifiers.add("Types$SignatureGenerator");
        publicIdentifiers.add("Types$SignatureGenerator$InvalidSignatureException");
        publicIdentifiers.add("Types$SimpleVisitor");
        publicIdentifiers.add("Types$TypeMapping");
        publicIdentifiers.add("Types$TypeRelation");
        publicIdentifiers.add("Types$UnaryVisitor");
        publicIdentifiers.add("Types$UniqueType");
        publicIdentifiers.add("TypeSignature");
        publicIdentifiers.add("TypeStackSlotEntries");
        publicIdentifiers.add("TypeTag$NumericClasses");
        publicIdentifiers.add("TypeTree");
        publicIdentifiers.add("TypeTreeVisitor");
        publicIdentifiers.add("TypeValidator");
        publicIdentifiers.add("TypeVariable");
        publicIdentifiers.add("TypeVariableImpl");
        publicIdentifiers.add("TypeVariableSignature");
        publicIdentifiers.add("TypeVisitor");
        publicIdentifiers.add("U1Array");
        publicIdentifiers.add("U2Array");
        publicIdentifiers.add("UCharacter$HangulSyllableType");
        publicIdentifiers.add("UCharacter$JoiningGroup");
        publicIdentifiers.add("UCharacter$NumericType");
        publicIdentifiers.add("UCharacterEnums$ECharacterCategory");
        publicIdentifiers.add("UCharacterEnums$ECharacterDirection");
        publicIdentifiers.add("UCharacterIterator");
        publicIdentifiers.add("UCSReader");
        publicIdentifiers.add("UIAction");
        publicIdentifiers.add("UIClientPropertyKey");
        publicIdentifiers.add("UIDefaults");
        publicIdentifiers.add("UIDefaults$ActiveValue");
        publicIdentifiers.add("UIDefaults$LazyInputMap");
        publicIdentifiers.add("UIDefaults$LazyValue");
        publicIdentifiers.add("UIDefaults$ProxyLazyValue");
        publicIdentifiers.add("UIEvent");
        publicIdentifiers.add("UIManager");
        publicIdentifiers.add("UIManager$LookAndFeelInfo");
        publicIdentifiers.add("UIResource");
        publicIdentifiers.add("UnalignedAddressException");
        publicIdentifiers.add("UnaryOperation");
        publicIdentifiers.add("UnaryOperator");
        publicIdentifiers.add("UnaryTree");
        publicIdentifiers.add("UncheckedDocletException");
        publicIdentifiers.add("UncheckedIOException");
        publicIdentifiers.add("UncommonTrapBlob");
        publicIdentifiers.add("UnconditionalBranch");
        publicIdentifiers.add("UndeclaredThrowableException");
        publicIdentifiers.add("UndoableEdit");
        publicIdentifiers.add("UndoableEditEvent");
        publicIdentifiers.add("UndoableEditListener");
        publicIdentifiers.add("UndoableEditLockSupport");
        publicIdentifiers.add("UndoableEditSupport");
        publicIdentifiers.add("UndoManager");
        publicIdentifiers.add("UndoTree");
        publicIdentifiers.add("UnexpectedException");
        publicIdentifiers.add("UngrabEvent");
        publicIdentifiers.add("UnicastRef");
        publicIdentifiers.add("UnicastRef2");
        publicIdentifiers.add("UnicastRemoteObject");
        publicIdentifiers.add("UnicastServerRef");
        publicIdentifiers.add("UnicastServerRef2");
        publicIdentifiers.add("UnicodeEncoder");
        publicIdentifiers.add("UnicodeLocaleExtension");
        publicIdentifiers.add("UnicodeReader");
        publicIdentifiers.add("UnicodeSet");
        publicIdentifiers.add("UnicodeSetStringSpan");
        publicIdentifiers.add("UnImplNode");
        publicIdentifiers.add("UnionChildIterator");
        publicIdentifiers.add("UnionDV");
        publicIdentifiers.add("UnionLayout");
        publicIdentifiers.add("UnionPathIterator");
        publicIdentifiers.add("UnionPattern");
        publicIdentifiers.add("UnionType");
        publicIdentifiers.add("UnionTypeTree");
        publicIdentifiers.add("UniqueIdentity");
        publicIdentifiers.add("UniqueOrKey");
        publicIdentifiers.add("Units");
        publicIdentifiers.add("Universe");
        publicIdentifiers.add("UniverseExt");
        publicIdentifiers.add("UnixChannelFactory$Flags");
        publicIdentifiers.add("UnixFileSystem$Flags");
        publicIdentifiers.add("UnixFileSystemProvider");
        publicIdentifiers.add("UnixLoginModule");
        publicIdentifiers.add("UnixNumericGroupPrincipal");
        publicIdentifiers.add("UnixNumericUserPrincipal");
        publicIdentifiers.add("UnixOperatingSystemMXBean");
        publicIdentifiers.add("UnixPrincipal");
        publicIdentifiers.add("UnixPrintJob");
        publicIdentifiers.add("UnixPrintService");
        publicIdentifiers.add("UnixSurfaceManagerFactory");
        publicIdentifiers.add("UnixSystem");
        publicIdentifiers.add("UNIXToolkit");
        publicIdentifiers.add("UnixUserPrincipals");
        publicIdentifiers.add("UnknownAnnotationValueException");
        publicIdentifiers.add("UnknownAttributeReader");
        publicIdentifiers.add("UnknownBlockTagTree");
        publicIdentifiers.add("UnknownDirectiveException");
        publicIdentifiers.add("UnknownElementException");
        publicIdentifiers.add("UnknownEntityException");
        publicIdentifiers.add("UnknownError");
        publicIdentifiers.add("UnknownFormatConversionException");
        publicIdentifiers.add("UnknownFormatFlagsException");
        publicIdentifiers.add("UnknownHostException");
        publicIdentifiers.add("UnknownInlineTagTree");
        publicIdentifiers.add("UnknownOopException");
        publicIdentifiers.add("UnknownServiceException");
        publicIdentifiers.add("UnknownTypeException");
        publicIdentifiers.add("UnmappableCharacterException");
        publicIdentifiers.add("UnmappedAddressException");
        publicIdentifiers.add("UnmapperProxy");
        publicIdentifiers.add("UnmarshalException");
        publicIdentifiers.add("UnmodifiableClassException");
        publicIdentifiers.add("UnmodifiableHeaders");
        publicIdentifiers.add("UnmodifiableModuleException");
        publicIdentifiers.add("UnmodifiableSetException");
        publicIdentifiers.add("UnrecoverableEntryException");
        publicIdentifiers.add("UnrecoverableKeyException");
        publicIdentifiers.add("Unreferenced");
        publicIdentifiers.add("UnresolvedAddressException");
        publicIdentifiers.add("UnresolvedReferenceException");
        publicIdentifiers.add("UnsatisfiedLinkError");
        publicIdentifiers.add("UnsharedNameTable");
        publicIdentifiers.add("Unsigned");
        publicIdentifiers.add("Unsigned5");
        publicIdentifiers.add("Unsigned5$GetByte");
        publicIdentifiers.add("Unsigned5$Reader");
        publicIdentifiers.add("Unsigned5$SetPosition");
        publicIdentifiers.add("UnsolicitedNotification");
        publicIdentifiers.add("UnsolicitedNotificationEvent");
        publicIdentifiers.add("UnsolicitedNotificationListener");
        publicIdentifiers.add("UnsupportedAddressTypeException");
        publicIdentifiers.add("UnsupportedAudioFileException");
        publicIdentifiers.add("UnsupportedCallbackException");
        publicIdentifiers.add("UnsupportedCharsetException");
        publicIdentifiers.add("UnsupportedClassVersionError");
        publicIdentifiers.add("UnsupportedClassVersionException");
        publicIdentifiers.add("UnsupportedEncodingException");
        publicIdentifiers.add("UnsupportedFlavorException");
        publicIdentifiers.add("UnsupportedLookAndFeelException");
        publicIdentifiers.add("UnsupportedOperationException");
        publicIdentifiers.add("UnsupportedPlatformException");
        publicIdentifiers.add("UnsupportedTemporalTypeException");
        publicIdentifiers.add("UnsyncBufferedOutputStream");
        publicIdentifiers.add("UnsyncByteArrayOutputStream");
        publicIdentifiers.add("UpcallLinker");
        publicIdentifiers.add("Uri");
        publicIdentifiers.add("URI");
        publicIdentifiers.add("URI$MalformedURIException");
        publicIdentifiers.add("URIDereferencer");
        publicIdentifiers.add("URIException");
        publicIdentifiers.add("URIName");
        publicIdentifiers.add("URIParameter");
        publicIdentifiers.add("URIReference");
        publicIdentifiers.add("URIReferenceException");
        publicIdentifiers.add("URIResolver");
        publicIdentifiers.add("URISyntax");
        publicIdentifiers.add("URISyntaxException");
        publicIdentifiers.add("URLClassLoader");
        publicIdentifiers.add("URLClassPath");
        publicIdentifiers.add("URLConnection");
        publicIdentifiers.add("URLDecoder");
        publicIdentifiers.add("URLEncoder");
        publicIdentifiers.add("URLImageSource");
        publicIdentifiers.add("URLJarFile");
        publicIdentifiers.add("URLJarFile$URLJarFileCloseController");
        publicIdentifiers.add("URLJarFileCallBack");
        publicIdentifiers.add("URLStreamHandler");
        publicIdentifiers.add("URLStreamHandlerFactory");
        publicIdentifiers.add("URLStreamHandlerProvider");
        publicIdentifiers.add("URLUtil");
        publicIdentifiers.add("US_ASCII");
        publicIdentifiers.add("UserDataHandler");
        publicIdentifiers.add("UserDefinedFileAttributeView");
        publicIdentifiers.add("UserInterruptException");
        publicIdentifiers.add("UserPrincipal");
        publicIdentifiers.add("UserPrincipalLookupService");
        publicIdentifiers.add("UserPrincipalNotFoundException");
        publicIdentifiers.add("UserSessionListener");
        publicIdentifiers.add("UsesTree");
        publicIdentifiers.add("UTF_16");
        publicIdentifiers.add("UTF_16BE");
        publicIdentifiers.add("UTF_16LE");
        publicIdentifiers.add("UTF_32");
        publicIdentifiers.add("UTF_32BE");
        publicIdentifiers.add("UTF_32BE_BOM");
        publicIdentifiers.add("UTF_32Coder$Decoder");
        publicIdentifiers.add("UTF_32Coder$Encoder");
        publicIdentifiers.add("UTF_32LE");
        publicIdentifiers.add("UTF_32LE_BOM");
        publicIdentifiers.add("UTF8Reader");
        publicIdentifiers.add("UTFDataFormatException");
        publicIdentifiers.add("Util");
        publicIdentifiers.add("Utilities");
        publicIdentifiers.add("Utility");
        publicIdentifiers.add("Utils");
        publicIdentifiers.add("Utils$CopyKeyAdapter");
        publicIdentifiers.add("Utils$EditFocusAdapter");
        publicIdentifiers.add("Utils$Pair");
        publicIdentifiers.add("Utils$PreviewFlagProvider");
        publicIdentifiers.add("Utils$ReadOnlyTableCellEditor");
        publicIdentifiers.add("Utils$ServerName");
    }

    private void addPublicIdentifiersVZ() {
        publicIdentifiers.add("Void");
        publicIdentifiers.add("ValidatedInfo");
        publicIdentifiers.add("ValidatePipe");
        publicIdentifiers.add("ValidationContext");
        publicIdentifiers.add("ValidationManager");
        publicIdentifiers.add("ValidationState");
        publicIdentifiers.add("Validator");
        publicIdentifiers.add("ValidatorException");
        publicIdentifiers.add("ValidatorHandler");
        publicIdentifiers.add("VaList");
        publicIdentifiers.add("VaList$Builder");
        publicIdentifiers.add("Value");
        publicIdentifiers.add("ValueBased");
        publicIdentifiers.add("ValueConversionException");
        publicIdentifiers.add("ValueConversions");
        publicIdentifiers.add("ValueConverter");
        publicIdentifiers.add("ValueExp");
        publicIdentifiers.add("ValueKind");
        publicIdentifiers.add("ValueKindFactory");
        publicIdentifiers.add("ValueLayout");
        publicIdentifiers.add("ValueLayout$OfAddress");
        publicIdentifiers.add("ValueLayout$OfBoolean");
        publicIdentifiers.add("ValueLayout$OfByte");
        publicIdentifiers.add("ValueLayout$OfChar");
        publicIdentifiers.add("ValueLayout$OfDouble");
        publicIdentifiers.add("ValueLayout$OfFloat");
        publicIdentifiers.add("ValueLayout$OfInt");
        publicIdentifiers.add("ValueLayout$OfLong");
        publicIdentifiers.add("ValueLayout$OfShort");
        publicIdentifiers.add("ValueObject");
        publicIdentifiers.add("ValueStore");
        publicIdentifiers.add("ValueTaglet");
        publicIdentifiers.add("ValueTree");
        publicIdentifiers.add("VarHandle");
        publicIdentifiers.add("Variability");
        publicIdentifiers.add("Variable");
        publicIdentifiers.add("VariableElement");
        publicIdentifiers.add("VariableGridLayout");
        publicIdentifiers.add("VariableHeightLayoutCache");
        publicIdentifiers.add("VariableLengthInstruction");
        publicIdentifiers.add("VariableSafeAbsRef");
        publicIdentifiers.add("VariableStack");
        publicIdentifiers.add("VariableTree");
        publicIdentifiers.add("VarInsnNode");
        publicIdentifiers.add("VarSnippet");
        publicIdentifiers.add("Vector");
        publicIdentifiers.add("VectorMask");
        publicIdentifiers.add("VectorOperators");
        publicIdentifiers.add("VectorOperators$Associative");
        publicIdentifiers.add("VectorOperators$Binary");
        publicIdentifiers.add("VectorOperators$Comparison");
        publicIdentifiers.add("VectorOperators$Conversion");
        publicIdentifiers.add("VectorOperators$Operator");
        publicIdentifiers.add("VectorOperators$Ternary");
        publicIdentifiers.add("VectorOperators$Test");
        publicIdentifiers.add("VectorOperators$Unary");
        publicIdentifiers.add("VectorShuffle");
        publicIdentifiers.add("VectorSpecies");
        publicIdentifiers.add("VectorSupport");
        publicIdentifiers.add("VectorSupport$BinaryOperation");
        publicIdentifiers.add("VectorSupport$CompressExpandOperation");
        publicIdentifiers.add("VectorSupport$FromBitsCoercedOperation");
        publicIdentifiers.add("VectorSupport$IndexOperation");
        publicIdentifiers.add("VectorSupport$LoadOperation");
        publicIdentifiers.add("VectorSupport$LoadVectorMaskedOperation");
        publicIdentifiers.add("VectorSupport$LoadVectorOperationWithMap");
        publicIdentifiers.add("VectorSupport$ReductionOperation");
        publicIdentifiers.add("VectorSupport$ShuffleIotaOperation");
        publicIdentifiers.add("VectorSupport$ShuffleToVectorOperation");
        publicIdentifiers.add("VectorSupport$StoreVectorMaskedOperation");
        publicIdentifiers.add("VectorSupport$StoreVectorOperation");
        publicIdentifiers.add("VectorSupport$StoreVectorOperationWithMap");
        publicIdentifiers.add("VectorSupport$TernaryOperation");
        publicIdentifiers.add("VectorSupport$UnaryOperation");
        publicIdentifiers.add("VectorSupport$VecExtractOp");
        publicIdentifiers.add("VectorSupport$VecInsertOp");
        publicIdentifiers.add("VectorSupport$Vector");
        publicIdentifiers.add("VectorSupport$VectorBlendOp");
        publicIdentifiers.add("VectorSupport$VectorBroadcastIntOp");
        publicIdentifiers.add("VectorSupport$VectorCompareOp");
        publicIdentifiers.add("VectorSupport$VectorConvertOp");
        publicIdentifiers.add("VectorSupport$VectorMask");
        publicIdentifiers.add("VectorSupport$VectorMaskOp");
        publicIdentifiers.add("VectorSupport$VectorPayload");
        publicIdentifiers.add("VectorSupport$VectorRearrangeOp");
        publicIdentifiers.add("VectorSupport$VectorShuffle");
        publicIdentifiers.add("VectorSupport$VectorSpecies");
        publicIdentifiers.add("VerifiedReference");
        publicIdentifiers.add("VerifyAccess");
        publicIdentifiers.add("VerifyError");
        publicIdentifiers.add("VerifyType");
        publicIdentifiers.add("Version");
        publicIdentifiers.add("VersionHelper");
        publicIdentifiers.add("VersionTree");
        publicIdentifiers.add("VetoableChangeListener");
        publicIdentifiers.add("VetoableChangeListenerProxy");
        publicIdentifiers.add("VetoableChangeSupport");
        publicIdentifiers.add("VFrame");
        publicIdentifiers.add("View");
        publicIdentifiers.add("ViewCSS");
        publicIdentifiers.add("ViewFactory");
        publicIdentifiers.add("ViewMenu");
        publicIdentifiers.add("ViewportLayout");
        publicIdentifiers.add("ViewportUI");
        publicIdentifiers.add("VirtualBaseConstructor");
        publicIdentifiers.add("VirtualCallData");
        publicIdentifiers.add("VirtualCallTypeData");
        publicIdentifiers.add("VirtualConstructor");
        publicIdentifiers.add("VirtualMachine");
        publicIdentifiers.add("VirtualMachineDescriptor");
        publicIdentifiers.add("VirtualMachineError");
        publicIdentifiers.add("VirtualMachineImpl");
        publicIdentifiers.add("VirtualMachineManager");
        publicIdentifiers.add("VirtualMachineManagerImpl");
        publicIdentifiers.add("VirtualMachineManagerService");
        publicIdentifiers.add("VirtualObject$LayoutVerifier");
        publicIdentifiers.add("virtual_parse_stack");
        publicIdentifiers.add("VirtualSpace");
        publicIdentifiers.add("VirtualThreadEndEvent");
        publicIdentifiers.add("VirtualThreadPinnedEvent");
        publicIdentifiers.add("VirtualThreadStartEvent");
        publicIdentifiers.add("VirtualThreadSubmitFailedEvent");
        publicIdentifiers.add("Visibility");
        publicIdentifiers.add("VisibleMemberCache");
        publicIdentifiers.add("VisibleMemberTable");
        publicIdentifiers.add("Visitor");
        publicIdentifiers.add("Visual");
        publicIdentifiers.add("VM");
        publicIdentifiers.add("VM$BufferPool");
        publicIdentifiers.add("VMCannotBeModifiedException");
        publicIdentifiers.add("VMConstant");
        publicIdentifiers.add("VMDeathEvent");
        publicIdentifiers.add("VMDeathRequest");
        publicIdentifiers.add("VMDisconnectedException");
        publicIdentifiers.add("VMDisconnectEvent");
        publicIdentifiers.add("VmEvent");
        publicIdentifiers.add("VMFlagsPanel");
        publicIdentifiers.add("VmIdentifier");
        publicIdentifiers.add("VMInternalFrame");
        publicIdentifiers.add("VmListener");
        publicIdentifiers.add("VMManagement");
        publicIdentifiers.add("VMMismatchException");
        publicIdentifiers.add("VMModifiers");
        publicIdentifiers.add("VMNotConnectedException");
        publicIdentifiers.add("VMObject");
        publicIdentifiers.add("VMObjectFactory");
        publicIdentifiers.add("VMOopHandle");
        publicIdentifiers.add("VMOption");
        publicIdentifiers.add("VMOptionCompositeData");
        publicIdentifiers.add("VMOutOfMemoryException");
        publicIdentifiers.add("VMPanel");
        publicIdentifiers.add("VMReg");
        publicIdentifiers.add("VMRegImpl");
        publicIdentifiers.add("VMStartEvent");
        publicIdentifiers.add("VMStartException");
        publicIdentifiers.add("VmStatusChangeEvent");
        publicIdentifiers.add("VMSupport");
        publicIdentifiers.add("vmSymbols");
        publicIdentifiers.add("VMVersionInfoPanel");
        publicIdentifiers.add("VMVersionMismatchException");
        publicIdentifiers.add("VoiceStatus");
        publicIdentifiers.add("VoidDescriptor");
        publicIdentifiers.add("VoidType");
        publicIdentifiers.add("VoidTypeImpl");
        publicIdentifiers.add("VoidValue");
        publicIdentifiers.add("VoidValueImpl");
        publicIdentifiers.add("VolatileCallSite");
        publicIdentifiers.add("VolatileImage");
        publicIdentifiers.add("VolatileSurfaceManager");
        publicIdentifiers.add("VSyncedBSManager");
        publicIdentifiers.add("VtableBlob");
        publicIdentifiers.add("VtblAccess");
        publicIdentifiers.add("WalkerFactory");
        publicIdentifiers.add("WalkingIterator");
        publicIdentifiers.add("WalkingIteratorSorted");
        publicIdentifiers.add("Warner");
        publicIdentifiers.add("Watchable");
        publicIdentifiers.add("WatcherThread");
        publicIdentifiers.add("WatchEvent");
        publicIdentifiers.add("WatchEvent$Kind");
        publicIdentifiers.add("WatchEvent$Modifier");
        publicIdentifiers.add("WatchKey");
        publicIdentifiers.add("WatchpointEvent");
        publicIdentifiers.add("WatchpointRequest");
        publicIdentifiers.add("WatchService");
        publicIdentifiers.add("wav");
        publicIdentifiers.add("WBMPImageReader");
        publicIdentifiers.add("WBMPImageReaderSpi");
        publicIdentifiers.add("WBMPImageWriter");
        publicIdentifiers.add("WBMPImageWriterSpi");
        publicIdentifiers.add("WBMPMetadata");
        publicIdentifiers.add("WBMPMetadataFormat");
        publicIdentifiers.add("WeakClassHashMap");
        publicIdentifiers.add("WeakHashMap");
        publicIdentifiers.add("WeakReference");
        publicIdentifiers.add("WebRowSet");
        publicIdentifiers.add("WebRowSetImpl");
        publicIdentifiers.add("WebRowSetXmlReader");
        publicIdentifiers.add("WebRowSetXmlWriter");
        publicIdentifiers.add("WebSocket");
        publicIdentifiers.add("WebSocket$Builder");
        publicIdentifiers.add("WebSocket$Listener");
        publicIdentifiers.add("WebSocketRequest");
        publicIdentifiers.add("WhileLoopTree");
        publicIdentifiers.add("WhitespaceStrippingElementMatcher");
        publicIdentifiers.add("Widget");
        publicIdentifiers.add("Wildcard");
        publicIdentifiers.add("WildcardTree");
        publicIdentifiers.add("WildcardType");
        publicIdentifiers.add("WildcardTypeImpl");
        publicIdentifiers.add("Win32AARCH64JavaThreadPDAccess");
        publicIdentifiers.add("Win32AMD64JavaThreadPDAccess");
        publicIdentifiers.add("Win32VtblAccess");
        publicIdentifiers.add("Win32X86JavaThreadPDAccess");
        publicIdentifiers.add("WindbgAARCH64ThreadFactory");
        publicIdentifiers.add("WindbgAMD64ThreadFactory");
        publicIdentifiers.add("WindbgDebugger");
        publicIdentifiers.add("WindbgDebuggerLocal");
        publicIdentifiers.add("WindbgThreadFactory");
        publicIdentifiers.add("WindbgX86ThreadFactory");
        publicIdentifiers.add("Window");
        publicIdentifiers.add("Window$AccessibleAWTWindow");
        publicIdentifiers.add("WindowAdapter");
        publicIdentifiers.add("WindowConstants");
        publicIdentifiers.add("WindowEvent");
        publicIdentifiers.add("WindowFocusListener");
        publicIdentifiers.add("WindowIDProvider");
        publicIdentifiers.add("WindowListener");
        publicIdentifiers.add("WindowPeer");
        publicIdentifiers.add("WindowPropertyGetter");
        publicIdentifiers.add("WindowsAMD64CFrame");
        publicIdentifiers.add("WindowsKeybindings");
        publicIdentifiers.add("WindowsNTSubsystem");
        publicIdentifiers.add("WindowsPlacesBar");
        publicIdentifiers.add("WindowStateListener");
        publicIdentifiers.add("WindowsX86CFrame");
        publicIdentifiers.add("WindowUpdateFrame");
        publicIdentifiers.add("WinVaList");
        publicIdentifiers.add("WinVaList$Builder");
        publicIdentifiers.add("WizardDlg");
        publicIdentifiers.add("WorkArounds");
        publicIdentifiers.add("Worker");
        publicIdentifiers.add("WorkerThread");
        publicIdentifiers.add("Wrap$CompoundWrap");
        publicIdentifiers.add("WrappedPlainView");
        publicIdentifiers.add("WrappedRuntimeException");
        publicIdentifiers.add("WrappedSAXException");
        publicIdentifiers.add("Wrapper");
        publicIdentifiers.add("WrapperInstance");
        publicIdentifiers.add("WrappingJavaFileManager");
        publicIdentifiers.add("WritableByteChannel");
        publicIdentifiers.add("WritableRaster");
        publicIdentifiers.add("WritableRasterNative");
        publicIdentifiers.add("WritableRenderedImage");
        publicIdentifiers.add("WriteAbortedException");
        publicIdentifiers.add("WritePendingException");
        publicIdentifiers.add("Writer");
        publicIdentifiers.add("WriterFactory");
        publicIdentifiers.add("WriterFactoryImpl");
        publicIdentifiers.add("WriterOutputStream");
        publicIdentifiers.add("WriterUtility");
        publicIdentifiers.add("WrongMethodTypeException");
        publicIdentifiers.add("WrongNumberArgsException");
        publicIdentifiers.add("WrongParserException");
        publicIdentifiers.add("WrongTypeException");
        publicIdentifiers.add("X11ComponentPeer");
        publicIdentifiers.add("X11CustomCursor");
        publicIdentifiers.add("X11Dingbats");
        publicIdentifiers.add("X11GB18030_0");
        publicIdentifiers.add("X11GB18030_1");
        publicIdentifiers.add("X11GB2312");
        publicIdentifiers.add("X11GBK");
        publicIdentifiers.add("X11GraphicsConfig");
        publicIdentifiers.add("X11InputMethod");
        publicIdentifiers.add("X11InputMethodBase");
        publicIdentifiers.add("X11InputMethodDescriptor");
        publicIdentifiers.add("X11Johab");
        publicIdentifiers.add("X11KSC5601");
        publicIdentifiers.add("X11PMBlitBgLoops");
        publicIdentifiers.add("X11PMBlitLoops");
        publicIdentifiers.add("X11Renderer");
        publicIdentifiers.add("X11Renderer$X11TracingRenderer");
        publicIdentifiers.add("X11SunUnicode_0");
        publicIdentifiers.add("X11SurfaceData");
        publicIdentifiers.add("X11SurfaceData$LazyPipe");
        publicIdentifiers.add("X11SurfaceDataProxy");
        publicIdentifiers.add("X11SurfaceDataProxy$Bitmask");
        publicIdentifiers.add("X11SurfaceDataProxy$Opaque");
        publicIdentifiers.add("X11TextRenderer");
        publicIdentifiers.add("X11TextRenderer$Tracer");
        publicIdentifiers.add("X11VolatileSurfaceManager");
        publicIdentifiers.add("X400Address");
        publicIdentifiers.add("X500Name");
        publicIdentifiers.add("X509Certificate");
        publicIdentifiers.add("X509CertificatePair");
        publicIdentifiers.add("X509CertificateResolver");
        publicIdentifiers.add("X509CertImpl");
        publicIdentifiers.add("X509CertInfo");
        publicIdentifiers.add("X509CertPath");
        publicIdentifiers.add("X509CertSelector");
        publicIdentifiers.add("X509CRL");
        publicIdentifiers.add("X509CRLEntry");
        publicIdentifiers.add("X509CRLEntryImpl");
        publicIdentifiers.add("X509CRLImpl");
        publicIdentifiers.add("X509CRLImpl$TBSCertList");
        publicIdentifiers.add("X509CRLSelector");
        publicIdentifiers.add("X509Data");
        publicIdentifiers.add("X509DigestResolver");
        publicIdentifiers.add("X509EncodedKeySpec");
        publicIdentifiers.add("X509ExtendedKeyManager");
        publicIdentifiers.add("X509ExtendedTrustManager");
        publicIdentifiers.add("X509Extension");
        publicIdentifiers.add("X509Factory");
        publicIdentifiers.add("X509IssuerSerial");
        publicIdentifiers.add("X509IssuerSerialResolver");
        publicIdentifiers.add("X509Key");
        publicIdentifiers.add("X509KeyManager");
        publicIdentifiers.add("X509SKIResolver");
        publicIdentifiers.add("X509SubjectNameResolver");
        publicIdentifiers.add("X509TrustManager");
        publicIdentifiers.add("X86_64Architecture");
        publicIdentifiers.add("X86_64Architecture$Regs");
        publicIdentifiers.add("X86_64Architecture$StorageType");
        publicIdentifiers.add("X86CurrentFrameGuess");
        publicIdentifiers.add("X86Frame");
        publicIdentifiers.add("X86JavaCallWrapper");
        publicIdentifiers.add("X86RegisterMap");
        publicIdentifiers.add("X86ThreadContext");
        publicIdentifiers.add("XAbstractMenuItem");
        publicIdentifiers.add("XAConnection");
        publicIdentifiers.add("XAConnectionBuilder");
        publicIdentifiers.add("XADataSource");
        publicIdentifiers.add("XAException");
        publicIdentifiers.add("x_aiff");
        publicIdentifiers.add("XalanXPathFactory");
        publicIdentifiers.add("XAnyEvent");
        publicIdentifiers.add("XAResource");
        publicIdentifiers.add("XBaseMenuWindow");
        publicIdentifiers.add("XBaseWindow");
        publicIdentifiers.add("XbmImageDecoder");
        publicIdentifiers.add("XBoolean");
        publicIdentifiers.add("XBooleanStatic");
        publicIdentifiers.add("XButtonEvent");
        publicIdentifiers.add("XButtonPeer");
        publicIdentifiers.add("XcbRequestCounter");
        publicIdentifiers.add("XCirculateEvent");
        publicIdentifiers.add("XCirculateRequestEvent");
        publicIdentifiers.add("XClientMessageEvent");
        publicIdentifiers.add("XColor");
        publicIdentifiers.add("XColormapEvent");
        publicIdentifiers.add("XComponentPeer");
        publicIdentifiers.add("XConfigureEvent");
        publicIdentifiers.add("XConfigureRequestEvent");
        publicIdentifiers.add("XCreateWindowEvent");
        publicIdentifiers.add("XCreateWindowParams");
        publicIdentifiers.add("XCrossingEvent");
        publicIdentifiers.add("XCustomCursor");
        publicIdentifiers.add("XDataTransferer");
        publicIdentifiers.add("XDataViewer");
        publicIdentifiers.add("XDesktopPeer");
        publicIdentifiers.add("XDestroyWindowEvent");
        publicIdentifiers.add("XDHKeyAgreement");
        publicIdentifiers.add("XDHKeyFactory");
        publicIdentifiers.add("XDHKeyPairGenerator");
        publicIdentifiers.add("XDragSourceProtocol$TargetWindowInfo");
        publicIdentifiers.add("XECKey");
        publicIdentifiers.add("XECOperations");
        publicIdentifiers.add("XECParameters");
        publicIdentifiers.add("XECPrivateKey");
        publicIdentifiers.add("XECPrivateKeySpec");
        publicIdentifiers.add("XECPublicKey");
        publicIdentifiers.add("XECPublicKeySpec");
        publicIdentifiers.add("XEmbedCanvasPeer");
        publicIdentifiers.add("XEmbedChildProxy");
        publicIdentifiers.add("XEmbedChildProxyPeer");
        publicIdentifiers.add("XEmbedClientHelper");
        publicIdentifiers.add("XEmbeddedFrame");
        publicIdentifiers.add("XEmbeddedFramePeer");
        publicIdentifiers.add("XEmbeddingContainer");
        publicIdentifiers.add("XEmbedHelper");
        publicIdentifiers.add("XEmbedServerTester");
        publicIdentifiers.add("XErrorEvent");
        publicIdentifiers.add("XErrorHandler");
        publicIdentifiers.add("XErrorHandler$IgnoreBadWindowHandler");
        publicIdentifiers.add("XErrorHandler$VerifyChangePropertyHandler");
        publicIdentifiers.add("XErrorHandler$XBaseErrorHandler");
        publicIdentifiers.add("XEvent");
        publicIdentifiers.add("XEventDispatcher");
        publicIdentifiers.add("XException");
        publicIdentifiers.add("XExposeEvent");
        publicIdentifiers.add("XExtData");
        publicIdentifiers.add("XFocusChangeEvent");
        publicIdentifiers.add("XFocusProxyWindow");
        publicIdentifiers.add("XGraphicsExposeEvent");
        publicIdentifiers.add("XGravityEvent");
        publicIdentifiers.add("XHTMLSerializer");
        publicIdentifiers.add("XIconSize");
        publicIdentifiers.add("XIconWindow");
        publicIdentifiers.add("Xid");
        publicIdentifiers.add("XIDGenerator");
        publicIdentifiers.add("XInclude11TextReader");
        publicIdentifiers.add("XIncludeAwareParserConfiguration");
        publicIdentifiers.add("XIncludeHandler");
        publicIdentifiers.add("XIncludeHandler$Notation");
        publicIdentifiers.add("XIncludeHandler$UnparsedEntity");
        publicIdentifiers.add("XIncludeMessageFormatter");
        publicIdentifiers.add("XIncludeNamespaceSupport");
        publicIdentifiers.add("XIncludeParserConfiguration");
        publicIdentifiers.add("XIncludeTextReader");
        publicIdentifiers.add("XInputMethod");
        publicIdentifiers.add("XkbAccessXNotifyEvent");
        publicIdentifiers.add("XkbActionMessageEvent");
        publicIdentifiers.add("XkbAnyEvent");
        publicIdentifiers.add("XkbBellNotifyEvent");
        publicIdentifiers.add("XkbCompatMapNotifyEvent");
        publicIdentifiers.add("XkbControlsNotifyEvent");
        publicIdentifiers.add("XkbEvent");
        publicIdentifiers.add("XkbExtensionDeviceNotifyEvent");
        publicIdentifiers.add("XkbIndicatorNotifyEvent");
        publicIdentifiers.add("XkbMapNotifyEvent");
        publicIdentifiers.add("XkbNamesNotifyEvent");
        publicIdentifiers.add("XkbNewKeyboardNotifyEvent");
        publicIdentifiers.add("XkbStateNotifyEvent");
        publicIdentifiers.add("XKeyboardFocusManagerPeer");
        publicIdentifiers.add("XKeyEvent");
        publicIdentifiers.add("XKeymapEvent");
        publicIdentifiers.add("XKeysym");
        publicIdentifiers.add("XKeySymConstants");
        publicIdentifiers.add("XLayerProtocol");
        publicIdentifiers.add("XlibUtil");
        publicIdentifiers.add("XLightweightFramePeer");
        publicIdentifiers.add("XMapEvent");
        publicIdentifiers.add("XMappingEvent");
        publicIdentifiers.add("XMapRequestEvent");
        publicIdentifiers.add("XMBean");
        publicIdentifiers.add("XMBeanAttributes");
        publicIdentifiers.add("XMBeanInfo");
        publicIdentifiers.add("XMBeanNotifications");
        publicIdentifiers.add("XMBeanOperations");
        publicIdentifiers.add("XMenuBarPeer");
        publicIdentifiers.add("XMenuItemPeer");
        publicIdentifiers.add("XMenuPeer");
        publicIdentifiers.add("XMenuWindow");
        publicIdentifiers.add("XML11Char");
        publicIdentifiers.add("XML11Configurable");
        publicIdentifiers.add("XML11Configuration");
        publicIdentifiers.add("XML11DocumentScannerImpl");
        publicIdentifiers.add("XML11DTDConfiguration");
        publicIdentifiers.add("XML11DTDDVFactoryImpl");
        publicIdentifiers.add("XML11DTDProcessor");
        publicIdentifiers.add("XML11DTDScannerImpl");
        publicIdentifiers.add("XML11DTDValidator");
        publicIdentifiers.add("XML11EntityScanner");
        publicIdentifiers.add("XML11IDDatatypeValidator");
        publicIdentifiers.add("XML11IDREFDatatypeValidator");
        publicIdentifiers.add("XML11NamespaceBinder");
        publicIdentifiers.add("XML11NMTOKENDatatypeValidator");
        publicIdentifiers.add("XML11NonValidatingConfiguration");
        publicIdentifiers.add("XML11NSDocumentScannerImpl");
        publicIdentifiers.add("XML11NSDTDValidator");
        publicIdentifiers.add("XML11Serializer");
        publicIdentifiers.add("XMLAttributeDecl");
        publicIdentifiers.add("XMLAttributes");
        publicIdentifiers.add("XMLAttributesImpl");
        publicIdentifiers.add("XMLAttributesIteratorImpl");
        publicIdentifiers.add("XMLBufferListener");
        publicIdentifiers.add("XMLChar");
        publicIdentifiers.add("XMLCharacterRecognizer");
        publicIdentifiers.add("XMLComponent");
        publicIdentifiers.add("XMLComponentManager");
        publicIdentifiers.add("XMLConfigurationException");
        publicIdentifiers.add("XMLContentSpec");
        publicIdentifiers.add("XMLContentSpec$Provider");
        publicIdentifiers.add("XMLCryptoContext");
        publicIdentifiers.add("XMLDecoder");
        publicIdentifiers.add("XMLDocumentFilter");
        publicIdentifiers.add("XMLDocumentFilterImpl");
        publicIdentifiers.add("XMLDocumentFragmentHandler");
        publicIdentifiers.add("XMLDocumentFragmentScannerImpl");
        publicIdentifiers.add("XMLDocumentFragmentScannerImpl$Driver");
        publicIdentifiers.add("XMLDocumentFragmentScannerImpl$ElementStack");
        publicIdentifiers.add("XMLDocumentFragmentScannerImpl$ElementStack2");
        publicIdentifiers.add("XMLDocumentFragmentScannerImpl$FragmentContentDriver");
        publicIdentifiers.add("XMLDocumentHandler");
        publicIdentifiers.add("XMLDocumentParser");
        publicIdentifiers.add("XMLDocumentScanner");
        publicIdentifiers.add("XMLDocumentScannerImpl");
        publicIdentifiers.add("XMLDocumentScannerImpl$ContentDriver");
        publicIdentifiers.add("XMLDocumentSource");
        publicIdentifiers.add("XMLDOMWriterImpl");
        publicIdentifiers.add("XMLDTDContentModelFilter");
        publicIdentifiers.add("XMLDTDContentModelHandler");
        publicIdentifiers.add("XMLDTDContentModelSource");
        publicIdentifiers.add("XMLDTDDescription");
        publicIdentifiers.add("XMLDTDFilter");
        publicIdentifiers.add("XMLDTDHandler");
        publicIdentifiers.add("XMLDTDLoader");
        publicIdentifiers.add("XMLDTDProcessor");
        publicIdentifiers.add("XMLDTDScanner");
        publicIdentifiers.add("XMLDTDScannerImpl");
        publicIdentifiers.add("XMLDTDSource");
        publicIdentifiers.add("XMLDTDValidator");
        publicIdentifiers.add("XMLDTDValidatorFilter");
        publicIdentifiers.add("XMLElementDecl");
        publicIdentifiers.add("XMLEncoder");
        publicIdentifiers.add("XMLEntityDecl");
        publicIdentifiers.add("XMLEntityDescription");
        publicIdentifiers.add("XMLEntityDescriptionImpl");
        publicIdentifiers.add("XMLEntityHandler");
        publicIdentifiers.add("XMLEntityManager");
        publicIdentifiers.add("XMLEntityReader");
        publicIdentifiers.add("XMLEntityResolver");
        publicIdentifiers.add("XMLEntityScanner");
        publicIdentifiers.add("XMLEntityStorage");
        publicIdentifiers.add("XmlErrorHandler");
        publicIdentifiers.add("XMLErrorHandler");
        publicIdentifiers.add("XMLErrorReporter");
        publicIdentifiers.add("XMLErrorResources");
        publicIdentifiers.add("XMLErrorResources_de");
        publicIdentifiers.add("XMLErrorResources_en");
        publicIdentifiers.add("XMLErrorResources_ja");
        publicIdentifiers.add("XMLErrorResources_zh_CN");
        publicIdentifiers.add("XMLEvent");
        publicIdentifiers.add("XMLEventAllocator");
        publicIdentifiers.add("XMLEventAllocatorImpl");
        publicIdentifiers.add("XMLEventConsumer");
        publicIdentifiers.add("XMLEventFactory");
        publicIdentifiers.add("XMLEventFactoryImpl");
        publicIdentifiers.add("XMLEventReader");
        publicIdentifiers.add("XMLEventReaderImpl");
        publicIdentifiers.add("XMLEventWriter");
        publicIdentifiers.add("XMLEventWriterImpl");
        publicIdentifiers.add("XMLFilter");
        publicIdentifiers.add("XMLFilterImpl");
        publicIdentifiers.add("XMLFormatter");
        publicIdentifiers.add("XMLGrammarCachingConfiguration");
        publicIdentifiers.add("XMLGrammarDescription");
        publicIdentifiers.add("XMLGrammarLoader");
        publicIdentifiers.add("XMLGrammarParser");
        publicIdentifiers.add("XMLGrammarPool");
        publicIdentifiers.add("XMLGrammarPoolImpl");
        publicIdentifiers.add("XMLGrammarPreparser");
        publicIdentifiers.add("XMLGregorianCalendar");
        publicIdentifiers.add("XMLGregorianCalendarImpl");
        publicIdentifiers.add("XmlInput");
        publicIdentifiers.add("XMLInputFactory");
        publicIdentifiers.add("XMLInputFactoryImpl");
        publicIdentifiers.add("XMLInputSource");
        publicIdentifiers.add("XMLLocator");
        publicIdentifiers.add("XMLMessageFormatter");
        publicIdentifiers.add("XMLMessageFormatter_de");
        publicIdentifiers.add("XMLMessageFormatter_ja");
        publicIdentifiers.add("XMLMessageFormatter_zh_CN");
        publicIdentifiers.add("XMLMessages");
        publicIdentifiers.add("XMLNamespaceBinder");
        publicIdentifiers.add("XMLNotationDecl");
        publicIdentifiers.add("XMLNSDocumentScannerImpl");
        publicIdentifiers.add("XMLNSDTDValidator");
        publicIdentifiers.add("XMLObject");
        publicIdentifiers.add("XMLOutputFactory");
        publicIdentifiers.add("XMLOutputFactoryImpl");
        publicIdentifiers.add("XMLOutputSource");
        publicIdentifiers.add("XMLParseException");
        publicIdentifiers.add("XMLParser");
        publicIdentifiers.add("XMLParserConfiguration");
        publicIdentifiers.add("XMLParserException");
        publicIdentifiers.add("XMLParserImpl");
        publicIdentifiers.add("XMLPullParserConfiguration");
        publicIdentifiers.add("XmlReader");
        publicIdentifiers.add("XMLReader");
        publicIdentifiers.add("XMLReaderAdapter");
        publicIdentifiers.add("XmlReaderContentHandler");
        publicIdentifiers.add("XMLReaderManager");
        publicIdentifiers.add("XMLReporter");
        publicIdentifiers.add("XmlResolver");
        publicIdentifiers.add("XMLResolver");
        publicIdentifiers.add("XMLResourceIdentifier");
        publicIdentifiers.add("XMLResourceIdentifierImpl");
        publicIdentifiers.add("XMLScanner");
        publicIdentifiers.add("XMLSchemaDescription");
        publicIdentifiers.add("XMLSchemaException");
        publicIdentifiers.add("XMLSchemaLoader");
        publicIdentifiers.add("XMLSchemaLoader$LocationArray");
        publicIdentifiers.add("XMLSchemaValidator");
        publicIdentifiers.add("XMLSchemaValidator$KeyRefValueStore");
        publicIdentifiers.add("XMLSchemaValidator$KeyValueStore");
        publicIdentifiers.add("XMLSchemaValidator$UniqueValueStore");
        publicIdentifiers.add("XMLSchemaValidator$ValueStoreBase");
        publicIdentifiers.add("XMLSchemaValidator$ValueStoreCache");
        publicIdentifiers.add("XMLSchemaValidator$XPathMatcherStack");
        publicIdentifiers.add("XMLSecurityException");
        publicIdentifiers.add("XMLSerializer");
        publicIdentifiers.add("XMLSignature");
        publicIdentifiers.add("XMLSignature$SignatureValue");
        publicIdentifiers.add("XMLSignatureException");
        publicIdentifiers.add("XMLSignatureFactory");
        publicIdentifiers.add("XMLSignatureInput");
        publicIdentifiers.add("XMLSignatureInputDebugger");
        publicIdentifiers.add("XMLSignContext");
        publicIdentifiers.add("XMLSimpleType");
        publicIdentifiers.add("XMLStreamConstants");
        publicIdentifiers.add("XMLStreamException");
        publicIdentifiers.add("XMLStreamFilterImpl");
        publicIdentifiers.add("XMLStreamReader");
        publicIdentifiers.add("XMLStreamReaderImpl");
        publicIdentifiers.add("XMLStreamWriter");
        publicIdentifiers.add("XMLStreamWriterBase");
        publicIdentifiers.add("XMLStreamWriterImpl");
        publicIdentifiers.add("XMLStreamWriterImpl$Element");
        publicIdentifiers.add("XMLStreamWriterImpl$ElementStack");
        publicIdentifiers.add("XMLString");
        publicIdentifiers.add("XMLStringBuffer");
        publicIdentifiers.add("XMLStringDefault");
        publicIdentifiers.add("XMLStringFactory");
        publicIdentifiers.add("XMLStringFactoryDefault");
        publicIdentifiers.add("XMLStringFactoryImpl");
        publicIdentifiers.add("XMLStructure");
        publicIdentifiers.add("XMLSymbols");
        publicIdentifiers.add("XMLValidateContext");
        publicIdentifiers.add("XMLVersionDetector");
        publicIdentifiers.add("XmlWriter");
        publicIdentifiers.add("XMLWriter");
        publicIdentifiers.add("XMLX509Certificate");
        publicIdentifiers.add("XMLX509CRL");
        publicIdentifiers.add("XMLX509DataContent");
        publicIdentifiers.add("XMLX509Digest");
        publicIdentifiers.add("XMLX509IssuerSerial");
        publicIdentifiers.add("XMLX509SKI");
        publicIdentifiers.add("XMLX509SubjectName");
        publicIdentifiers.add("XModalityProtocol");
        publicIdentifiers.add("XModifierKeymap");
        publicIdentifiers.add("XMotionEvent");
        publicIdentifiers.add("XMSelection");
        publicIdentifiers.add("XMSelectionListener");
        publicIdentifiers.add("XNIException");
        publicIdentifiers.add("XNodeInfo");
        publicIdentifiers.add("XNodeSet");
        publicIdentifiers.add("XNodeSetForDOM");
        publicIdentifiers.add("XNoExposeEvent");
        publicIdentifiers.add("XNull");
        publicIdentifiers.add("XNumber");
        publicIdentifiers.add("XObject");
        publicIdentifiers.add("XObjectFactory");
        publicIdentifiers.add("XOpenTypeViewer");
        publicIdentifiers.add("XOperations");
        publicIdentifiers.add("XorPixelWriter$ByteData");
        publicIdentifiers.add("XorPixelWriter$DoubleData");
        publicIdentifiers.add("XorPixelWriter$FloatData");
        publicIdentifiers.add("XorPixelWriter$IntData");
        publicIdentifiers.add("XorPixelWriter$ShortData");
        publicIdentifiers.add("XPanelPeer");
        publicIdentifiers.add("XPath");
        publicIdentifiers.add("XPath$Axis");
        publicIdentifiers.add("XPath$LocationPath");
        publicIdentifiers.add("XPath$NodeTest");
        publicIdentifiers.add("XPath$Step");
        publicIdentifiers.add("XPathAPI");
        publicIdentifiers.add("XPathConstants");
        publicIdentifiers.add("XPathContainer");
        publicIdentifiers.add("XPathContext");
        publicIdentifiers.add("XPathContext$XPathExpressionContext");
        publicIdentifiers.add("XPathDumper");
        publicIdentifiers.add("XPATHErrorResources");
        publicIdentifiers.add("XPATHErrorResources_de");
        publicIdentifiers.add("XPATHErrorResources_en");
        publicIdentifiers.add("XPATHErrorResources_ja");
        publicIdentifiers.add("XPATHErrorResources_zh_CN");
        publicIdentifiers.add("XPathEvaluationResult");
        publicIdentifiers.add("XPathEvaluator");
        publicIdentifiers.add("XPathException");
        publicIdentifiers.add("XPathExpression");
        publicIdentifiers.add("XPathExpressionException");
        publicIdentifiers.add("XPathExpressionImpl");
        publicIdentifiers.add("XPathFactory");
        publicIdentifiers.add("XPathFactoryConfigurationException");
        publicIdentifiers.add("XPathFactoryImpl");
        publicIdentifiers.add("XPathFunction");
        publicIdentifiers.add("XPathFunctionException");
        publicIdentifiers.add("XPathFunctionResolver");
        publicIdentifiers.add("XPathImpl");
        publicIdentifiers.add("XPathMatcher");
        publicIdentifiers.add("XPATHMessages");
        publicIdentifiers.add("XPathNamespace");
        publicIdentifiers.add("XPathNodes");
        publicIdentifiers.add("XPathNodesImpl");
        publicIdentifiers.add("XPathNSResolver");
        publicIdentifiers.add("XPathParser");
        publicIdentifiers.add("XPathProcessorException");
        publicIdentifiers.add("XPathResult");
        publicIdentifiers.add("XPathType");
        publicIdentifiers.add("XPathType$Filter");
        publicIdentifiers.add("XPathVariableResolver");
        publicIdentifiers.add("XPathVisitable");
        publicIdentifiers.add("XPathVisitor");
        publicIdentifiers.add("XPixmapFormatValues");
        publicIdentifiers.add("XPlotter");
        publicIdentifiers.add("XPlottingViewer");
        publicIdentifiers.add("XPointerParserConfiguration");
        publicIdentifiers.add("XPointerPart");
        publicIdentifiers.add("XPointerProcessor");
        publicIdentifiers.add("XPopupMenuPeer");
        publicIdentifiers.add("XPropertyCache");
        publicIdentifiers.add("XPropertyEvent");
        publicIdentifiers.add("XQueryTree");
        publicIdentifiers.add("XRBackend");
        publicIdentifiers.add("XRBackendNative");
        publicIdentifiers.add("XRColor");
        publicIdentifiers.add("XRCompositeManager");
        publicIdentifiers.add("XRDrawImage");
        publicIdentifiers.add("XRDrawLine");
        publicIdentifiers.add("XRenderDirectFormat");
        publicIdentifiers.add("XRenderPictFormat");
        publicIdentifiers.add("XReparentEvent");
        publicIdentifiers.add("XResizeRequestEvent");
        publicIdentifiers.add("XResourceBundle");
        publicIdentifiers.add("XResourceBundleBase");
        publicIdentifiers.add("XResources_de");
        publicIdentifiers.add("XResources_en");
        publicIdentifiers.add("XResources_zh_CN");
        publicIdentifiers.add("XRGlyphCache");
        publicIdentifiers.add("XRGlyphCacheEntry");
        publicIdentifiers.add("XRGraphicsConfig");
        publicIdentifiers.add("XRMaskBlit");
        publicIdentifiers.add("XRMaskFill");
        publicIdentifiers.add("XRMaskImage");
        publicIdentifiers.add("XRRenderer");
        publicIdentifiers.add("XRSolidSrcPict");
        publicIdentifiers.add("XRSurfaceData");
        publicIdentifiers.add("XRSurfaceData$LazyPipe");
        publicIdentifiers.add("XRSurfaceData$XRInternalSurfaceData");
        publicIdentifiers.add("XRSurfaceData$XRPixmapSurfaceData");
        publicIdentifiers.add("XRSurfaceData$XRWindowSurfaceData");
        publicIdentifiers.add("XRSurfaceDataProxy");
        publicIdentifiers.add("XRTextRenderer");
        publicIdentifiers.add("XRTreeFrag");
        publicIdentifiers.add("XRTreeFragSelectWrapper");
        publicIdentifiers.add("XRUtils");
        publicIdentifiers.add("XRVolatileSurfaceManager");
        publicIdentifiers.add("XS10TypeHelper");
        publicIdentifiers.add("XSAllCM");
        publicIdentifiers.add("XSAnnotation");
        publicIdentifiers.add("XSAnnotationImpl");
        publicIdentifiers.add("XSAttributeChecker");
        publicIdentifiers.add("XSAttributeDecl");
        publicIdentifiers.add("XSAttributeDeclaration");
        publicIdentifiers.add("XSAttributeGroupDecl");
        publicIdentifiers.add("XSAttributeGroupDefinition");
        publicIdentifiers.add("XSAttributeUse");
        publicIdentifiers.add("XSAttributeUseImpl");
        publicIdentifiers.add("XSCMBinOp");
        publicIdentifiers.add("XSCMLeaf");
        publicIdentifiers.add("XSCMUniOp");
        publicIdentifiers.add("XSCMValidator");
        publicIdentifiers.add("XSComplexTypeDecl");
        publicIdentifiers.add("XSComplexTypeDefinition");
        publicIdentifiers.add("XSConstants");
        publicIdentifiers.add("XSConstraints");
        publicIdentifiers.add("XSDAbstractParticleTraverser$ParticleArray");
        publicIdentifiers.add("XSDateTime");
        publicIdentifiers.add("XSDDescription");
        publicIdentifiers.add("XSDecimal");
        publicIdentifiers.add("XSDFACM");
        publicIdentifiers.add("XSDHandler");
        publicIdentifiers.add("XSDouble");
        publicIdentifiers.add("XSelectionClearEvent");
        publicIdentifiers.add("XSelectionEvent");
        publicIdentifiers.add("XSelectionRequestEvent");
        publicIdentifiers.add("XSElementDecl");
        publicIdentifiers.add("XSElementDeclaration");
        publicIdentifiers.add("XSElementDeclHelper");
        publicIdentifiers.add("XSEmptyCM");
        publicIdentifiers.add("XSettings");
        publicIdentifiers.add("XSetWindowAttributes");
        publicIdentifiers.add("XSException");
        publicIdentifiers.add("XSFacet");
        publicIdentifiers.add("XSFacets");
        publicIdentifiers.add("XSFloat");
        publicIdentifiers.add("XSGrammar");
        publicIdentifiers.add("XSGrammarBucket");
        publicIdentifiers.add("XSGrammarPool");
        publicIdentifiers.add("XSGrammarPoolContainer");
        publicIdentifiers.add("XSGroupDecl");
        publicIdentifiers.add("XSheet");
        publicIdentifiers.add("XSIDCDefinition");
        publicIdentifiers.add("XSImplementation");
        publicIdentifiers.add("XSImplementationImpl");
        publicIdentifiers.add("XSizeHints");
        publicIdentifiers.add("XSLMessages");
        publicIdentifiers.add("XSLoader");
        publicIdentifiers.add("XSLTCDTMManager");
        publicIdentifiers.add("XSLTErrorResources");
        publicIdentifiers.add("XSLTErrorResources_de");
        publicIdentifiers.add("XSLTErrorResources_en");
        publicIdentifiers.add("XSLTErrorResources_ja");
        publicIdentifiers.add("XSLTErrorResources_zh_CN");
        publicIdentifiers.add("XSMessageFormatter");
        publicIdentifiers.add("XSModel");
        publicIdentifiers.add("XSModelGroup");
        publicIdentifiers.add("XSModelGroupDefinition");
        publicIdentifiers.add("XSModelGroupImpl");
        publicIdentifiers.add("XSMultiValueFacet");
        publicIdentifiers.add("XSNamedMap");
        publicIdentifiers.add("XSNamedMapImpl");
        publicIdentifiers.add("XSNamespaceItem");
        publicIdentifiers.add("XSNamespaceItemList");
        publicIdentifiers.add("XSNotationDecl");
        publicIdentifiers.add("XSNotationDeclaration");
        publicIdentifiers.add("XSObject");
        publicIdentifiers.add("XSObjectList");
        publicIdentifiers.add("XSObjectListImpl");
        publicIdentifiers.add("XSParticle");
        publicIdentifiers.add("XSParticleDecl");
        publicIdentifiers.add("XSQName");
        publicIdentifiers.add("XSSimpleType");
        publicIdentifiers.add("XSSimpleTypeDecl");
        publicIdentifiers.add("XSSimpleTypeDefinition");
        publicIdentifiers.add("XSSimpleTypeDelegate");
        publicIdentifiers.add("XStateProtocol");
        publicIdentifiers.add("XSTerm");
        publicIdentifiers.add("XString");
        publicIdentifiers.add("XStringForChars");
        publicIdentifiers.add("XStringForFSB");
        publicIdentifiers.add("XSTypeDefinition");
        publicIdentifiers.add("XSurfaceData");
        publicIdentifiers.add("XSValue");
        publicIdentifiers.add("XSWildcard");
        publicIdentifiers.add("XSWildcardDecl");
        publicIdentifiers.add("XSystemTrayPeer");
        publicIdentifiers.add("XTable");
        publicIdentifiers.add("XTextField");
        publicIdentifiers.add("XTextFieldEditor");
        publicIdentifiers.add("XToolkit$XEventListener");
        publicIdentifiers.add("XTranslateCoordinates");
        publicIdentifiers.add("XTrayIconPeer");
        publicIdentifiers.add("XTrayIconPeer$IconCanvas");
        publicIdentifiers.add("XTree");
        publicIdentifiers.add("XTreeRenderer");
        publicIdentifiers.add("XUnmapEvent");
        publicIdentifiers.add("XVisibilityEvent");
        publicIdentifiers.add("XVisualInfo");
        publicIdentifiers.add("x_wav");
        publicIdentifiers.add("XWindowAttributes");
        publicIdentifiers.add("XWMHints");
        publicIdentifiers.add("x_xbitmap");
        publicIdentifiers.add("x_xpixmap");
        publicIdentifiers.add("YearDV");
        publicIdentifiers.add("YearMonthDV");
        publicIdentifiers.add("YieldTree");
        publicIdentifiers.add("ZAttachedArrayForForwarding");
        publicIdentifiers.add("ZCollectedHeap");
        publicIdentifiers.add("ZExternalBitMap");
        publicIdentifiers.add("ZForwarding");
        publicIdentifiers.add("ZForwardingEntry");
        publicIdentifiers.add("ZForwardingTable");
        publicIdentifiers.add("ZGlobals");
        publicIdentifiers.add("ZGranuleMapForForwarding");
        publicIdentifiers.add("ZGranuleMapForForwarding$Iterator");
        publicIdentifiers.add("ZGranuleMapForPageTable");
        publicIdentifiers.add("ZGranuleMapForPageTable$Iterator");
        publicIdentifiers.add("ZHeap");
        publicIdentifiers.add("ZipEntry");
        publicIdentifiers.add("ZipError");
        publicIdentifiers.add("ZipException");
        publicIdentifiers.add("ZipFile");
        publicIdentifiers.add("ZipFileSystemProvider");
        publicIdentifiers.add("ZipInfo");
        publicIdentifiers.add("ZipInputStream");
        publicIdentifiers.add("ZipOutputStream");
        publicIdentifiers.add("ZoneId");
        publicIdentifiers.add("ZoneInfo");
        publicIdentifiers.add("ZoneRulesException");
        publicIdentifiers.add("ZoneRulesProvider");
        publicIdentifiers.add("ZoneView");
        publicIdentifiers.add("ZPage");
        publicIdentifiers.add("ZPageAllocator");
        publicIdentifiers.add("ZPageTable");
        publicIdentifiers.add("ZRelocate");
        publicIdentifiers.add("ZVirtualMemory");
    }
}
