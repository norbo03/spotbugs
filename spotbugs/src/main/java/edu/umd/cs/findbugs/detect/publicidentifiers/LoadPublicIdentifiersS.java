package edu.umd.cs.findbugs.detect.publicidentifiers;

import static edu.umd.cs.findbugs.detect.publicidentifiers.PublicIdentifiers.PUBLIC_IDENTIFIERS;

/**
 * Utility class to load public identifiers for the letter S
 */
class LoadPublicIdentifiersS {
    public static void load() {
        PUBLIC_IDENTIFIERS.add("Short");
        PUBLIC_IDENTIFIERS.add("StackTraceElement");
        PUBLIC_IDENTIFIERS.add("StackWalker");
        PUBLIC_IDENTIFIERS.add("StackWalker.Option");
        PUBLIC_IDENTIFIERS.add("StackWalker.StackFrame");
        PUBLIC_IDENTIFIERS.add("StrictMath");
        PUBLIC_IDENTIFIERS.add("StringBuffer");
        PUBLIC_IDENTIFIERS.add("StringBuilder");
        PUBLIC_IDENTIFIERS.add("System");
        PUBLIC_IDENTIFIERS.add("System.Logger");
        PUBLIC_IDENTIFIERS.add("System.Logger.Level");
        PUBLIC_IDENTIFIERS.add("System.LoggerFinder");
        PUBLIC_IDENTIFIERS.add("SAEditorPane");
        PUBLIC_IDENTIFIERS.add("SafepointBlob");
        PUBLIC_IDENTIFIERS.add("SafePointNode");
        PUBLIC_IDENTIFIERS.add("SafeThread");
        PUBLIC_IDENTIFIERS.add("SafeVarargs");
        PUBLIC_IDENTIFIERS.add("SAGetopt");
        PUBLIC_IDENTIFIERS.add("SAGetoptException");
        PUBLIC_IDENTIFIERS.add("SALauncher");
        PUBLIC_IDENTIFIERS.add("SALauncherLoader");
        PUBLIC_IDENTIFIERS.add("SAListener");
        PUBLIC_IDENTIFIERS.add("SALOAD");
        PUBLIC_IDENTIFIERS.add("SampleModel");
        PUBLIC_IDENTIFIERS.add("SAPanel");
        PUBLIC_IDENTIFIERS.add("Sasl");
        PUBLIC_IDENTIFIERS.add("SaslClient");
        PUBLIC_IDENTIFIERS.add("SaslClientFactory");
        PUBLIC_IDENTIFIERS.add("SaslException");
        PUBLIC_IDENTIFIERS.add("SaslInputStream");
        PUBLIC_IDENTIFIERS.add("SaslServer");
        PUBLIC_IDENTIFIERS.add("SaslServerFactory");
        PUBLIC_IDENTIFIERS.add("SASTORE");
        PUBLIC_IDENTIFIERS.add("SaveAction");
        PUBLIC_IDENTIFIERS.add("SaveAsAction");
        PUBLIC_IDENTIFIERS.add("Savepoint");
        PUBLIC_IDENTIFIERS.add("SAX2DOM");
        PUBLIC_IDENTIFIERS.add("SAX2DTM");
        PUBLIC_IDENTIFIERS.add("SAX2DTM2");
        PUBLIC_IDENTIFIERS.add("SAX2DTM2$AncestorIterator");
        PUBLIC_IDENTIFIERS.add("SAX2DTM2$DescendantIterator");
        PUBLIC_IDENTIFIERS.add("SAX2DTM2$FollowingIterator");
        PUBLIC_IDENTIFIERS.add("SAX2DTM2$FollowingSiblingIterator");
        PUBLIC_IDENTIFIERS.add("SAX2DTM2$PrecedingIterator");
        PUBLIC_IDENTIFIERS.add("SAX2DTM2$PrecedingSiblingIterator");
        PUBLIC_IDENTIFIERS.add("SAX2DTM2$TypedRootIterator");
        PUBLIC_IDENTIFIERS.add("SAX2RTFDTM");
        PUBLIC_IDENTIFIERS.add("SAX2StAXBaseWriter");
        PUBLIC_IDENTIFIERS.add("SAX2StAXEventWriter");
        PUBLIC_IDENTIFIERS.add("SAX2StAXStreamWriter");
        PUBLIC_IDENTIFIERS.add("SAX2XNI");
        PUBLIC_IDENTIFIERS.add("SAXException");
        PUBLIC_IDENTIFIERS.add("SAXImpl$TypedNamespaceIterator");
        PUBLIC_IDENTIFIERS.add("SAXMessageFormatter");
        PUBLIC_IDENTIFIERS.add("SAXNotRecognizedException");
        PUBLIC_IDENTIFIERS.add("SAXNotSupportedException");
        PUBLIC_IDENTIFIERS.add("SAXParseException");
        PUBLIC_IDENTIFIERS.add("SAXParser");
        PUBLIC_IDENTIFIERS.add("SAXParserFactory");
        PUBLIC_IDENTIFIERS.add("SAXParserFactoryImpl");
        PUBLIC_IDENTIFIERS.add("SAXParserImpl");
        PUBLIC_IDENTIFIERS.add("SAXParserImpl$JAXPSAXParser");
        PUBLIC_IDENTIFIERS.add("SAXResult");
        PUBLIC_IDENTIFIERS.add("SAXSource");
        PUBLIC_IDENTIFIERS.add("SAXSourceLocator");
        PUBLIC_IDENTIFIERS.add("SAXTransformerFactory");
        PUBLIC_IDENTIFIERS.add("Scale");
        PUBLIC_IDENTIFIERS.add("ScaledBlit");
        PUBLIC_IDENTIFIERS.add("Scan");
        PUBLIC_IDENTIFIERS.add("Scanner");
        PUBLIC_IDENTIFIERS.add("ScannerFactory");
        PUBLIC_IDENTIFIERS.add("ScatteringByteChannel");
        PUBLIC_IDENTIFIERS.add("SCDynamicStoreConfig");
        PUBLIC_IDENTIFIERS.add("ScheduledExecutorService");
        PUBLIC_IDENTIFIERS.add("ScheduledFuture");
        PUBLIC_IDENTIFIERS.add("ScheduledThreadPoolExecutor");
        PUBLIC_IDENTIFIERS.add("Schema");
        PUBLIC_IDENTIFIERS.add("SchemaDateTimeException");
        PUBLIC_IDENTIFIERS.add("SchemaDOM");
        PUBLIC_IDENTIFIERS.add("SchemaDOMParser");
        PUBLIC_IDENTIFIERS.add("SchemaDVFactory");
        PUBLIC_IDENTIFIERS.add("SchemaDVFactoryImpl");
        PUBLIC_IDENTIFIERS.add("SchemaFactory");
        PUBLIC_IDENTIFIERS.add("SchemaFactoryLoader");
        PUBLIC_IDENTIFIERS.add("SchemaGrammar");
        PUBLIC_IDENTIFIERS.add("SchemaGrammar$BuiltinSchemaGrammar");
        PUBLIC_IDENTIFIERS.add("SchemaNamespaceSupport");
        PUBLIC_IDENTIFIERS.add("SchemaParsingConfig");
        PUBLIC_IDENTIFIERS.add("SchemaViolationException");
        PUBLIC_IDENTIFIERS.add("Scope");
        PUBLIC_IDENTIFIERS.add("Scope$CompoundScope");
        PUBLIC_IDENTIFIERS.add("Scope$ErrorScope");
        PUBLIC_IDENTIFIERS.add("Scope$ImportFilter");
        PUBLIC_IDENTIFIERS.add("Scope$ImportScope");
        PUBLIC_IDENTIFIERS.add("Scope$NamedImportScope");
        PUBLIC_IDENTIFIERS.add("Scope$ScopeListener");
        PUBLIC_IDENTIFIERS.add("Scope$ScopeListenerList");
        PUBLIC_IDENTIFIERS.add("Scope$StarImportScope");
        PUBLIC_IDENTIFIERS.add("Scope$WriteableScope");
        PUBLIC_IDENTIFIERS.add("ScopeDesc");
        PUBLIC_IDENTIFIERS.add("ScopedMemoryAccess");
        PUBLIC_IDENTIFIERS.add("ScopedValueContainer");
        PUBLIC_IDENTIFIERS.add("ScopeValue");
        PUBLIC_IDENTIFIERS.add("Screen");
        PUBLIC_IDENTIFIERS.add("ScreenSleepListener");
        PUBLIC_IDENTIFIERS.add("Script");
        PUBLIC_IDENTIFIERS.add("ScriptContext");
        PUBLIC_IDENTIFIERS.add("ScriptEngine");
        PUBLIC_IDENTIFIERS.add("ScriptEngineFactory");
        PUBLIC_IDENTIFIERS.add("ScriptEngineManager");
        PUBLIC_IDENTIFIERS.add("ScriptException");
        PUBLIC_IDENTIFIERS.add("Scrollable");
        PUBLIC_IDENTIFIERS.add("Scrollbar");
        PUBLIC_IDENTIFIERS.add("Scrollbar$AccessibleAWTScrollBar");
        PUBLIC_IDENTIFIERS.add("ScrollbarPeer");
        PUBLIC_IDENTIFIERS.add("ScrollBarUI");
        PUBLIC_IDENTIFIERS.add("ScrollPane");
        PUBLIC_IDENTIFIERS.add("ScrollPane$AccessibleAWTScrollPane");
        PUBLIC_IDENTIFIERS.add("ScrollPaneConstants");
        PUBLIC_IDENTIFIERS.add("ScrollPaneLayout");
        PUBLIC_IDENTIFIERS.add("ScrollPaneLayout$UIResource");
        PUBLIC_IDENTIFIERS.add("ScrollPanePeer");
        PUBLIC_IDENTIFIERS.add("ScrollPaneUI");
        PUBLIC_IDENTIFIERS.add("ScrollPaneWheelScroller");
        PUBLIC_IDENTIFIERS.add("SctpChannel");
        PUBLIC_IDENTIFIERS.add("SctpChannelImpl");
        PUBLIC_IDENTIFIERS.add("SctpMultiChannel");
        PUBLIC_IDENTIFIERS.add("SctpMultiChannelImpl");
        PUBLIC_IDENTIFIERS.add("SctpNet");
        PUBLIC_IDENTIFIERS.add("SctpServerChannel");
        PUBLIC_IDENTIFIERS.add("SctpServerChannelImpl");
        PUBLIC_IDENTIFIERS.add("SctpSocketOption");
        PUBLIC_IDENTIFIERS.add("SctpStandardSocketOptions");
        PUBLIC_IDENTIFIERS.add("SctpStandardSocketOptions$InitMaxStreams");
        PUBLIC_IDENTIFIERS.add("SctpStdSocketOption");
        PUBLIC_IDENTIFIERS.add("SdpProvider");
        PUBLIC_IDENTIFIERS.add("SealedObject");
        PUBLIC_IDENTIFIERS.add("SearchControls");
        PUBLIC_IDENTIFIERS.add("SearchFilter");
        PUBLIC_IDENTIFIERS.add("SearchResult");
        PUBLIC_IDENTIFIERS.add("SearchWriter");
        PUBLIC_IDENTIFIERS.add("SecondaryLoop");
        PUBLIC_IDENTIFIERS.add("SecretKey");
        PUBLIC_IDENTIFIERS.add("SecretKeyFactory");
        PUBLIC_IDENTIFIERS.add("SecretKeyFactorySpi");
        PUBLIC_IDENTIFIERS.add("SecretKeyResolver");
        PUBLIC_IDENTIFIERS.add("SecretKeySpec");
        PUBLIC_IDENTIFIERS.add("SectionFlags");
        PUBLIC_IDENTIFIERS.add("SectionHeader");
        PUBLIC_IDENTIFIERS.add("SecureCacheResponse");
        PUBLIC_IDENTIFIERS.add("SecureClassLoader");
        PUBLIC_IDENTIFIERS.add("SecureDirectoryStream");
        PUBLIC_IDENTIFIERS.add("SecureLookupSupplier");
        PUBLIC_IDENTIFIERS.add("SecureRandom");
        PUBLIC_IDENTIFIERS.add("SecureRandomParameters");
        PUBLIC_IDENTIFIERS.add("SecureRandomSpi");
        PUBLIC_IDENTIFIERS.add("SecurityConfiguration");
        PUBLIC_IDENTIFIERS.add("SecurityException");
        PUBLIC_IDENTIFIERS.add("SecurityManager");
        PUBLIC_IDENTIFIERS.add("SecurityProperties");
        PUBLIC_IDENTIFIERS.add("SecuritySupport");
        PUBLIC_IDENTIFIERS.add("SeekableByteChannel");
        PUBLIC_IDENTIFIERS.add("SeeTaglet");
        PUBLIC_IDENTIFIERS.add("SeeTree");
        PUBLIC_IDENTIFIERS.add("Segment");
        PUBLIC_IDENTIFIERS.add("SegmentAllocator");
        PUBLIC_IDENTIFIERS.add("SegmentScope");
        PUBLIC_IDENTIFIERS.add("SelChImpl");
        PUBLIC_IDENTIFIERS.add("Select");
        PUBLIC_IDENTIFIERS.add("SelectableChannel");
        PUBLIC_IDENTIFIERS.add("SelectionKey");
        PUBLIC_IDENTIFIERS.add("Selector");
        PUBLIC_IDENTIFIERS.add("Selector$Matcher");
        PUBLIC_IDENTIFIERS.add("Selector$XPath");
        PUBLIC_IDENTIFIERS.add("SelectorImpl");
        PUBLIC_IDENTIFIERS.add("SelectorProvider");
        PUBLIC_IDENTIFIERS.add("SelectorProviderImpl");
        PUBLIC_IDENTIFIERS.add("SelfIteratorNoPredicate");
        PUBLIC_IDENTIFIERS.add("Semaphore");
        PUBLIC_IDENTIFIERS.add("SendFailed");
        PUBLIC_IDENTIFIERS.add("SendFailedNotification");
        PUBLIC_IDENTIFIERS.add("Sensor");
        PUBLIC_IDENTIFIERS.add("SeparatorUI");
        PUBLIC_IDENTIFIERS.add("SeqNumber");
        PUBLIC_IDENTIFIERS.add("Sequence");
        PUBLIC_IDENTIFIERS.add("SequenceInputStream");
        PUBLIC_IDENTIFIERS.add("SequenceLayout");
        PUBLIC_IDENTIFIERS.add("Sequencer");
        PUBLIC_IDENTIFIERS.add("Sequencer$SyncMode");
        PUBLIC_IDENTIFIERS.add("SequentialScheduler$CompleteRestartableTask");
        PUBLIC_IDENTIFIERS.add("SequentialScheduler$DeferredCompleter");
        PUBLIC_IDENTIFIERS.add("SequentialScheduler$RestartableTask");
        PUBLIC_IDENTIFIERS.add("Serial");
        PUBLIC_IDENTIFIERS.add("SerialArray");
        PUBLIC_IDENTIFIERS.add("SerialBlob");
        PUBLIC_IDENTIFIERS.add("SerialClob");
        PUBLIC_IDENTIFIERS.add("SerialDatalink");
        PUBLIC_IDENTIFIERS.add("SerialDataTree");
        PUBLIC_IDENTIFIERS.add("SerialException");
        PUBLIC_IDENTIFIERS.add("SerialFieldTree");
        PUBLIC_IDENTIFIERS.add("SerialHeap");
        PUBLIC_IDENTIFIERS.add("Serializable");
        PUBLIC_IDENTIFIERS.add("SerializableConstant");
        PUBLIC_IDENTIFIERS.add("SerializableLocatorImpl");
        PUBLIC_IDENTIFIERS.add("SerializationHandler");
        PUBLIC_IDENTIFIERS.add("SerializedFormBuilder");
        PUBLIC_IDENTIFIERS.add("SerializedFormWriter");
        PUBLIC_IDENTIFIERS.add("SerializedFormWriter$SerialFieldWriter");
        PUBLIC_IDENTIFIERS.add("SerializedFormWriter$SerialMethodWriter");
        PUBLIC_IDENTIFIERS.add("SerializedFormWriterImpl");
        PUBLIC_IDENTIFIERS.add("Serializer");
        PUBLIC_IDENTIFIERS.add("SerializerBase");
        PUBLIC_IDENTIFIERS.add("SerializerFactory");
        PUBLIC_IDENTIFIERS.add("SerializerMessages");
        PUBLIC_IDENTIFIERS.add("SerializerMessages_de");
        PUBLIC_IDENTIFIERS.add("SerializerMessages_ja");
        PUBLIC_IDENTIFIERS.add("SerializerMessages_zh_CN");
        PUBLIC_IDENTIFIERS.add("SerializerTrace");
        PUBLIC_IDENTIFIERS.add("SerialJavaObject");
        PUBLIC_IDENTIFIERS.add("SerialNumber");
        PUBLIC_IDENTIFIERS.add("SerialRef");
        PUBLIC_IDENTIFIERS.add("SerialStruct");
        PUBLIC_IDENTIFIERS.add("SerialTree");
        PUBLIC_IDENTIFIERS.add("SerialVer");
        PUBLIC_IDENTIFIERS.add("SerialVersionUIDAdder");
        PUBLIC_IDENTIFIERS.add("Server");
        PUBLIC_IDENTIFIERS.add("ServerCloneException");
        PUBLIC_IDENTIFIERS.add("ServerCommunicatorAdmin");
        PUBLIC_IDENTIFIERS.add("ServerError");
        PUBLIC_IDENTIFIERS.add("ServerException");
        PUBLIC_IDENTIFIERS.add("ServerNotActiveException");
        PUBLIC_IDENTIFIERS.add("ServerNotifForwarder");
        PUBLIC_IDENTIFIERS.add("ServerProvider");
        PUBLIC_IDENTIFIERS.add("ServerRef");
        PUBLIC_IDENTIFIERS.add("ServerRuntimeException");
        PUBLIC_IDENTIFIERS.add("ServerSocket");
        PUBLIC_IDENTIFIERS.add("ServerSocketChannel");
        PUBLIC_IDENTIFIERS.add("ServerSocketFactory");
        PUBLIC_IDENTIFIERS.add("ServiceConfigurationError");
        PUBLIC_IDENTIFIERS.add("ServiceDialog");
        PUBLIC_IDENTIFIERS.add("ServiceLoader$Provider");
        PUBLIC_IDENTIFIERS.add("ServiceName");
        PUBLIC_IDENTIFIERS.add("ServiceNotFoundException");
        PUBLIC_IDENTIFIERS.add("ServiceRegistry");
        PUBLIC_IDENTIFIERS.add("ServiceRegistry$Filter");
        PUBLIC_IDENTIFIERS.add("ServiceThread");
        PUBLIC_IDENTIFIERS.add("ServiceUI");
        PUBLIC_IDENTIFIERS.add("ServiceUIFactory");
        PUBLIC_IDENTIFIERS.add("ServiceUnavailableException");
        PUBLIC_IDENTIFIERS.add("Set");
        PUBLIC_IDENTIFIERS.add("SetOfIntegerSyntax");
        PUBLIC_IDENTIFIERS.add("SettingControl");
        PUBLIC_IDENTIFIERS.add("SettingDefinition");
        PUBLIC_IDENTIFIERS.add("SettingsFrame");
        PUBLIC_IDENTIFIERS.add("SF2Region");
        PUBLIC_IDENTIFIERS.add("Shape");
        PUBLIC_IDENTIFIERS.add("ShapeDrawPipe");
        PUBLIC_IDENTIFIERS.add("ShardingKey");
        PUBLIC_IDENTIFIERS.add("ShardingKeyBuilder");
        PUBLIC_IDENTIFIERS.add("SharedHotSpotSpeculationLog");
        PUBLIC_IDENTIFIERS.add("SharedNameTable");
        PUBLIC_IDENTIFIERS.add("SharedSecrets");
        PUBLIC_IDENTIFIERS.add("SharedThreadContainer");
        PUBLIC_IDENTIFIERS.add("ShellFolder");
        PUBLIC_IDENTIFIERS.add("ShellFolder$Invoker");
        PUBLIC_IDENTIFIERS.add("ShellFolderColumnInfo");
        PUBLIC_IDENTIFIERS.add("ShenandoahBitMap");
        PUBLIC_IDENTIFIERS.add("ShenandoahHeap");
        PUBLIC_IDENTIFIERS.add("ShenandoahHeapRegion");
        PUBLIC_IDENTIFIERS.add("ShortBandedRaster");
        PUBLIC_IDENTIFIERS.add("ShortBuffer");
        PUBLIC_IDENTIFIERS.add("ShortBufferException");
        PUBLIC_IDENTIFIERS.add("ShortComponentRaster");
        PUBLIC_IDENTIFIERS.add("ShortEditor");
        PUBLIC_IDENTIFIERS.add("ShortField");
        PUBLIC_IDENTIFIERS.add("ShortInterleavedRaster");
        PUBLIC_IDENTIFIERS.add("ShortList");
        PUBLIC_IDENTIFIERS.add("ShortLookupTable");
        PUBLIC_IDENTIFIERS.add("ShortMessage");
        PUBLIC_IDENTIFIERS.add("ShortSignature");
        PUBLIC_IDENTIFIERS.add("ShortType");
        PUBLIC_IDENTIFIERS.add("ShortTypeImpl");
        PUBLIC_IDENTIFIERS.add("ShortValue");
        PUBLIC_IDENTIFIERS.add("ShortValueImpl");
        PUBLIC_IDENTIFIERS.add("ShortVector");
        PUBLIC_IDENTIFIERS.add("ShowAction");
        PUBLIC_IDENTIFIERS.add("Shutdown");
        PUBLIC_IDENTIFIERS.add("ShutdownChannelGroupException");
        PUBLIC_IDENTIFIERS.add("ShutdownHooks$Task");
        PUBLIC_IDENTIFIERS.add("ShutdownNotification");
        PUBLIC_IDENTIFIERS.add("Signal$Handler");
        PUBLIC_IDENTIFIERS.add("SignalHandler");
        PUBLIC_IDENTIFIERS.add("Signature");
        PUBLIC_IDENTIFIERS.add("Signature11ElementProxy");
        PUBLIC_IDENTIFIERS.add("SignatureAlgorithm");
        PUBLIC_IDENTIFIERS.add("SignatureAlgorithmSpi");
        PUBLIC_IDENTIFIERS.add("Signature_attribute");
        PUBLIC_IDENTIFIERS.add("SignatureBaseRSA");
        PUBLIC_IDENTIFIERS.add("SignatureBaseRSA$SignatureRSAMD5");
        PUBLIC_IDENTIFIERS.add("SignatureBaseRSA$SignatureRSARIPEMD160");
        PUBLIC_IDENTIFIERS.add("SignatureBaseRSA$SignatureRSASHA1");
        PUBLIC_IDENTIFIERS.add("SignatureBaseRSA$SignatureRSASHA1MGF1");
        PUBLIC_IDENTIFIERS.add("SignatureBaseRSA$SignatureRSASHA224");
        PUBLIC_IDENTIFIERS.add("SignatureBaseRSA$SignatureRSASHA224MGF1");
        PUBLIC_IDENTIFIERS.add("SignatureBaseRSA$SignatureRSASHA256");
        PUBLIC_IDENTIFIERS.add("SignatureBaseRSA$SignatureRSASHA256MGF1");
        PUBLIC_IDENTIFIERS.add("SignatureBaseRSA$SignatureRSASHA3_224MGF1");
        PUBLIC_IDENTIFIERS.add("SignatureBaseRSA$SignatureRSASHA3_256MGF1");
        PUBLIC_IDENTIFIERS.add("SignatureBaseRSA$SignatureRSASHA3_384MGF1");
        PUBLIC_IDENTIFIERS.add("SignatureBaseRSA$SignatureRSASHA3_512MGF1");
        PUBLIC_IDENTIFIERS.add("SignatureBaseRSA$SignatureRSASHA384");
        PUBLIC_IDENTIFIERS.add("SignatureBaseRSA$SignatureRSASHA384MGF1");
        PUBLIC_IDENTIFIERS.add("SignatureBaseRSA$SignatureRSASHA512");
        PUBLIC_IDENTIFIERS.add("SignatureBaseRSA$SignatureRSASHA512MGF1");
        PUBLIC_IDENTIFIERS.add("SignatureBaseRSA$SignatureRSASSAPSS");
        PUBLIC_IDENTIFIERS.add("SignatureConverter");
        PUBLIC_IDENTIFIERS.add("SignatureDSA");
        PUBLIC_IDENTIFIERS.add("SignatureDSA$SHA256");
        PUBLIC_IDENTIFIERS.add("SignatureECDSA");
        PUBLIC_IDENTIFIERS.add("SignatureECDSA$SignatureECDSARIPEMD160");
        PUBLIC_IDENTIFIERS.add("SignatureECDSA$SignatureECDSASHA1");
        PUBLIC_IDENTIFIERS.add("SignatureECDSA$SignatureECDSASHA224");
        PUBLIC_IDENTIFIERS.add("SignatureECDSA$SignatureECDSASHA256");
        PUBLIC_IDENTIFIERS.add("SignatureECDSA$SignatureECDSASHA384");
        PUBLIC_IDENTIFIERS.add("SignatureECDSA$SignatureECDSASHA512");
        PUBLIC_IDENTIFIERS.add("SignatureElementProxy");
        PUBLIC_IDENTIFIERS.add("SignatureException");
        PUBLIC_IDENTIFIERS.add("SignatureFileVerifier");
        PUBLIC_IDENTIFIERS.add("SignatureInfo");
        PUBLIC_IDENTIFIERS.add("SignatureIterator");
        PUBLIC_IDENTIFIERS.add("SignatureMethod");
        PUBLIC_IDENTIFIERS.add("SignatureMethodParameterSpec");
        PUBLIC_IDENTIFIERS.add("SignatureParser");
        PUBLIC_IDENTIFIERS.add("SignatureParser$ParseResult");
        PUBLIC_IDENTIFIERS.add("SignatureProperties");
        PUBLIC_IDENTIFIERS.add("SignatureProperty");
        PUBLIC_IDENTIFIERS.add("SignatureReader");
        PUBLIC_IDENTIFIERS.add("SignatureRemapper");
        PUBLIC_IDENTIFIERS.add("Signatures");
        PUBLIC_IDENTIFIERS.add("SignatureSpi");
        PUBLIC_IDENTIFIERS.add("SignatureUtil");
        PUBLIC_IDENTIFIERS.add("SignatureUtil$EdDSADigestAlgHolder");
        PUBLIC_IDENTIFIERS.add("SignatureVisitor");
        PUBLIC_IDENTIFIERS.add("SignatureWriter");
        PUBLIC_IDENTIFIERS.add("SignedInfo");
        PUBLIC_IDENTIFIERS.add("Signer");
        PUBLIC_IDENTIFIERS.add("SignerInfo");
        PUBLIC_IDENTIFIERS.add("SignerOutputStream");
        PUBLIC_IDENTIFIERS.add("SimpleAnnotationValueVisitor14");
        PUBLIC_IDENTIFIERS.add("SimpleAnnotationValueVisitor6");
        PUBLIC_IDENTIFIERS.add("SimpleAnnotationValueVisitor7");
        PUBLIC_IDENTIFIERS.add("SimpleAnnotationValueVisitor8");
        PUBLIC_IDENTIFIERS.add("SimpleAnnotationValueVisitor9");
        PUBLIC_IDENTIFIERS.add("SimpleAsynchronousFileChannelImpl");
        PUBLIC_IDENTIFIERS.add("SimpleAttributeSet");
        PUBLIC_IDENTIFIERS.add("SimpleBeanInfo");
        PUBLIC_IDENTIFIERS.add("SimpleBindings");
        PUBLIC_IDENTIFIERS.add("SimpleClassTypeSignature");
        PUBLIC_IDENTIFIERS.add("SimpleConsoleLogger");
        PUBLIC_IDENTIFIERS.add("SimpleContentModel");
        PUBLIC_IDENTIFIERS.add("SimpleDateFormat");
        PUBLIC_IDENTIFIERS.add("SimpleDocletException");
        PUBLIC_IDENTIFIERS.add("SimpleDocTreeVisitor");
        PUBLIC_IDENTIFIERS.add("SimpleElementValue");
        PUBLIC_IDENTIFIERS.add("SimpleElementValueGen");
        PUBLIC_IDENTIFIERS.add("SimpleElementVisitor14");
        PUBLIC_IDENTIFIERS.add("SimpleElementVisitor6");
        PUBLIC_IDENTIFIERS.add("SimpleElementVisitor7");
        PUBLIC_IDENTIFIERS.add("SimpleElementVisitor8");
        PUBLIC_IDENTIFIERS.add("SimpleElementVisitor9");
        PUBLIC_IDENTIFIERS.add("SimpleEUCEncoder");
        PUBLIC_IDENTIFIERS.add("SimpleFileVisitor");
        PUBLIC_IDENTIFIERS.add("SimpleFormatter");
        PUBLIC_IDENTIFIERS.add("SimpleInputMethodWindow");
        PUBLIC_IDENTIFIERS.add("SimpleInstrument");
        PUBLIC_IDENTIFIERS.add("SimpleJavaFileObject");
        PUBLIC_IDENTIFIERS.add("SimpleLinkRequest");
        PUBLIC_IDENTIFIERS.add("SimpleLocator");
        PUBLIC_IDENTIFIERS.add("SimpleOptionNameMap");
        PUBLIC_IDENTIFIERS.add("SimpleRelinkableCallSite");
        PUBLIC_IDENTIFIERS.add("SimpleRemapper");
        PUBLIC_IDENTIFIERS.add("SimpleRenderedImage");
        PUBLIC_IDENTIFIERS.add("SimpleResultTreeImpl");
        PUBLIC_IDENTIFIERS.add("SimpleScriptContext");
        PUBLIC_IDENTIFIERS.add("SimpleSoundbank");
        PUBLIC_IDENTIFIERS.add("SimpleTaglet");
        PUBLIC_IDENTIFIERS.add("SimpleTimeZone");
        PUBLIC_IDENTIFIERS.add("SimpleTreeGroupNode");
        PUBLIC_IDENTIFIERS.add("SimpleTreeModel");
        PUBLIC_IDENTIFIERS.add("SimpleTreeNode");
        PUBLIC_IDENTIFIERS.add("SimpleTreeTableModel");
        PUBLIC_IDENTIFIERS.add("SimpleTreeVisitor");
        PUBLIC_IDENTIFIERS.add("SimpleTypeVisitor14");
        PUBLIC_IDENTIFIERS.add("SimpleTypeVisitor6");
        PUBLIC_IDENTIFIERS.add("SimpleTypeVisitor7");
        PUBLIC_IDENTIFIERS.add("SimpleTypeVisitor8");
        PUBLIC_IDENTIFIERS.add("SimpleTypeVisitor9");
        PUBLIC_IDENTIFIERS.add("SimpleVerifier");
        PUBLIC_IDENTIFIERS.add("SinceTree");
        PUBLIC_IDENTIFIERS.add("SingleByte");
        PUBLIC_IDENTIFIERS.add("SingleCertificateResolver");
        PUBLIC_IDENTIFIERS.add("SingleEntryRegistry");
        PUBLIC_IDENTIFIERS.add("SingleKeyResolver");
        PUBLIC_IDENTIFIERS.add("SingleNodeCounter");
        PUBLIC_IDENTIFIERS.add("SinglePixelPackedSampleModel");
        PUBLIC_IDENTIFIERS.add("SingleSelectionModel");
        PUBLIC_IDENTIFIERS.add("SingleTileRenderedImage");
        PUBLIC_IDENTIFIERS.add("SingletonBlob");
        PUBLIC_IDENTIFIERS.add("SingletonIterator");
        PUBLIC_IDENTIFIERS.add("Sink$ChainedDouble");
        PUBLIC_IDENTIFIERS.add("Sink$ChainedInt");
        PUBLIC_IDENTIFIERS.add("Sink$ChainedLong");
        PUBLIC_IDENTIFIERS.add("Sink$ChainedReference");
        PUBLIC_IDENTIFIERS.add("Sink$OfDouble");
        PUBLIC_IDENTIFIERS.add("Sink$OfInt");
        PUBLIC_IDENTIFIERS.add("Sink$OfLong");
        PUBLIC_IDENTIFIERS.add("SIPUSH");
        PUBLIC_IDENTIFIERS.add("Site");
        PUBLIC_IDENTIFIERS.add("Size");
        PUBLIC_IDENTIFIERS.add("Size2DSyntax");
        PUBLIC_IDENTIFIERS.add("SizeLimitExceededException");
        PUBLIC_IDENTIFIERS.add("SizeRequirements");
        PUBLIC_IDENTIFIERS.add("SizeSequence");
        PUBLIC_IDENTIFIERS.add("SJIS");
        PUBLIC_IDENTIFIERS.add("SJIS_0213");
        PUBLIC_IDENTIFIERS.add("SJIS_0213$Decoder");
        PUBLIC_IDENTIFIERS.add("SJIS_0213$Encoder");
        PUBLIC_IDENTIFIERS.add("Skeleton");
        PUBLIC_IDENTIFIERS.add("SkeletonMismatchException");
        PUBLIC_IDENTIFIERS.add("SkeletonNotFoundException");
        PUBLIC_IDENTIFIERS.add("SliderUI");
        PUBLIC_IDENTIFIERS.add("SmallValue");
        PUBLIC_IDENTIFIERS.add("SmtpClient");
        PUBLIC_IDENTIFIERS.add("SmtpProtocolException");
        PUBLIC_IDENTIFIERS.add("SNIMatcher");
        PUBLIC_IDENTIFIERS.add("Snippet");
        PUBLIC_IDENTIFIERS.add("SnippetEvent");
        PUBLIC_IDENTIFIERS.add("Snippets");
        PUBLIC_IDENTIFIERS.add("Snippets$CPUEvent");
        PUBLIC_IDENTIFIERS.add("Snippets$Example");
        PUBLIC_IDENTIFIERS.add("Snippets$OrderId");
        PUBLIC_IDENTIFIERS.add("Snippets$Severity");
        PUBLIC_IDENTIFIERS.add("Snippets$Temperature");
        PUBLIC_IDENTIFIERS.add("Snippets$TransactionId");
        PUBLIC_IDENTIFIERS.add("SnippetTaglet");
        PUBLIC_IDENTIFIERS.add("SnippetTaglet$Diags");
        PUBLIC_IDENTIFIERS.add("SnippetTree");
        PUBLIC_IDENTIFIERS.add("SNIServerName");
        PUBLIC_IDENTIFIERS.add("Socket");
        PUBLIC_IDENTIFIERS.add("SocketAddress");
        PUBLIC_IDENTIFIERS.add("SocketAttachingConnector");
        PUBLIC_IDENTIFIERS.add("SocketChannel");
        PUBLIC_IDENTIFIERS.add("SocketException");
        PUBLIC_IDENTIFIERS.add("SocketFactory");
        PUBLIC_IDENTIFIERS.add("SocketHandler");
        PUBLIC_IDENTIFIERS.add("SocketImpl");
        PUBLIC_IDENTIFIERS.add("SocketImplFactory");
        PUBLIC_IDENTIFIERS.add("SocketListeningConnector");
        PUBLIC_IDENTIFIERS.add("SocketOption");
        PUBLIC_IDENTIFIERS.add("SocketOptions");
        PUBLIC_IDENTIFIERS.add("Sockets");
        PUBLIC_IDENTIFIERS.add("SocketSecurityException");
        PUBLIC_IDENTIFIERS.add("SocketTimeoutException");
        PUBLIC_IDENTIFIERS.add("SocketTransportService");
        PUBLIC_IDENTIFIERS.add("SocketTube$BufferSource");
        PUBLIC_IDENTIFIERS.add("SoftAbstractResampler");
        PUBLIC_IDENTIFIERS.add("SoftAudioProcessor");
        PUBLIC_IDENTIFIERS.add("SoftBevelBorder");
        PUBLIC_IDENTIFIERS.add("SoftCache");
        PUBLIC_IDENTIFIERS.add("SoftControl");
        PUBLIC_IDENTIFIERS.add("SoftMixingDataLine");
        PUBLIC_IDENTIFIERS.add("SoftProcess");
        PUBLIC_IDENTIFIERS.add("SoftReference");
        PUBLIC_IDENTIFIERS.add("SoftResampler");
        PUBLIC_IDENTIFIERS.add("SoftResamplerStreamer");
        PUBLIC_IDENTIFIERS.add("SolidTextRenderer");
        PUBLIC_IDENTIFIERS.add("SortableTableModel");
        PUBLIC_IDENTIFIERS.add("SortArrowIcon");
        PUBLIC_IDENTIFIERS.add("SortedMap");
        PUBLIC_IDENTIFIERS.add("SortedSet");
        PUBLIC_IDENTIFIERS.add("SortHeaderCellRenderer");
        PUBLIC_IDENTIFIERS.add("SortHeaderMouseAdapter");
        PUBLIC_IDENTIFIERS.add("SortingFocusTraversalPolicy");
        PUBLIC_IDENTIFIERS.add("SortKey");
        PUBLIC_IDENTIFIERS.add("Soundbank");
        PUBLIC_IDENTIFIERS.add("SoundbankReader");
        PUBLIC_IDENTIFIERS.add("SoundbankResource");
        PUBLIC_IDENTIFIERS.add("Source");
        PUBLIC_IDENTIFIERS.add("SourceCodeAnalysis");
        PUBLIC_IDENTIFIERS.add("SourceCodeAnalysis$CompletionInfo");
        PUBLIC_IDENTIFIERS.add("SourceCodeAnalysis$Documentation");
        PUBLIC_IDENTIFIERS.add("SourceCodeAnalysis$SnippetWrapper");
        PUBLIC_IDENTIFIERS.add("SourceCodeAnalysis$Suggestion");
        PUBLIC_IDENTIFIERS.add("SourceCodePanel");
        PUBLIC_IDENTIFIERS.add("SourceDataLine");
        PUBLIC_IDENTIFIERS.add("SourceDebugExtension_attribute");
        PUBLIC_IDENTIFIERS.add("SourceFile_attribute");
        PUBLIC_IDENTIFIERS.add("SourceID_attribute");
        PUBLIC_IDENTIFIERS.add("SourceInterpreter");
        PUBLIC_IDENTIFIERS.add("SourceLoader");
        PUBLIC_IDENTIFIERS.add("SourceLocator");
        PUBLIC_IDENTIFIERS.add("SourcePositions");
        PUBLIC_IDENTIFIERS.add("SourceToHTMLConverter");
        PUBLIC_IDENTIFIERS.add("SourceTree");
        PUBLIC_IDENTIFIERS.add("SourceValue");
        PUBLIC_IDENTIFIERS.add("SourceWriter");
        PUBLIC_IDENTIFIERS.add("Space");
        PUBLIC_IDENTIFIERS.add("SpaceClosure");
        PUBLIC_IDENTIFIERS.add("SpanClipRenderer");
        PUBLIC_IDENTIFIERS.add("SpanIterator");
        PUBLIC_IDENTIFIERS.add("Spans");
        PUBLIC_IDENTIFIERS.add("SpanShapeRenderer");
        PUBLIC_IDENTIFIERS.add("SpanShapeRenderer$Composite");
        PUBLIC_IDENTIFIERS.add("SpanShapeRenderer$Simple");
        PUBLIC_IDENTIFIERS.add("SpecTaglet");
        PUBLIC_IDENTIFIERS.add("SpecTree");
        PUBLIC_IDENTIFIERS.add("SpeculationLog");
        PUBLIC_IDENTIFIERS.add("SpeculationLog$Speculation");
        PUBLIC_IDENTIFIERS.add("SpeculationLog$SpeculationReason");
        PUBLIC_IDENTIFIERS.add("SpeculationLog$SpeculationReasonEncoding");
        PUBLIC_IDENTIFIERS.add("SpeculativeTrapData");
        PUBLIC_IDENTIFIERS.add("SPILocaleProviderAdapter");
        PUBLIC_IDENTIFIERS.add("SpinnerDateModel");
        PUBLIC_IDENTIFIERS.add("SpinnerListModel");
        PUBLIC_IDENTIFIERS.add("SpinnerModel");
        PUBLIC_IDENTIFIERS.add("SpinnerNumberModel");
        PUBLIC_IDENTIFIERS.add("SpinnerUI");
        PUBLIC_IDENTIFIERS.add("SPIResolutionException");
        PUBLIC_IDENTIFIERS.add("SPKIData");
        PUBLIC_IDENTIFIERS.add("SplashScreen");
        PUBLIC_IDENTIFIERS.add("Spliterator");
        PUBLIC_IDENTIFIERS.add("Spliterator$OfDouble");
        PUBLIC_IDENTIFIERS.add("Spliterator$OfInt");
        PUBLIC_IDENTIFIERS.add("Spliterator$OfLong");
        PUBLIC_IDENTIFIERS.add("Spliterator$OfPrimitive");
        PUBLIC_IDENTIFIERS.add("Spliterators$AbstractDoubleSpliterator");
        PUBLIC_IDENTIFIERS.add("Spliterators$AbstractIntSpliterator");
        PUBLIC_IDENTIFIERS.add("Spliterators$AbstractLongSpliterator");
        PUBLIC_IDENTIFIERS.add("Spliterators$AbstractSpliterator");
        PUBLIC_IDENTIFIERS.add("SplitPaneUI");
        PUBLIC_IDENTIFIERS.add("SpNegoContext");
        PUBLIC_IDENTIFIERS.add("SpNegoCredElement");
        PUBLIC_IDENTIFIERS.add("Spring");
        PUBLIC_IDENTIFIERS.add("SpringLayout");
        PUBLIC_IDENTIFIERS.add("SpringLayout$Constraints");
        PUBLIC_IDENTIFIERS.add("SQLClientInfoException");
        PUBLIC_IDENTIFIERS.add("SQLData");
        PUBLIC_IDENTIFIERS.add("SQLDataException");
        PUBLIC_IDENTIFIERS.add("SQLException");
        PUBLIC_IDENTIFIERS.add("SQLFeatureNotSupportedException");
        PUBLIC_IDENTIFIERS.add("SQLInput");
        PUBLIC_IDENTIFIERS.add("SQLInputImpl");
        PUBLIC_IDENTIFIERS.add("SQLIntegrityConstraintViolationException");
        PUBLIC_IDENTIFIERS.add("SQLInvalidAuthorizationSpecException");
        PUBLIC_IDENTIFIERS.add("SQLNonTransientConnectionException");
        PUBLIC_IDENTIFIERS.add("SQLNonTransientException");
        PUBLIC_IDENTIFIERS.add("SQLOutput");
        PUBLIC_IDENTIFIERS.add("SQLOutputImpl");
        PUBLIC_IDENTIFIERS.add("SQLRecoverableException");
        PUBLIC_IDENTIFIERS.add("SQLSyntaxErrorException");
        PUBLIC_IDENTIFIERS.add("SQLTimeoutException");
        PUBLIC_IDENTIFIERS.add("SQLTransactionRollbackException");
        PUBLIC_IDENTIFIERS.add("SQLTransientConnectionException");
        PUBLIC_IDENTIFIERS.add("SQLTransientException");
        PUBLIC_IDENTIFIERS.add("SQLType");
        PUBLIC_IDENTIFIERS.add("SQLWarning");
        PUBLIC_IDENTIFIERS.add("SQLXML");
        PUBLIC_IDENTIFIERS.add("SSLContext");
        PUBLIC_IDENTIFIERS.add("SSLContextImpl");
        PUBLIC_IDENTIFIERS.add("SSLContextSpi");
        PUBLIC_IDENTIFIERS.add("SSLEngine");
        PUBLIC_IDENTIFIERS.add("SSLEngineResult");
        PUBLIC_IDENTIFIERS.add("SSLException");
        PUBLIC_IDENTIFIERS.add("SSLFlowDelegate");
        PUBLIC_IDENTIFIERS.add("SSLFlowDelegate$Monitor");
        PUBLIC_IDENTIFIERS.add("SSLFlowDelegate$Monitorable");
        PUBLIC_IDENTIFIERS.add("SSLHandshakeException");
        PUBLIC_IDENTIFIERS.add("SSLKeyException");
        PUBLIC_IDENTIFIERS.add("SSLParameters");
        PUBLIC_IDENTIFIERS.add("SSLPeerUnverifiedException");
        PUBLIC_IDENTIFIERS.add("SSLProtocolException");
        PUBLIC_IDENTIFIERS.add("SslRMIClientSocketFactory");
        PUBLIC_IDENTIFIERS.add("SslRMIServerSocketFactory");
        PUBLIC_IDENTIFIERS.add("SSLServerSocket");
        PUBLIC_IDENTIFIERS.add("SSLServerSocketFactory");
        PUBLIC_IDENTIFIERS.add("SSLSession");
        PUBLIC_IDENTIFIERS.add("SSLSessionBindingEvent");
        PUBLIC_IDENTIFIERS.add("SSLSessionBindingListener");
        PUBLIC_IDENTIFIERS.add("SSLSessionContext");
        PUBLIC_IDENTIFIERS.add("SSLSocket");
        PUBLIC_IDENTIFIERS.add("SSLSocketFactory");
        PUBLIC_IDENTIFIERS.add("SSLTube");
        PUBLIC_IDENTIFIERS.add("Stable");
        PUBLIC_IDENTIFIERS.add("Stack");
        PUBLIC_IDENTIFIERS.add("StackableScope");
        PUBLIC_IDENTIFIERS.add("StackConsumer");
        PUBLIC_IDENTIFIERS.add("StackFrame");
        PUBLIC_IDENTIFIERS.add("StackFrameImpl");
        PUBLIC_IDENTIFIERS.add("StackFrameInfo");
        PUBLIC_IDENTIFIERS.add("StackFrameStream");
        PUBLIC_IDENTIFIERS.add("StackInstruction");
        PUBLIC_IDENTIFIERS.add("StackIntrospection");
        PUBLIC_IDENTIFIERS.add("StackMap_attribute");
        PUBLIC_IDENTIFIERS.add("StackMap_attribute$stack_map_frame");
        PUBLIC_IDENTIFIERS.add("StackMapTable_attribute");
        PUBLIC_IDENTIFIERS.add("StackMapTable_attribute$append_frame");
        PUBLIC_IDENTIFIERS.add("StackMapTable_attribute$chop_frame");
        PUBLIC_IDENTIFIERS.add("StackMapTable_attribute$full_frame");
        PUBLIC_IDENTIFIERS.add("StackMapTable_attribute$Object_variable_info");
        PUBLIC_IDENTIFIERS.add("StackMapTable_attribute$same_frame");
        PUBLIC_IDENTIFIERS.add("StackMapTable_attribute$same_frame_extended");
        PUBLIC_IDENTIFIERS.add("StackMapTable_attribute$same_locals_1_stack_item_frame");
        PUBLIC_IDENTIFIERS.add("StackMapTable_attribute$same_locals_1_stack_item_frame_extended");
        PUBLIC_IDENTIFIERS.add("StackMapTable_attribute$stack_map_frame");
        PUBLIC_IDENTIFIERS.add("StackMapTable_attribute$stack_map_frame$Visitor");
        PUBLIC_IDENTIFIERS.add("StackMapTable_attribute$Uninitialized_variable_info");
        PUBLIC_IDENTIFIERS.add("StackMapTable_attribute$verification_type_info");
        PUBLIC_IDENTIFIERS.add("StackMapWriter");
        PUBLIC_IDENTIFIERS.add("StackOverflowError");
        PUBLIC_IDENTIFIERS.add("StackProducer");
        PUBLIC_IDENTIFIERS.add("StackTrace");
        PUBLIC_IDENTIFIERS.add("StackTraceElementCompositeData");
        PUBLIC_IDENTIFIERS.add("StackValue");
        PUBLIC_IDENTIFIERS.add("StackValueCollection");
        PUBLIC_IDENTIFIERS.add("StackWalker$StackFrame");
        PUBLIC_IDENTIFIERS.add("StampedLock");
        PUBLIC_IDENTIFIERS.add("StandardCharsets");
        PUBLIC_IDENTIFIERS.add("StandardDoclet");
        PUBLIC_IDENTIFIERS.add("StandardEmitterMBean");
        PUBLIC_IDENTIFIERS.add("StandardGlyphVector");
        PUBLIC_IDENTIFIERS.add("StandardJavaFileManager");
        PUBLIC_IDENTIFIERS.add("StandardJavaFileManager$PathFactory");
        PUBLIC_IDENTIFIERS.add("StandardMBean");
        PUBLIC_IDENTIFIERS.add("StandardMBeanSupport");
        PUBLIC_IDENTIFIERS.add("StandardMetadataFormat");
        PUBLIC_IDENTIFIERS.add("StandardMetadataFormatResources");
        PUBLIC_IDENTIFIERS.add("StandardParserConfiguration");
        PUBLIC_IDENTIFIERS.add("Start");
        PUBLIC_IDENTIFIERS.add("StartDocument");
        PUBLIC_IDENTIFIERS.add("StartDocumentEvent");
        PUBLIC_IDENTIFIERS.add("StartElement");
        PUBLIC_IDENTIFIERS.add("StartElementEvent");
        PUBLIC_IDENTIFIERS.add("StartElementTree");
        PUBLIC_IDENTIFIERS.add("StartTlsRequest");
        PUBLIC_IDENTIFIERS.add("StartTlsResponse");
        PUBLIC_IDENTIFIERS.add("State");
        PUBLIC_IDENTIFIERS.add("StateChangeAction");
        PUBLIC_IDENTIFIERS.add("StateEdit");
        PUBLIC_IDENTIFIERS.add("StateEditable");
        PUBLIC_IDENTIFIERS.add("StateFactory");
        PUBLIC_IDENTIFIERS.add("Statement");
        PUBLIC_IDENTIFIERS.add("StatementEvent");
        PUBLIC_IDENTIFIERS.add("StatementEventListener");
        PUBLIC_IDENTIFIERS.add("StatementSnippet");
        PUBLIC_IDENTIFIERS.add("StatementTree");
        PUBLIC_IDENTIFIERS.add("StateTrackable");
        PUBLIC_IDENTIFIERS.add("StateTracker");
        PUBLIC_IDENTIFIERS.add("StaticBaseConstructor");
        PUBLIC_IDENTIFIERS.add("StaticInitMerger");
        PUBLIC_IDENTIFIERS.add("StatLong");
        PUBLIC_IDENTIFIERS.add("Status");
        PUBLIC_IDENTIFIERS.add("StatusBar");
        PUBLIC_IDENTIFIERS.add("StaxEntityResolverWrapper");
        PUBLIC_IDENTIFIERS.add("StaxErrorReporter");
        PUBLIC_IDENTIFIERS.add("StAXEvent2SAX");
        PUBLIC_IDENTIFIERS.add("StAXResult");
        PUBLIC_IDENTIFIERS.add("StAXSource");
        PUBLIC_IDENTIFIERS.add("StAXStream2SAX");
        PUBLIC_IDENTIFIERS.add("StaxXMLInputSource");
        PUBLIC_IDENTIFIERS.add("StepEvent");
        PUBLIC_IDENTIFIERS.add("StepIterator");
        PUBLIC_IDENTIFIERS.add("StepPattern");
        PUBLIC_IDENTIFIERS.add("StepRequest");
        PUBLIC_IDENTIFIERS.add("StopParseException");
        PUBLIC_IDENTIFIERS.add("StorageResolver");
        PUBLIC_IDENTIFIERS.add("StorageResolverException");
        PUBLIC_IDENTIFIERS.add("StorageResolverSpi");
        PUBLIC_IDENTIFIERS.add("StoreInstruction");
        PUBLIC_IDENTIFIERS.add("Stream");
        PUBLIC_IDENTIFIERS.add("Stream$Builder");
        PUBLIC_IDENTIFIERS.add("StreamCloser");
        PUBLIC_IDENTIFIERS.add("StreamCorruptedException");
        PUBLIC_IDENTIFIERS.add("StreamDecoder");
        PUBLIC_IDENTIFIERS.add("StreamFilter");
        PUBLIC_IDENTIFIERS.add("StreamFinalizer");
        PUBLIC_IDENTIFIERS.add("StreamHandler");
        PUBLIC_IDENTIFIERS.add("StreamingExecutionControl");
        PUBLIC_IDENTIFIERS.add("StreamMonitor");
        PUBLIC_IDENTIFIERS.add("StreamPrintService");
        PUBLIC_IDENTIFIERS.add("StreamPrintServiceFactory");
        PUBLIC_IDENTIFIERS.add("StreamReaderDelegate");
        PUBLIC_IDENTIFIERS.add("StreamRemoteCall");
        PUBLIC_IDENTIFIERS.add("StreamResult");
        PUBLIC_IDENTIFIERS.add("Streams");
        PUBLIC_IDENTIFIERS.add("StreamSource");
        PUBLIC_IDENTIFIERS.add("StreamTokenizer");
        PUBLIC_IDENTIFIERS.add("String");
        PUBLIC_IDENTIFIERS.add("StringArrayWrapper");
        PUBLIC_IDENTIFIERS.add("StringBufferInputStream");
        PUBLIC_IDENTIFIERS.add("StringBufferPool");
        PUBLIC_IDENTIFIERS.add("StringComparable");
        PUBLIC_IDENTIFIERS.add("StringConcat");
        PUBLIC_IDENTIFIERS.add("StringConcatException");
        PUBLIC_IDENTIFIERS.add("StringCounter");
        PUBLIC_IDENTIFIERS.add("StringDatatypeValidator");
        PUBLIC_IDENTIFIERS.add("StringDV");
        PUBLIC_IDENTIFIERS.add("StringEditor");
        PUBLIC_IDENTIFIERS.add("StringElementHandler");
        PUBLIC_IDENTIFIERS.add("StringHeadTail");
        PUBLIC_IDENTIFIERS.add("StringIndexOutOfBoundsException");
        PUBLIC_IDENTIFIERS.add("StringList");
        PUBLIC_IDENTIFIERS.add("StringMonitor");
        PUBLIC_IDENTIFIERS.add("StringMonitorMBean");
        PUBLIC_IDENTIFIERS.add("StringReader");
        PUBLIC_IDENTIFIERS.add("StringRefAddr");
        PUBLIC_IDENTIFIERS.add("StringReference");
        PUBLIC_IDENTIFIERS.add("StringReferenceImpl");
        PUBLIC_IDENTIFIERS.add("StringsCompleter");
        PUBLIC_IDENTIFIERS.add("StringSelection");
        PUBLIC_IDENTIFIERS.add("StringSharingDecompressor");
        PUBLIC_IDENTIFIERS.add("StringSharingDecompressorFactory");
        PUBLIC_IDENTIFIERS.add("StringSharingPlugin");
        PUBLIC_IDENTIFIERS.add("StringTable");
        PUBLIC_IDENTIFIERS.add("StringToIntTable");
        PUBLIC_IDENTIFIERS.add("StringTokenIterator");
        PUBLIC_IDENTIFIERS.add("StringTokenizer");
        PUBLIC_IDENTIFIERS.add("StringToStringTable");
        PUBLIC_IDENTIFIERS.add("StringToStringTableVector");
        PUBLIC_IDENTIFIERS.add("StringType");
        PUBLIC_IDENTIFIERS.add("StringUIClientPropertyKey");
        PUBLIC_IDENTIFIERS.add("StringUtils");
        PUBLIC_IDENTIFIERS.add("StringValueExp");
        PUBLIC_IDENTIFIERS.add("StringVector");
        PUBLIC_IDENTIFIERS.add("StringWriter");
        PUBLIC_IDENTIFIERS.add("StripFilter");
        PUBLIC_IDENTIFIERS.add("StripNativeDebugSymbolsPlugin$ObjCopyCmdBuilder");
        PUBLIC_IDENTIFIERS.add("StripWhitespaceFilter");
        PUBLIC_IDENTIFIERS.add("Stroke");
        PUBLIC_IDENTIFIERS.add("StrokeBorder");
        PUBLIC_IDENTIFIERS.add("Struct");
        PUBLIC_IDENTIFIERS.add("StructLayout");
        PUBLIC_IDENTIFIERS.add("StructuredTaskScope");
        PUBLIC_IDENTIFIERS.add("StructureViolationExceptions");
        PUBLIC_IDENTIFIERS.add("Stub");
        PUBLIC_IDENTIFIERS.add("StubNotFoundException");
        PUBLIC_IDENTIFIERS.add("StubQueue");
        PUBLIC_IDENTIFIERS.add("StubRoutines");
        PUBLIC_IDENTIFIERS.add("Style");
        PUBLIC_IDENTIFIERS.add("StyleAssociation");
        PUBLIC_IDENTIFIERS.add("StyleConstants");
        PUBLIC_IDENTIFIERS.add("StyleContext");
        PUBLIC_IDENTIFIERS.add("StyleContext$NamedStyle");
        PUBLIC_IDENTIFIERS.add("StyleContext$SmallAttributeSet");
        PUBLIC_IDENTIFIERS.add("StyledDocument");
        PUBLIC_IDENTIFIERS.add("StyledEditorKit");
        PUBLIC_IDENTIFIERS.add("StyledEditorKit$AlignmentAction");
        PUBLIC_IDENTIFIERS.add("StyledEditorKit$BoldAction");
        PUBLIC_IDENTIFIERS.add("StyledEditorKit$FontFamilyAction");
        PUBLIC_IDENTIFIERS.add("StyledEditorKit$FontSizeAction");
        PUBLIC_IDENTIFIERS.add("StyledEditorKit$ForegroundAction");
        PUBLIC_IDENTIFIERS.add("StyledEditorKit$ItalicAction");
        PUBLIC_IDENTIFIERS.add("StyledEditorKit$StyledTextAction");
        PUBLIC_IDENTIFIERS.add("StyledEditorKit$UnderlineAction");
        PUBLIC_IDENTIFIERS.add("StyledText");
        PUBLIC_IDENTIFIERS.add("StyledText$Consumer");
        PUBLIC_IDENTIFIERS.add("StyleResolver");
        PUBLIC_IDENTIFIERS.add("StyleSheet");
        PUBLIC_IDENTIFIERS.add("StyleSheetList");
        PUBLIC_IDENTIFIERS.add("StylesheetPIHandler");
        PUBLIC_IDENTIFIERS.add("SuballocatedByteVector");
        PUBLIC_IDENTIFIERS.add("SuballocatedIntVector");
        PUBLIC_IDENTIFIERS.add("SubContextList");
        PUBLIC_IDENTIFIERS.add("SubjectAlternativeNameExtension");
        PUBLIC_IDENTIFIERS.add("SubjectDelegator");
        PUBLIC_IDENTIFIERS.add("SubjectDomainCombiner");
        PUBLIC_IDENTIFIERS.add("SubjectInfoAccessExtension");
        PUBLIC_IDENTIFIERS.add("SubjectKeyIdentifierExtension");
        PUBLIC_IDENTIFIERS.add("SubmissionPublisher");
        PUBLIC_IDENTIFIERS.add("SubRegionShowable");
        PUBLIC_IDENTIFIERS.add("SubscriberWrapper");
        PUBLIC_IDENTIFIERS.add("SubscriptionBase");
        PUBLIC_IDENTIFIERS.add("SubstitutionGroupHandler");
        PUBLIC_IDENTIFIERS.add("SubWriterHolderWriter");
        PUBLIC_IDENTIFIERS.add("SummaryAPIListBuilder");
        PUBLIC_IDENTIFIERS.add("SummaryListWriter");
        PUBLIC_IDENTIFIERS.add("SummaryTaglet");
        PUBLIC_IDENTIFIERS.add("SummaryTree");
        PUBLIC_IDENTIFIERS.add("SunAlternateMedia");
        PUBLIC_IDENTIFIERS.add("SunCertPathBuilderException");
        PUBLIC_IDENTIFIERS.add("SunClipboard");
        PUBLIC_IDENTIFIERS.add("SunCommandLineLauncher");
        PUBLIC_IDENTIFIERS.add("SunCompositeContext");
        PUBLIC_IDENTIFIERS.add("SunDisplayChanger");
        PUBLIC_IDENTIFIERS.add("SunDragSourceContextPeer");
        PUBLIC_IDENTIFIERS.add("SunDropTargetContextPeer");
        PUBLIC_IDENTIFIERS.add("SunDropTargetContextPeer$EventDispatcher");
        PUBLIC_IDENTIFIERS.add("SunFontManager");
        PUBLIC_IDENTIFIERS.add("SunFontManager$FamilyDescription");
        PUBLIC_IDENTIFIERS.add("SunGraphicsCallback");
        PUBLIC_IDENTIFIERS.add("SunGraphicsEnvironment");
        PUBLIC_IDENTIFIERS.add("SunHints");
        PUBLIC_IDENTIFIERS.add("SunHints$Key");
        PUBLIC_IDENTIFIERS.add("SunHints$LCDContrastKey");
        PUBLIC_IDENTIFIERS.add("SunHints$Value");
        PUBLIC_IDENTIFIERS.add("SunJmxMBeanServer");
        PUBLIC_IDENTIFIERS.add("SunJSSE");
        PUBLIC_IDENTIFIERS.add("SunPrinterJobService");
        PUBLIC_IDENTIFIERS.add("SunToolkit");
        PUBLIC_IDENTIFIERS.add("SunToolkit$IllegalThreadException");
        PUBLIC_IDENTIFIERS.add("SunVolatileImage");
        PUBLIC_IDENTIFIERS.add("SunWritableRaster");
        PUBLIC_IDENTIFIERS.add("SunWritableRaster$DataStealer");
        PUBLIC_IDENTIFIERS.add("SupplementaryLocaleDataProvider");
        PUBLIC_IDENTIFIERS.add("Supplier");
        PUBLIC_IDENTIFIERS.add("SupportedAnnotationTypes");
        PUBLIC_IDENTIFIERS.add("SupportedOptions");
        PUBLIC_IDENTIFIERS.add("SupportedSourceVersion");
        PUBLIC_IDENTIFIERS.add("SupportedValuesAttribute");
        PUBLIC_IDENTIFIERS.add("SuppressWarnings");
        PUBLIC_IDENTIFIERS.add("Surface");
        PUBLIC_IDENTIFIERS.add("SurfaceData");
        PUBLIC_IDENTIFIERS.add("SurfaceDataProxy");
        PUBLIC_IDENTIFIERS.add("SurfaceDataProxy$CountdownTracker");
        PUBLIC_IDENTIFIERS.add("SurfaceManager");
        PUBLIC_IDENTIFIERS.add("SurfaceManager$FlushableCacheData");
        PUBLIC_IDENTIFIERS.add("SurfaceManager$ImageAccessor");
        PUBLIC_IDENTIFIERS.add("SurfaceManager$ProxiedGraphicsConfig");
        PUBLIC_IDENTIFIERS.add("SurfaceManagerFactory");
        PUBLIC_IDENTIFIERS.add("Surrogate");
        PUBLIC_IDENTIFIERS.add("Surrogate$Generator");
        PUBLIC_IDENTIFIERS.add("Surrogate$Parser");
        PUBLIC_IDENTIFIERS.add("SWAP");
        PUBLIC_IDENTIFIERS.add("SwingAccessor$JComponentAccessor");
        PUBLIC_IDENTIFIERS.add("SwingAccessor$JLightweightFrameAccessor");
        PUBLIC_IDENTIFIERS.add("SwingAccessor$JTextComponentAccessor");
        PUBLIC_IDENTIFIERS.add("SwingAccessor$KeyStrokeAccessor");
        PUBLIC_IDENTIFIERS.add("SwingAccessor$PopupFactoryAccessor");
        PUBLIC_IDENTIFIERS.add("SwingAccessor$RepaintManagerAccessor");
        PUBLIC_IDENTIFIERS.add("SwingAccessor$UIDefaultsAccessor");
        PUBLIC_IDENTIFIERS.add("SwingConstants");
        PUBLIC_IDENTIFIERS.add("SwingContainer");
        PUBLIC_IDENTIFIERS.add("SwingEventMonitor");
        PUBLIC_IDENTIFIERS.add("SwingInterOpUtils");
        PUBLIC_IDENTIFIERS.add("SwingUtilities");
        PUBLIC_IDENTIFIERS.add("SwingUtilities2");
        PUBLIC_IDENTIFIERS.add("SwingUtilities2$RepaintListener");
        PUBLIC_IDENTIFIERS.add("SwingUtilities3");
        PUBLIC_IDENTIFIERS.add("SwingWorker");
        PUBLIC_IDENTIFIERS.add("SwitchBootstraps");
        PUBLIC_IDENTIFIERS.add("SwitchExpressionTree");
        PUBLIC_IDENTIFIERS.add("SwitchPoint");
        PUBLIC_IDENTIFIERS.add("SwitchTree");
        PUBLIC_IDENTIFIERS.add("sym");
        PUBLIC_IDENTIFIERS.add("Sym");
        PUBLIC_IDENTIFIERS.add("Symbol");
        PUBLIC_IDENTIFIERS.add("Symbol$BindingSymbol");
        PUBLIC_IDENTIFIERS.add("Symbol$ClassSymbol");
        PUBLIC_IDENTIFIERS.add("Symbol$Completer");
        PUBLIC_IDENTIFIERS.add("Symbol$CompletionFailure");
        PUBLIC_IDENTIFIERS.add("Symbol$DelegatedSymbol");
        PUBLIC_IDENTIFIERS.add("Symbol$DynamicMethodSymbol");
        PUBLIC_IDENTIFIERS.add("Symbol$DynamicVarSymbol");
        PUBLIC_IDENTIFIERS.add("Symbol$MethodHandleSymbol");
        PUBLIC_IDENTIFIERS.add("Symbol$MethodSymbol");
        PUBLIC_IDENTIFIERS.add("Symbol$ModuleSymbol");
        PUBLIC_IDENTIFIERS.add("Symbol$OperatorSymbol");
        PUBLIC_IDENTIFIERS.add("Symbol$PackageSymbol");
        PUBLIC_IDENTIFIERS.add("Symbol$ParamSymbol");
        PUBLIC_IDENTIFIERS.add("Symbol$RecordComponent");
        PUBLIC_IDENTIFIERS.add("Symbol$RootPackageSymbol");
        PUBLIC_IDENTIFIERS.add("Symbol$TypeSymbol");
        PUBLIC_IDENTIFIERS.add("Symbol$TypeVariableSymbol");
        PUBLIC_IDENTIFIERS.add("Symbol$VarSymbol");
        PUBLIC_IDENTIFIERS.add("Symbol$Visitor");
        PUBLIC_IDENTIFIERS.add("SymbolFinder");
        PUBLIC_IDENTIFIERS.add("SymbolHash");
        PUBLIC_IDENTIFIERS.add("SymbolLookup");
        PUBLIC_IDENTIFIERS.add("SymbolMetadata");
        PUBLIC_IDENTIFIERS.add("SymbolResolutionClosure");
        PUBLIC_IDENTIFIERS.add("SymbolTable");
        PUBLIC_IDENTIFIERS.add("SymLinkResourcePoolEntry");
        PUBLIC_IDENTIFIERS.add("Symtab");
        PUBLIC_IDENTIFIERS.add("SyncFactory");
        PUBLIC_IDENTIFIERS.add("SyncFactoryException");
        PUBLIC_IDENTIFIERS.add("SyncFailedException");
        PUBLIC_IDENTIFIERS.add("SynchronizedTree");
        PUBLIC_IDENTIFIERS.add("SynchronousQueue");
        PUBLIC_IDENTIFIERS.add("SyncProvider");
        PUBLIC_IDENTIFIERS.add("SyncProviderException");
        PUBLIC_IDENTIFIERS.add("SyncResolver");
        PUBLIC_IDENTIFIERS.add("SyncResolverImpl");
        PUBLIC_IDENTIFIERS.add("SyntaxError");
        PUBLIC_IDENTIFIERS.add("SyntaxException");
        PUBLIC_IDENTIFIERS.add("SyntaxTreeNode");
        PUBLIC_IDENTIFIERS.add("SynthButtonUI");
        PUBLIC_IDENTIFIERS.add("SynthCheckBoxMenuItemUI");
        PUBLIC_IDENTIFIERS.add("SynthCheckBoxUI");
        PUBLIC_IDENTIFIERS.add("SynthColorChooserUI");
        PUBLIC_IDENTIFIERS.add("SynthComboBoxUI");
        PUBLIC_IDENTIFIERS.add("SynthConstants");
        PUBLIC_IDENTIFIERS.add("SynthContext");
        PUBLIC_IDENTIFIERS.add("SynthDesktopIconUI");
        PUBLIC_IDENTIFIERS.add("SynthDesktopPaneUI");
        PUBLIC_IDENTIFIERS.add("SynthEditorPaneUI");
        PUBLIC_IDENTIFIERS.add("Synthesizer");
        PUBLIC_IDENTIFIERS.add("Synthetic_attribute");
        PUBLIC_IDENTIFIERS.add("SyntheticRepository");
        PUBLIC_IDENTIFIERS.add("SynthFileChooserUI");
        PUBLIC_IDENTIFIERS.add("SynthFileChooserUIImpl");
        PUBLIC_IDENTIFIERS.add("SynthFileChooserUIImpl$DirectoryComboBoxAction");
        PUBLIC_IDENTIFIERS.add("SynthFileChooserUIImpl$DirectoryComboBoxModel");
        PUBLIC_IDENTIFIERS.add("SynthFileChooserUIImpl$FilterComboBoxModel");
        PUBLIC_IDENTIFIERS.add("SynthFileChooserUIImpl$FilterComboBoxRenderer");
        PUBLIC_IDENTIFIERS.add("SynthFormattedTextFieldUI");
        PUBLIC_IDENTIFIERS.add("SynthGraphicsUtils");
        PUBLIC_IDENTIFIERS.add("SynthIcon");
        PUBLIC_IDENTIFIERS.add("SynthInternalFrameUI");
        PUBLIC_IDENTIFIERS.add("SynthLabelUI");
        PUBLIC_IDENTIFIERS.add("SynthListUI");
        PUBLIC_IDENTIFIERS.add("SynthLookAndFeel");
        PUBLIC_IDENTIFIERS.add("SynthMenuBarUI");
        PUBLIC_IDENTIFIERS.add("SynthMenuItemUI");
        PUBLIC_IDENTIFIERS.add("SynthMenuUI");
        PUBLIC_IDENTIFIERS.add("SynthOptionPaneUI");
        PUBLIC_IDENTIFIERS.add("SynthPainter");
        PUBLIC_IDENTIFIERS.add("SynthPanelUI");
        PUBLIC_IDENTIFIERS.add("SynthPasswordFieldUI");
        PUBLIC_IDENTIFIERS.add("SynthPopupMenuUI");
        PUBLIC_IDENTIFIERS.add("SynthProgressBarUI");
        PUBLIC_IDENTIFIERS.add("SynthRadioButtonMenuItemUI");
        PUBLIC_IDENTIFIERS.add("SynthRadioButtonUI");
        PUBLIC_IDENTIFIERS.add("SynthRootPaneUI");
        PUBLIC_IDENTIFIERS.add("SynthScrollBarUI");
        PUBLIC_IDENTIFIERS.add("SynthScrollPaneUI");
        PUBLIC_IDENTIFIERS.add("SynthSeparatorUI");
        PUBLIC_IDENTIFIERS.add("SynthSliderUI");
        PUBLIC_IDENTIFIERS.add("SynthSpinnerUI");
        PUBLIC_IDENTIFIERS.add("SynthSplitPaneUI");
        PUBLIC_IDENTIFIERS.add("SynthStyle");
        PUBLIC_IDENTIFIERS.add("SynthStyleFactory");
        PUBLIC_IDENTIFIERS.add("SynthTabbedPaneUI");
        PUBLIC_IDENTIFIERS.add("SynthTableHeaderUI");
        PUBLIC_IDENTIFIERS.add("SynthTableUI");
        PUBLIC_IDENTIFIERS.add("SynthTextAreaUI");
        PUBLIC_IDENTIFIERS.add("SynthTextFieldUI");
        PUBLIC_IDENTIFIERS.add("SynthTextPaneUI");
        PUBLIC_IDENTIFIERS.add("SynthToggleButtonUI");
        PUBLIC_IDENTIFIERS.add("SynthToolBarUI");
        PUBLIC_IDENTIFIERS.add("SynthToolTipUI");
        PUBLIC_IDENTIFIERS.add("SynthTreeUI");
        PUBLIC_IDENTIFIERS.add("SynthUI");
        PUBLIC_IDENTIFIERS.add("SynthViewportUI");
        PUBLIC_IDENTIFIERS.add("SysexMessage");
        PUBLIC_IDENTIFIERS.add("SysPropsDumper");
        PUBLIC_IDENTIFIERS.add("SysPropsPanel");
        PUBLIC_IDENTIFIERS.add("System$Logger");
        PUBLIC_IDENTIFIERS.add("System$LoggerFinder");
        PUBLIC_IDENTIFIERS.add("SystemCompleter");
        PUBLIC_IDENTIFIERS.add("SystemDictionary");
        PUBLIC_IDENTIFIERS.add("SystemDictionaryHelper");
        PUBLIC_IDENTIFIERS.add("SystemEventListener");
        PUBLIC_IDENTIFIERS.add("SystemIDResolver");
        PUBLIC_IDENTIFIERS.add("SystemMetrics");
        PUBLIC_IDENTIFIERS.add("SystemPropertiesWriter");
        PUBLIC_IDENTIFIERS.add("SystemPropertyTaglet");
        PUBLIC_IDENTIFIERS.add("SystemPropertyTree");
        PUBLIC_IDENTIFIERS.add("SystemProps$Raw");
        PUBLIC_IDENTIFIERS.add("SystemSleepListener");
        PUBLIC_IDENTIFIERS.add("SystemTray");
        PUBLIC_IDENTIFIERS.add("SystemTrayPeer");
        PUBLIC_IDENTIFIERS.add("SysVVaList");
        PUBLIC_IDENTIFIERS.add("SysVVaList$Builder");
    }
}
