/*
 * SpotBugs - Find bugs in Java programs
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package edu.umd.cs.findbugs.detect.publicidentifiers;

import java.util.HashSet;
import java.util.Set;

/**
 * Utility class to load public identifiers from I to J
 */
class LoadPublicIdentifiersIJ {
    private static Set<String> PUBLIC_IDENTIFIERS = null;

    public static Set<String> getPublicIdentifiers() {
        if (PUBLIC_IDENTIFIERS == null) {
            PUBLIC_IDENTIFIERS = new HashSet<>();
            PUBLIC_IDENTIFIERS.add("I18NImpl");
            PUBLIC_IDENTIFIERS.add("I2B");
            PUBLIC_IDENTIFIERS.add("I2C");
            PUBLIC_IDENTIFIERS.add("I2D");
            PUBLIC_IDENTIFIERS.add("I2F");
            PUBLIC_IDENTIFIERS.add("I2L");
            PUBLIC_IDENTIFIERS.add("I2S");
            PUBLIC_IDENTIFIERS.add("IADD");
            PUBLIC_IDENTIFIERS.add("IALOAD");
            PUBLIC_IDENTIFIERS.add("IAND");
            PUBLIC_IDENTIFIERS.add("IASTORE");
            PUBLIC_IDENTIFIERS.add("IBM037");
            PUBLIC_IDENTIFIERS.add("IBM1006");
            PUBLIC_IDENTIFIERS.add("IBM1025");
            PUBLIC_IDENTIFIERS.add("IBM1026");
            PUBLIC_IDENTIFIERS.add("IBM1046");
            PUBLIC_IDENTIFIERS.add("IBM1047");
            PUBLIC_IDENTIFIERS.add("IBM1097");
            PUBLIC_IDENTIFIERS.add("IBM1098");
            PUBLIC_IDENTIFIERS.add("IBM1112");
            PUBLIC_IDENTIFIERS.add("IBM1122");
            PUBLIC_IDENTIFIERS.add("IBM1123");
            PUBLIC_IDENTIFIERS.add("IBM1124");
            PUBLIC_IDENTIFIERS.add("IBM1129");
            PUBLIC_IDENTIFIERS.add("IBM1140");
            PUBLIC_IDENTIFIERS.add("IBM1141");
            PUBLIC_IDENTIFIERS.add("IBM1142");
            PUBLIC_IDENTIFIERS.add("IBM1143");
            PUBLIC_IDENTIFIERS.add("IBM1144");
            PUBLIC_IDENTIFIERS.add("IBM1145");
            PUBLIC_IDENTIFIERS.add("IBM1146");
            PUBLIC_IDENTIFIERS.add("IBM1147");
            PUBLIC_IDENTIFIERS.add("IBM1148");
            PUBLIC_IDENTIFIERS.add("IBM1149");
            PUBLIC_IDENTIFIERS.add("IBM1166");
            PUBLIC_IDENTIFIERS.add("IBM1364");
            PUBLIC_IDENTIFIERS.add("IBM1381");
            PUBLIC_IDENTIFIERS.add("IBM1383");
            PUBLIC_IDENTIFIERS.add("IBM273");
            PUBLIC_IDENTIFIERS.add("IBM277");
            PUBLIC_IDENTIFIERS.add("IBM278");
            PUBLIC_IDENTIFIERS.add("IBM280");
            PUBLIC_IDENTIFIERS.add("IBM284");
            PUBLIC_IDENTIFIERS.add("IBM285");
            PUBLIC_IDENTIFIERS.add("IBM290");
            PUBLIC_IDENTIFIERS.add("IBM29626C");
            PUBLIC_IDENTIFIERS.add("IBM297");
            PUBLIC_IDENTIFIERS.add("IBM300");
            PUBLIC_IDENTIFIERS.add("IBM33722");
            PUBLIC_IDENTIFIERS.add("IBM33722$Decoder");
            PUBLIC_IDENTIFIERS.add("IBM33722$Encoder");
            PUBLIC_IDENTIFIERS.add("IBM420");
            PUBLIC_IDENTIFIERS.add("IBM424");
            PUBLIC_IDENTIFIERS.add("IBM437");
            PUBLIC_IDENTIFIERS.add("IBM500");
            PUBLIC_IDENTIFIERS.add("IBM737");
            PUBLIC_IDENTIFIERS.add("IBM775");
            PUBLIC_IDENTIFIERS.add("IBM833");
            PUBLIC_IDENTIFIERS.add("IBM834");
            PUBLIC_IDENTIFIERS.add("IBM834$Encoder");
            PUBLIC_IDENTIFIERS.add("IBM838");
            PUBLIC_IDENTIFIERS.add("IBM850");
            PUBLIC_IDENTIFIERS.add("IBM852");
            PUBLIC_IDENTIFIERS.add("IBM855");
            PUBLIC_IDENTIFIERS.add("IBM856");
            PUBLIC_IDENTIFIERS.add("IBM857");
            PUBLIC_IDENTIFIERS.add("IBM858");
            PUBLIC_IDENTIFIERS.add("IBM860");
            PUBLIC_IDENTIFIERS.add("IBM861");
            PUBLIC_IDENTIFIERS.add("IBM862");
            PUBLIC_IDENTIFIERS.add("IBM863");
            PUBLIC_IDENTIFIERS.add("IBM864");
            PUBLIC_IDENTIFIERS.add("IBM865");
            PUBLIC_IDENTIFIERS.add("IBM866");
            PUBLIC_IDENTIFIERS.add("IBM868");
            PUBLIC_IDENTIFIERS.add("IBM869");
            PUBLIC_IDENTIFIERS.add("IBM870");
            PUBLIC_IDENTIFIERS.add("IBM871");
            PUBLIC_IDENTIFIERS.add("IBM874");
            PUBLIC_IDENTIFIERS.add("IBM875");
            PUBLIC_IDENTIFIERS.add("IBM918");
            PUBLIC_IDENTIFIERS.add("IBM921");
            PUBLIC_IDENTIFIERS.add("IBM922");
            PUBLIC_IDENTIFIERS.add("IBM930");
            PUBLIC_IDENTIFIERS.add("IBM933");
            PUBLIC_IDENTIFIERS.add("IBM935");
            PUBLIC_IDENTIFIERS.add("IBM937");
            PUBLIC_IDENTIFIERS.add("IBM939");
            PUBLIC_IDENTIFIERS.add("IBM942");
            PUBLIC_IDENTIFIERS.add("IBM942C");
            PUBLIC_IDENTIFIERS.add("IBM943");
            PUBLIC_IDENTIFIERS.add("IBM943C");
            PUBLIC_IDENTIFIERS.add("IBM948");
            PUBLIC_IDENTIFIERS.add("IBM949");
            PUBLIC_IDENTIFIERS.add("IBM949C");
            PUBLIC_IDENTIFIERS.add("IBM950");
            PUBLIC_IDENTIFIERS.add("IBM964");
            PUBLIC_IDENTIFIERS.add("IBM964$Decoder");
            PUBLIC_IDENTIFIERS.add("IBM964$Encoder");
            PUBLIC_IDENTIFIERS.add("IBM970");
            PUBLIC_IDENTIFIERS.add("ICC_ColorSpace");
            PUBLIC_IDENTIFIERS.add("ICC_Profile");
            PUBLIC_IDENTIFIERS.add("Icon");
            PUBLIC_IDENTIFIERS.add("IconInfo");
            PUBLIC_IDENTIFIERS.add("IconManager");
            PUBLIC_IDENTIFIERS.add("ICONST");
            PUBLIC_IDENTIFIERS.add("IconUIResource");
            PUBLIC_IDENTIFIERS.add("IconView");
            PUBLIC_IDENTIFIERS.add("ICUBinary$Authenticate");
            PUBLIC_IDENTIFIERS.add("IDDatatypeValidator");
            PUBLIC_IDENTIFIERS.add("IDDV");
            PUBLIC_IDENTIFIERS.add("Identifier");
            PUBLIC_IDENTIFIERS.add("IdentifierTree");
            PUBLIC_IDENTIFIERS.add("Identity");
            PUBLIC_IDENTIFIERS.add("IdentityArrayList");
            PUBLIC_IDENTIFIERS.add("IdentityConstraint");
            PUBLIC_IDENTIFIERS.add("IdentityHashMap");
            PUBLIC_IDENTIFIERS.add("IdentityLinkedList");
            PUBLIC_IDENTIFIERS.add("IdentityScope");
            PUBLIC_IDENTIFIERS.add("IDIV");
            PUBLIC_IDENTIFIERS.add("IDREFDatatypeValidator");
            PUBLIC_IDENTIFIERS.add("IDREFDV");
            PUBLIC_IDENTIFIERS.add("IF_ACMPEQ");
            PUBLIC_IDENTIFIERS.add("IF_ACMPNE");
            PUBLIC_IDENTIFIERS.add("IFEQ");
            PUBLIC_IDENTIFIERS.add("IFGE");
            PUBLIC_IDENTIFIERS.add("IFGT");
            PUBLIC_IDENTIFIERS.add("IF_ICMPEQ");
            PUBLIC_IDENTIFIERS.add("IF_ICMPGE");
            PUBLIC_IDENTIFIERS.add("IF_ICMPGT");
            PUBLIC_IDENTIFIERS.add("IF_ICMPLE");
            PUBLIC_IDENTIFIERS.add("IF_ICMPLT");
            PUBLIC_IDENTIFIERS.add("IF_ICMPNE");
            PUBLIC_IDENTIFIERS.add("IfInstruction");
            PUBLIC_IDENTIFIERS.add("IFLE");
            PUBLIC_IDENTIFIERS.add("IFLT");
            PUBLIC_IDENTIFIERS.add("IFNE");
            PUBLIC_IDENTIFIERS.add("IFNONNULL");
            PUBLIC_IDENTIFIERS.add("IFNULL");
            PUBLIC_IDENTIFIERS.add("IfTree");
            PUBLIC_IDENTIFIERS.add("IgnoreAllErrorHandler");
            PUBLIC_IDENTIFIERS.add("IgnorePaintEvent");
            PUBLIC_IDENTIFIERS.add("IINC");
            PUBLIC_IDENTIFIERS.add("IincInsnNode");
            PUBLIC_IDENTIFIERS.add("IIOByteBuffer");
            PUBLIC_IDENTIFIERS.add("IIOException");
            PUBLIC_IDENTIFIERS.add("IIOImage");
            PUBLIC_IDENTIFIERS.add("IIOInvalidTreeException");
            PUBLIC_IDENTIFIERS.add("IIOMetadata");
            PUBLIC_IDENTIFIERS.add("IIOMetadataController");
            PUBLIC_IDENTIFIERS.add("IIOMetadataFormat");
            PUBLIC_IDENTIFIERS.add("IIOMetadataFormatImpl");
            PUBLIC_IDENTIFIERS.add("IIOMetadataNode");
            PUBLIC_IDENTIFIERS.add("IIOParam");
            PUBLIC_IDENTIFIERS.add("IIOParamController");
            PUBLIC_IDENTIFIERS.add("IIOReadProgressListener");
            PUBLIC_IDENTIFIERS.add("IIOReadUpdateListener");
            PUBLIC_IDENTIFIERS.add("IIOReadWarningListener");
            PUBLIC_IDENTIFIERS.add("IIOServiceProvider");
            PUBLIC_IDENTIFIERS.add("IIOWriteProgressListener");
            PUBLIC_IDENTIFIERS.add("IIOWriteWarningListener");
            PUBLIC_IDENTIFIERS.add("IllegalAccessError");
            PUBLIC_IDENTIFIERS.add("IllegalAccessException");
            PUBLIC_IDENTIFIERS.add("IllegalArgumentException");
            PUBLIC_IDENTIFIERS.add("IllegalBlockingModeException");
            PUBLIC_IDENTIFIERS.add("IllegalBlockSizeException");
            PUBLIC_IDENTIFIERS.add("IllegalCallerException");
            PUBLIC_IDENTIFIERS.add("IllegalChannelGroupException");
            PUBLIC_IDENTIFIERS.add("IllegalCharsetNameException");
            PUBLIC_IDENTIFIERS.add("IllegalClassFormatException");
            PUBLIC_IDENTIFIERS.add("IllegalComponentStateException");
            PUBLIC_IDENTIFIERS.add("IllegalConnectorArgumentsException");
            PUBLIC_IDENTIFIERS.add("IllegalFormatCodePointException");
            PUBLIC_IDENTIFIERS.add("IllegalFormatConversionException");
            PUBLIC_IDENTIFIERS.add("IllegalFormatException");
            PUBLIC_IDENTIFIERS.add("IllegalFormatFlagsException");
            PUBLIC_IDENTIFIERS.add("IllegalFormatPrecisionException");
            PUBLIC_IDENTIFIERS.add("IllegalFormatWidthException");
            PUBLIC_IDENTIFIERS.add("IllegalMonitorStateException");
            PUBLIC_IDENTIFIERS.add("IllegalPathStateException");
            PUBLIC_IDENTIFIERS.add("IllegalReceiveException");
            PUBLIC_IDENTIFIERS.add("IllegalSelectorException");
            PUBLIC_IDENTIFIERS.add("IllegalStateException");
            PUBLIC_IDENTIFIERS.add("IllegalThreadStateException");
            PUBLIC_IDENTIFIERS.add("IllegalUnbindException");
            PUBLIC_IDENTIFIERS.add("IllformedLocaleException");
            PUBLIC_IDENTIFIERS.add("ILOAD");
            PUBLIC_IDENTIFIERS.add("Image");
            PUBLIC_IDENTIFIERS.add("ImageAccessException");
            PUBLIC_IDENTIFIERS.add("ImageBuilder");
            PUBLIC_IDENTIFIERS.add("ImageCache");
            PUBLIC_IDENTIFIERS.add("ImageCache$PixelsKey");
            PUBLIC_IDENTIFIERS.add("ImageCapabilities");
            PUBLIC_IDENTIFIERS.add("ImageConsumer");
            PUBLIC_IDENTIFIERS.add("ImageDecoder");
            PUBLIC_IDENTIFIERS.add("ImageFetchable");
            PUBLIC_IDENTIFIERS.add("ImageFilter");
            PUBLIC_IDENTIFIERS.add("ImageFormatException");
            PUBLIC_IDENTIFIERS.add("ImageIcon");
            PUBLIC_IDENTIFIERS.add("ImageIcon$AccessibleImageIcon");
            PUBLIC_IDENTIFIERS.add("ImageIconUIResource");
            PUBLIC_IDENTIFIERS.add("ImageInputStream");
            PUBLIC_IDENTIFIERS.add("ImageInputStreamImpl");
            PUBLIC_IDENTIFIERS.add("ImageInputStreamSpi");
            PUBLIC_IDENTIFIERS.add("ImageLocation");
            PUBLIC_IDENTIFIERS.add("ImageObserver");
            PUBLIC_IDENTIFIERS.add("ImageOutputStream");
            PUBLIC_IDENTIFIERS.add("ImageOutputStreamImpl");
            PUBLIC_IDENTIFIERS.add("ImageOutputStreamSpi");
            PUBLIC_IDENTIFIERS.add("ImagePluginStack$ImageProvider");
            PUBLIC_IDENTIFIERS.add("ImageProducer");
            PUBLIC_IDENTIFIERS.add("ImageReader");
            PUBLIC_IDENTIFIERS.add("ImageReader$Node");
            PUBLIC_IDENTIFIERS.add("ImageReaderFactory");
            PUBLIC_IDENTIFIERS.add("ImageReaderSpi");
            PUBLIC_IDENTIFIERS.add("ImageReaderWriterSpi");
            PUBLIC_IDENTIFIERS.add("ImageReadParam");
            PUBLIC_IDENTIFIERS.add("ImageRepresentation");
            PUBLIC_IDENTIFIERS.add("ImageStream");
            PUBLIC_IDENTIFIERS.add("ImageStrings");
            PUBLIC_IDENTIFIERS.add("ImageStringsReader");
            PUBLIC_IDENTIFIERS.add("ImageTranscoder");
            PUBLIC_IDENTIFIERS.add("ImageTranscoderSpi");
            PUBLIC_IDENTIFIERS.add("ImageTypeSpecifier");
            PUBLIC_IDENTIFIERS.add("ImageUtil");
            PUBLIC_IDENTIFIERS.add("ImageView");
            PUBLIC_IDENTIFIERS.add("ImageWatched");
            PUBLIC_IDENTIFIERS.add("ImageWatched$Link");
            PUBLIC_IDENTIFIERS.add("ImageWatched$WeakLink");
            PUBLIC_IDENTIFIERS.add("ImageWriteParam");
            PUBLIC_IDENTIFIERS.add("ImageWriter");
            PUBLIC_IDENTIFIERS.add("ImageWriterSpi");
            PUBLIC_IDENTIFIERS.add("ImagingLib");
            PUBLIC_IDENTIFIERS.add("ImagingOpException");
            PUBLIC_IDENTIFIERS.add("ImmediateOrRegister");
            PUBLIC_IDENTIFIERS.add("ImmutableDescriptor");
            PUBLIC_IDENTIFIERS.add("ImmutableExtendedSSLSession");
            PUBLIC_IDENTIFIERS.add("ImmutableIntegerModuloP");
            PUBLIC_IDENTIFIERS.add("ImmutableOopMap");
            PUBLIC_IDENTIFIERS.add("ImmutableOopMapPair");
            PUBLIC_IDENTIFIERS.add("ImmutableOopMapSet");
            PUBLIC_IDENTIFIERS.add("ImmutablePoint");
            PUBLIC_IDENTIFIERS.add("ImmutableSSLSession");
            PUBLIC_IDENTIFIERS.add("IMPDEP1");
            PUBLIC_IDENTIFIERS.add("IMPDEP2");
            PUBLIC_IDENTIFIERS.add("ImportSnippet");
            PUBLIC_IDENTIFIERS.add("ImportTree");
            PUBLIC_IDENTIFIERS.add("IMUL");
            PUBLIC_IDENTIFIERS.add("InaccessibleObjectException");
            PUBLIC_IDENTIFIERS.add("InclusiveNamespaces");
            PUBLIC_IDENTIFIERS.add("IncompatibleClassChangeError");
            PUBLIC_IDENTIFIERS.add("IncompatibleThreadStateException");
            PUBLIC_IDENTIFIERS.add("IncompleteAnnotationException");
            PUBLIC_IDENTIFIERS.add("InconsistentDebugInfoException");
            PUBLIC_IDENTIFIERS.add("IncrementalSAXSource");
            PUBLIC_IDENTIFIERS.add("IncrementalSAXSource_Xerces");
            PUBLIC_IDENTIFIERS.add("IndentPrinter");
            PUBLIC_IDENTIFIERS.add("IndexableFieldIdentifier");
            PUBLIC_IDENTIFIERS.add("IndexBuilder");
            PUBLIC_IDENTIFIERS.add("IndexColorModel");
            PUBLIC_IDENTIFIERS.add("IndexedCollectionCertStore");
            PUBLIC_IDENTIFIERS.add("IndexedInstruction");
            PUBLIC_IDENTIFIERS.add("IndexedPropertyChangeEvent");
            PUBLIC_IDENTIFIERS.add("IndexedPropertyDescriptor");
            PUBLIC_IDENTIFIERS.add("IndexItem");
            PUBLIC_IDENTIFIERS.add("IndexOutOfBoundsException");
            PUBLIC_IDENTIFIERS.add("IndexRedirectWriter");
            PUBLIC_IDENTIFIERS.add("IndexTaglet");
            PUBLIC_IDENTIFIERS.add("IndexTree");
            PUBLIC_IDENTIFIERS.add("IndexWriter");
            PUBLIC_IDENTIFIERS.add("INEG");
            PUBLIC_IDENTIFIERS.add("InetAddress");
            PUBLIC_IDENTIFIERS.add("InetAddressConverter");
            PUBLIC_IDENTIFIERS.add("InetAddressResolver");
            PUBLIC_IDENTIFIERS.add("InetAddressResolverProvider");
            PUBLIC_IDENTIFIERS.add("InetAddressResolverProvider$Configuration");
            PUBLIC_IDENTIFIERS.add("InetSocketAddress");
            PUBLIC_IDENTIFIERS.add("Infer");
            PUBLIC_IDENTIFIERS.add("Infer$BoundFilter");
            PUBLIC_IDENTIFIERS.add("Infer$GraphStrategy$NodeNotFoundException");
            PUBLIC_IDENTIFIERS.add("Infer$IncorporationAction");
            PUBLIC_IDENTIFIERS.add("Infer$InferenceException");
            PUBLIC_IDENTIFIERS.add("Infer$PartiallyInferredMethodType");
            PUBLIC_IDENTIFIERS.add("InferenceContext");
            PUBLIC_IDENTIFIERS.add("Inflater");
            PUBLIC_IDENTIFIERS.add("InflaterInputStream");
            PUBLIC_IDENTIFIERS.add("InflaterOutputStream");
            PUBLIC_IDENTIFIERS.add("Infopoint");
            PUBLIC_IDENTIFIERS.add("InfoWindow");
            PUBLIC_IDENTIFIERS.add("InfoWindow$Balloon");
            PUBLIC_IDENTIFIERS.add("InfoWindow$Balloon$LiveArguments");
            PUBLIC_IDENTIFIERS.add("InfoWindow$Tooltip");
            PUBLIC_IDENTIFIERS.add("InfoWindow$Tooltip$LiveArguments");
            PUBLIC_IDENTIFIERS.add("InheritableTaglet");
            PUBLIC_IDENTIFIERS.add("InheritableThreadLocal");
            PUBLIC_IDENTIFIERS.add("InheritDocTaglet");
            PUBLIC_IDENTIFIERS.add("InheritDocTree");
            PUBLIC_IDENTIFIERS.add("Inherited");
            PUBLIC_IDENTIFIERS.add("InheritedChannel$InheritedDatagramChannelImpl");
            PUBLIC_IDENTIFIERS.add("InheritedChannel$InheritedServerSocketChannelImpl");
            PUBLIC_IDENTIFIERS.add("InheritedChannel$InheritedSocketChannelImpl");
            PUBLIC_IDENTIFIERS.add("InhibitAnyPolicyExtension");
            PUBLIC_IDENTIFIERS.add("Init");
            PUBLIC_IDENTIFIERS.add("InitialContext");
            PUBLIC_IDENTIFIERS.add("InitialContextFactory");
            PUBLIC_IDENTIFIERS.add("InitialContextFactoryBuilder");
            PUBLIC_IDENTIFIERS.add("InitialDirContext");
            PUBLIC_IDENTIFIERS.add("InitialLdapContext");
            PUBLIC_IDENTIFIERS.add("InitialToken$OverloadedChecksum");
            PUBLIC_IDENTIFIERS.add("InlineTagTree");
            PUBLIC_IDENTIFIERS.add("InlineTree");
            PUBLIC_IDENTIFIERS.add("InlineView");
            PUBLIC_IDENTIFIERS.add("InnerClasses_attribute");
            PUBLIC_IDENTIFIERS.add("InnerClasses_attribute$Info");
            PUBLIC_IDENTIFIERS.add("InnerClassNode");
            PUBLIC_IDENTIFIERS.add("Input");
            PUBLIC_IDENTIFIERS.add("InputContext");
            PUBLIC_IDENTIFIERS.add("InputEvent");
            PUBLIC_IDENTIFIERS.add("InputLexer");
            PUBLIC_IDENTIFIERS.add("InputMap");
            PUBLIC_IDENTIFIERS.add("InputMapUIResource");
            PUBLIC_IDENTIFIERS.add("InputMethod");
            PUBLIC_IDENTIFIERS.add("InputMethodAdapter");
            PUBLIC_IDENTIFIERS.add("InputMethodContext");
            PUBLIC_IDENTIFIERS.add("InputMethodDescriptor");
            PUBLIC_IDENTIFIERS.add("InputMethodEvent");
            PUBLIC_IDENTIFIERS.add("InputMethodHighlight");
            PUBLIC_IDENTIFIERS.add("InputMethodJFrame");
            PUBLIC_IDENTIFIERS.add("InputMethodListener");
            PUBLIC_IDENTIFIERS.add("InputMethodManager");
            PUBLIC_IDENTIFIERS.add("InputMethodRequests");
            PUBLIC_IDENTIFIERS.add("InputMethodSupport");
            PUBLIC_IDENTIFIERS.add("InputMethodWindow");
            PUBLIC_IDENTIFIERS.add("InputMismatchException");
            PUBLIC_IDENTIFIERS.add("InputSource");
            PUBLIC_IDENTIFIERS.add("InputStream");
            PUBLIC_IDENTIFIERS.add("InputStreamAdapter");
            PUBLIC_IDENTIFIERS.add("InputStreamImageInputStreamSpi");
            PUBLIC_IDENTIFIERS.add("InputStreamImageSource");
            PUBLIC_IDENTIFIERS.add("InputStreamReader");
            PUBLIC_IDENTIFIERS.add("InputVerifier");
            PUBLIC_IDENTIFIERS.add("InsertRow");
            PUBLIC_IDENTIFIERS.add("Insets");
            PUBLIC_IDENTIFIERS.add("InsetsUIResource");
            PUBLIC_IDENTIFIERS.add("InsnList");
            PUBLIC_IDENTIFIERS.add("InsnNode");
            PUBLIC_IDENTIFIERS.add("InspectAction");
            PUBLIC_IDENTIFIERS.add("InspectedFrame");
            PUBLIC_IDENTIFIERS.add("InspectedFrameVisitor");
            PUBLIC_IDENTIFIERS.add("Inspector");
            PUBLIC_IDENTIFIERS.add("InstalledCode");
            PUBLIC_IDENTIFIERS.add("Instance");
            PUBLIC_IDENTIFIERS.add("InstanceAlreadyExistsException");
            PUBLIC_IDENTIFIERS.add("InstanceClassLoaderKlass");
            PUBLIC_IDENTIFIERS.add("InstanceConstructor");
            PUBLIC_IDENTIFIERS.add("InstanceKlass");
            PUBLIC_IDENTIFIERS.add("InstanceKlass$ClassState");
            PUBLIC_IDENTIFIERS.add("InstanceKlass$StaticField");
            PUBLIC_IDENTIFIERS.add("InstanceMirrorKlass");
            PUBLIC_IDENTIFIERS.add("InstanceNotFoundException");
            PUBLIC_IDENTIFIERS.add("INSTANCEOF");
            PUBLIC_IDENTIFIERS.add("InstanceOfTree");
            PUBLIC_IDENTIFIERS.add("InstanceRefKlass");
            PUBLIC_IDENTIFIERS.add("InstanceStackChunkKlass");
            PUBLIC_IDENTIFIERS.add("InstantiationError");
            PUBLIC_IDENTIFIERS.add("InstantiationException");
            PUBLIC_IDENTIFIERS.add("InstantSource");
            PUBLIC_IDENTIFIERS.add("Instruction");
            PUBLIC_IDENTIFIERS.add("Instruction$KindVisitor");
            PUBLIC_IDENTIFIERS.add("InstructionAdapter");
            PUBLIC_IDENTIFIERS.add("InstructionComparator");
            PUBLIC_IDENTIFIERS.add("InstructionDetailWriter");
            PUBLIC_IDENTIFIERS.add("InstructionFactory");
            PUBLIC_IDENTIFIERS.add("InstructionFinder");
            PUBLIC_IDENTIFIERS.add("InstructionFinder$CodeConstraint");
            PUBLIC_IDENTIFIERS.add("InstructionHandle");
            PUBLIC_IDENTIFIERS.add("InstructionList");
            PUBLIC_IDENTIFIERS.add("InstructionListObserver");
            PUBLIC_IDENTIFIERS.add("InstructionTargeter");
            PUBLIC_IDENTIFIERS.add("InstructionVisitor");
            PUBLIC_IDENTIFIERS.add("Instrument");
            PUBLIC_IDENTIFIERS.add("Instrumentation");
            PUBLIC_IDENTIFIERS.add("InstrumentationException");
            PUBLIC_IDENTIFIERS.add("InstrumentationImpl");
            PUBLIC_IDENTIFIERS.add("InsufficientResourcesException");
            PUBLIC_IDENTIFIERS.add("IntArray");
            PUBLIC_IDENTIFIERS.add("IntArrayWrapper");
            PUBLIC_IDENTIFIERS.add("IntBinaryOperator");
            PUBLIC_IDENTIFIERS.add("IntBuffer");
            PUBLIC_IDENTIFIERS.add("IntConsumer");
            PUBLIC_IDENTIFIERS.add("Integer");
            PUBLIC_IDENTIFIERS.add("IntegerComponentRaster");
            PUBLIC_IDENTIFIERS.add("IntegerDV");
            PUBLIC_IDENTIFIERS.add("IntegerEditor");
            PUBLIC_IDENTIFIERS.add("IntegerEnum");
            PUBLIC_IDENTIFIERS.add("IntegerFieldModuloP");
            PUBLIC_IDENTIFIERS.add("IntegerInterleavedRaster");
            PUBLIC_IDENTIFIERS.add("IntegerModuloP");
            PUBLIC_IDENTIFIERS.add("IntegerModuloP$MultiplicativeInverser");
            PUBLIC_IDENTIFIERS.add("IntegerMonitor");
            PUBLIC_IDENTIFIERS.add("IntegerPolynomial");
            PUBLIC_IDENTIFIERS.add("IntegerPolynomial$MutableElement");
            PUBLIC_IDENTIFIERS.add("IntegerPolynomialModBinP");
            PUBLIC_IDENTIFIERS.add("IntegerSyntax");
            PUBLIC_IDENTIFIERS.add("IntegerType");
            PUBLIC_IDENTIFIERS.add("IntegerTypeImpl");
            PUBLIC_IDENTIFIERS.add("IntegerValue");
            PUBLIC_IDENTIFIERS.add("IntegerValueImpl");
            PUBLIC_IDENTIFIERS.add("IntegratedParserConfiguration");
            PUBLIC_IDENTIFIERS.add("IntegrityHmac");
            PUBLIC_IDENTIFIERS.add("IntegrityHmac$IntegrityHmacMD5");
            PUBLIC_IDENTIFIERS.add("IntegrityHmac$IntegrityHmacRIPEMD160");
            PUBLIC_IDENTIFIERS.add("IntegrityHmac$IntegrityHmacSHA1");
            PUBLIC_IDENTIFIERS.add("IntegrityHmac$IntegrityHmacSHA224");
            PUBLIC_IDENTIFIERS.add("IntegrityHmac$IntegrityHmacSHA256");
            PUBLIC_IDENTIFIERS.add("IntegrityHmac$IntegrityHmacSHA384");
            PUBLIC_IDENTIFIERS.add("IntegrityHmac$IntegrityHmacSHA512");
            PUBLIC_IDENTIFIERS.add("InterfaceAddress");
            PUBLIC_IDENTIFIERS.add("InterfaceType");
            PUBLIC_IDENTIFIERS.add("InternalDebugControl");
            PUBLIC_IDENTIFIERS.add("InternalDialog");
            PUBLIC_IDENTIFIERS.add("InternalDialog$MastheadIcon");
            PUBLIC_IDENTIFIERS.add("InternalError");
            PUBLIC_IDENTIFIERS.add("InternalEventHandler");
            PUBLIC_IDENTIFIERS.add("InternalException");
            PUBLIC_IDENTIFIERS.add("InternalFrameAdapter");
            PUBLIC_IDENTIFIERS.add("InternalFrameEvent");
            PUBLIC_IDENTIFIERS.add("InternalFrameFocusTraversalPolicy");
            PUBLIC_IDENTIFIERS.add("InternalFrameListener");
            PUBLIC_IDENTIFIERS.add("InternalFrameUI");
            PUBLIC_IDENTIFIERS.add("InternalLock");
            PUBLIC_IDENTIFIERS.add("InternalRuntimeError");
            PUBLIC_IDENTIFIERS.add("InternalTypeUtilities");
            PUBLIC_IDENTIFIERS.add("InternationalFormatter");
            PUBLIC_IDENTIFIERS.add("InteropProvider");
            PUBLIC_IDENTIFIERS.add("InteropProviderImpl");
            PUBLIC_IDENTIFIERS.add("InterpretedVFrame");
            PUBLIC_IDENTIFIERS.add("Interpreter");
            PUBLIC_IDENTIFIERS.add("InterpreterCodelet");
            PUBLIC_IDENTIFIERS.add("InterruptedByTimeoutException");
            PUBLIC_IDENTIFIERS.add("InterruptedException");
            PUBLIC_IDENTIFIERS.add("InterruptedIOException");
            PUBLIC_IDENTIFIERS.add("InterruptedNamingException");
            PUBLIC_IDENTIFIERS.add("Interruptible");
            PUBLIC_IDENTIFIERS.add("InterruptibleChannel");
            PUBLIC_IDENTIFIERS.add("IntersectionType");
            PUBLIC_IDENTIFIERS.add("IntersectionTypeTree");
            PUBLIC_IDENTIFIERS.add("Interval");
            PUBLIC_IDENTIFIERS.add("IntervalNode");
            PUBLIC_IDENTIFIERS.add("IntervalTree");
            PUBLIC_IDENTIFIERS.add("IntField");
            PUBLIC_IDENTIFIERS.add("IntFunction");
            PUBLIC_IDENTIFIERS.add("IntHashTable");
            PUBLIC_IDENTIFIERS.add("IntInsnNode");
            PUBLIC_IDENTIFIERS.add("IntPredicate");
            PUBLIC_IDENTIFIERS.add("IntrinsicCandidate");
            PUBLIC_IDENTIFIERS.add("IntrospectionException");
            PUBLIC_IDENTIFIERS.add("Introspector");
            PUBLIC_IDENTIFIERS.add("IntSignature");
            PUBLIC_IDENTIFIERS.add("IntStack");
            PUBLIC_IDENTIFIERS.add("IntStream");
            PUBLIC_IDENTIFIERS.add("IntStream$Builder");
            PUBLIC_IDENTIFIERS.add("IntStream$IntMapMultiConsumer");
            PUBLIC_IDENTIFIERS.add("IntSummaryStatistics");
            PUBLIC_IDENTIFIERS.add("IntSupplier");
            PUBLIC_IDENTIFIERS.add("IntToDoubleFunction");
            PUBLIC_IDENTIFIERS.add("IntToLongFunction");
            PUBLIC_IDENTIFIERS.add("IntType");
            PUBLIC_IDENTIFIERS.add("IntUnaryOperator");
            PUBLIC_IDENTIFIERS.add("IntVector");
            PUBLIC_IDENTIFIERS.add("InvalidAlgorithmParameterException");
            PUBLIC_IDENTIFIERS.add("InvalidApplicationException");
            PUBLIC_IDENTIFIERS.add("InvalidAttributeIdentifierException");
            PUBLIC_IDENTIFIERS.add("InvalidAttributesException");
            PUBLIC_IDENTIFIERS.add("InvalidAttributeValueException");
            PUBLIC_IDENTIFIERS.add("InvalidCanonicalizerException");
            PUBLIC_IDENTIFIERS.add("InvalidClassException");
            PUBLIC_IDENTIFIERS.add("InvalidCodeIndexException");
            PUBLIC_IDENTIFIERS.add("InvalidDataException");
            PUBLIC_IDENTIFIERS.add("InvalidDatatypeFacetException");
            PUBLIC_IDENTIFIERS.add("InvalidDatatypeValueException");
            PUBLIC_IDENTIFIERS.add("InvalidDigestValueException");
            PUBLIC_IDENTIFIERS.add("InvalidDnDOperationException");
            PUBLIC_IDENTIFIERS.add("InvalidFormatException");
            PUBLIC_IDENTIFIERS.add("InvalidityDateExtension");
            PUBLIC_IDENTIFIERS.add("InvalidJarIndexError");
            PUBLIC_IDENTIFIERS.add("InvalidKeyException");
            PUBLIC_IDENTIFIERS.add("InvalidKeySpecException");
            PUBLIC_IDENTIFIERS.add("InvalidLineNumberException");
            PUBLIC_IDENTIFIERS.add("InvalidMarkException");
            PUBLIC_IDENTIFIERS.add("InvalidMidiDataException");
            PUBLIC_IDENTIFIERS.add("InvalidModuleDescriptorException");
            PUBLIC_IDENTIFIERS.add("InvalidModuleException");
            PUBLIC_IDENTIFIERS.add("InvalidNameException");
            PUBLIC_IDENTIFIERS.add("InvalidObjectException");
            PUBLIC_IDENTIFIERS.add("InvalidOpenTypeException");
            PUBLIC_IDENTIFIERS.add("InvalidParameterException");
            PUBLIC_IDENTIFIERS.add("InvalidParameterSpecException");
            PUBLIC_IDENTIFIERS.add("InvalidPathException");
            PUBLIC_IDENTIFIERS.add("InvalidPipeException");
            PUBLIC_IDENTIFIERS.add("InvalidPreferencesFormatException");
            PUBLIC_IDENTIFIERS.add("InvalidPropertiesFormatException");
            PUBLIC_IDENTIFIERS.add("InvalidRelationIdException");
            PUBLIC_IDENTIFIERS.add("InvalidRelationServiceException");
            PUBLIC_IDENTIFIERS.add("InvalidRelationTypeException");
            PUBLIC_IDENTIFIERS.add("InvalidRequestStateException");
            PUBLIC_IDENTIFIERS.add("InvalidRoleInfoException");
            PUBLIC_IDENTIFIERS.add("InvalidRoleValueException");
            PUBLIC_IDENTIFIERS.add("InvalidSearchControlsException");
            PUBLIC_IDENTIFIERS.add("InvalidSearchFilterException");
            PUBLIC_IDENTIFIERS.add("InvalidSignatureValueException");
            PUBLIC_IDENTIFIERS.add("InvalidStackFrameException");
            PUBLIC_IDENTIFIERS.add("InvalidStreamException");
            PUBLIC_IDENTIFIERS.add("InvalidTargetObjectTypeException");
            PUBLIC_IDENTIFIERS.add("InvalidTransformException");
            PUBLIC_IDENTIFIERS.add("InvalidTypeException");
            PUBLIC_IDENTIFIERS.add("InverseDepsAnalyzer");
            PUBLIC_IDENTIFIERS.add("Invocable");
            PUBLIC_IDENTIFIERS.add("InvocationEvent");
            PUBLIC_IDENTIFIERS.add("InvocationException");
            PUBLIC_IDENTIFIERS.add("InvocationHandler");
            PUBLIC_IDENTIFIERS.add("InvocationTargetException");
            PUBLIC_IDENTIFIERS.add("INVOKEDYNAMIC");
            PUBLIC_IDENTIFIERS.add("InvokeDynamicInsnNode");
            PUBLIC_IDENTIFIERS.add("InvokeInstruction");
            PUBLIC_IDENTIFIERS.add("INVOKESPECIAL");
            PUBLIC_IDENTIFIERS.add("INVOKESTATIC");
            PUBLIC_IDENTIFIERS.add("InvokeTarget");
            PUBLIC_IDENTIFIERS.add("INVOKEVIRTUAL");
            PUBLIC_IDENTIFIERS.add("IOError");
            PUBLIC_IDENTIFIERS.add("IOException");
            PUBLIC_IDENTIFIERS.add("IOR");
            PUBLIC_IDENTIFIERS.add("IOUtils");
            PUBLIC_IDENTIFIERS.add("IOUtils$XmlConsumer");
            PUBLIC_IDENTIFIERS.add("IPAddressName");
            PUBLIC_IDENTIFIERS.add("IPAddressUtil");
            PUBLIC_IDENTIFIERS.add("IPPPrintService");
            PUBLIC_IDENTIFIERS.add("IREM");
            PUBLIC_IDENTIFIERS.add("IRETURN");
            PUBLIC_IDENTIFIERS.add("ISCII91");
            PUBLIC_IDENTIFIERS.add("ISHL");
            PUBLIC_IDENTIFIERS.add("ISHR");
            PUBLIC_IDENTIFIERS.add("ISO2022$Encoder");
            PUBLIC_IDENTIFIERS.add("ISO2022_CN");
            PUBLIC_IDENTIFIERS.add("ISO2022_CN_CNS");
            PUBLIC_IDENTIFIERS.add("ISO2022_CN_GB");
            PUBLIC_IDENTIFIERS.add("ISO2022_JP");
            PUBLIC_IDENTIFIERS.add("ISO2022_JP_2");
            PUBLIC_IDENTIFIERS.add("ISO2022_KR");
            PUBLIC_IDENTIFIERS.add("ISO_8859_1");
            PUBLIC_IDENTIFIERS.add("ISO_8859_11");
            PUBLIC_IDENTIFIERS.add("ISO_8859_13");
            PUBLIC_IDENTIFIERS.add("ISO_8859_15");
            PUBLIC_IDENTIFIERS.add("ISO_8859_16");
            PUBLIC_IDENTIFIERS.add("ISO_8859_2");
            PUBLIC_IDENTIFIERS.add("ISO_8859_3");
            PUBLIC_IDENTIFIERS.add("ISO_8859_4");
            PUBLIC_IDENTIFIERS.add("ISO_8859_5");
            PUBLIC_IDENTIFIERS.add("ISO_8859_6");
            PUBLIC_IDENTIFIERS.add("ISO_8859_7");
            PUBLIC_IDENTIFIERS.add("ISO_8859_8");
            PUBLIC_IDENTIFIERS.add("ISO_8859_9");
            PUBLIC_IDENTIFIERS.add("IssuerAlternativeNameExtension");
            PUBLIC_IDENTIFIERS.add("IssuingDistributionPointExtension");
            PUBLIC_IDENTIFIERS.add("ISTORE");
            PUBLIC_IDENTIFIERS.add("ISUB");
            PUBLIC_IDENTIFIERS.add("ItemEvent");
            PUBLIC_IDENTIFIERS.add("ItemListener");
            PUBLIC_IDENTIFIERS.add("ItemPSVI");
            PUBLIC_IDENTIFIERS.add("Items");
            PUBLIC_IDENTIFIERS.add("ItemSelectable");
            PUBLIC_IDENTIFIERS.add("Iterable");
            PUBLIC_IDENTIFIERS.add("Iterator");
            PUBLIC_IDENTIFIERS.add("Iterators");
            PUBLIC_IDENTIFIERS.add("IUSHR");
            PUBLIC_IDENTIFIERS.add("IvParameterSpec");
            PUBLIC_IDENTIFIERS.add("IXOR");
            PUBLIC_IDENTIFIERS.add("JansiSupport");
            PUBLIC_IDENTIFIERS.add("JApplet");
            PUBLIC_IDENTIFIERS.add("JApplet$AccessibleJApplet");
            PUBLIC_IDENTIFIERS.add("JarArchive");
            PUBLIC_IDENTIFIERS.add("JarArchive$JarEntry");
            PUBLIC_IDENTIFIERS.add("JarConstraintsParameters");
            PUBLIC_IDENTIFIERS.add("JarEntry");
            PUBLIC_IDENTIFIERS.add("JarException");
            PUBLIC_IDENTIFIERS.add("JarFile");
            PUBLIC_IDENTIFIERS.add("JarIndex");
            PUBLIC_IDENTIFIERS.add("JarInputStream");
            PUBLIC_IDENTIFIERS.add("JarOutputStream");
            PUBLIC_IDENTIFIERS.add("JarSigner$Builder");
            PUBLIC_IDENTIFIERS.add("JarSignerException");
            PUBLIC_IDENTIFIERS.add("JarToolProvider");
            PUBLIC_IDENTIFIERS.add("JarURLConnection");
            PUBLIC_IDENTIFIERS.add("JavaAWTAccess");
            PUBLIC_IDENTIFIERS.add("JavaAWTFontAccess");
            PUBLIC_IDENTIFIERS.add("JavaBean");
            PUBLIC_IDENTIFIERS.add("JavaBeansAccess");
            PUBLIC_IDENTIFIERS.add("JavaCallWrapper");
            PUBLIC_IDENTIFIERS.add("JavacElements");
            PUBLIC_IDENTIFIERS.add("JavacFileManager");
            PUBLIC_IDENTIFIERS.add("JavacFileManager$SortFiles");
            PUBLIC_IDENTIFIERS.add("JavacFiler");
            PUBLIC_IDENTIFIERS.add("JavaCharStream");
            PUBLIC_IDENTIFIERS.add("JavaClass");
            PUBLIC_IDENTIFIERS.add("JavacMessager");
            PUBLIC_IDENTIFIERS.add("JavacMessages");
            PUBLIC_IDENTIFIERS.add("JavacMessages$ResourceBundleHelper");
            PUBLIC_IDENTIFIERS.add("JavaCompiler");
            PUBLIC_IDENTIFIERS.add("JavaCompiler$CompilationTask");
            PUBLIC_IDENTIFIERS.add("JavaCompiler$InitialFileParser");
            PUBLIC_IDENTIFIERS.add("JavaCompiler$InitialFileParserIntf");
            PUBLIC_IDENTIFIERS.add("JavaConstant");
            PUBLIC_IDENTIFIERS.add("JavacParser");
            PUBLIC_IDENTIFIERS.add("JavacParser$AbstractEndPosTable");
            PUBLIC_IDENTIFIERS.add("JavacParser$EmptyEndPosTable");
            PUBLIC_IDENTIFIERS.add("JavacParser$SimpleEndPosTable");
            PUBLIC_IDENTIFIERS.add("JavacProcessingEnvironment");
            PUBLIC_IDENTIFIERS.add("JavacProcessingEnvironment$ComputeAnnotationSet");
            PUBLIC_IDENTIFIERS.add("JavacRoundEnvironment");
            PUBLIC_IDENTIFIERS.add("JavacScope");
            PUBLIC_IDENTIFIERS.add("JavacTask");
            PUBLIC_IDENTIFIERS.add("JavacTaskImpl");
            PUBLIC_IDENTIFIERS.add("JavacTaskPool");
            PUBLIC_IDENTIFIERS.add("JavacTaskPool$Worker");
            PUBLIC_IDENTIFIERS.add("JavacToolProvider");
            PUBLIC_IDENTIFIERS.add("JavacTrees");
            PUBLIC_IDENTIFIERS.add("JavacTrees$Copier");
            PUBLIC_IDENTIFIERS.add("JavacTypes");
            PUBLIC_IDENTIFIERS.add("JavadocClassFinder");
            PUBLIC_IDENTIFIERS.add("JavadocEnter");
            PUBLIC_IDENTIFIERS.add("JavadocFormatter");
            PUBLIC_IDENTIFIERS.add("JavadocHelper");
            PUBLIC_IDENTIFIERS.add("JavadocLog");
            PUBLIC_IDENTIFIERS.add("JavadocMemberEnter");
            PUBLIC_IDENTIFIERS.add("JavadocTaskImpl");
            PUBLIC_IDENTIFIERS.add("JavadocTodo");
            PUBLIC_IDENTIFIERS.add("JavadocTokenizer");
            PUBLIC_IDENTIFIERS.add("JavadocTokenizer$JavadocComment");
            PUBLIC_IDENTIFIERS.add("JavadocTool");
            PUBLIC_IDENTIFIERS.add("JavadocToolProvider");
            PUBLIC_IDENTIFIERS.add("JavaField");
            PUBLIC_IDENTIFIERS.add("JavaFileManager");
            PUBLIC_IDENTIFIERS.add("JavaFileManager$Location");
            PUBLIC_IDENTIFIERS.add("JavaFileObject");
            PUBLIC_IDENTIFIERS.add("JavaIOAccess");
            PUBLIC_IDENTIFIERS.add("JavaIOFileDescriptorAccess");
            PUBLIC_IDENTIFIERS.add("JavaIOFilePermissionAccess");
            PUBLIC_IDENTIFIERS.add("JavaIOPrintStreamAccess");
            PUBLIC_IDENTIFIERS.add("JavaIOPrintWriterAccess");
            PUBLIC_IDENTIFIERS.add("JavaIORandomAccessFileAccess");
            PUBLIC_IDENTIFIERS.add("JavaKeyStore");
            PUBLIC_IDENTIFIERS.add("JavaKind$FormatWithToString");
            PUBLIC_IDENTIFIERS.add("JavaLangAccess");
            PUBLIC_IDENTIFIERS.add("java_lang_Class");
            PUBLIC_IDENTIFIERS.add("JavaLangInvokeAccess");
            PUBLIC_IDENTIFIERS.add("JavaLangModuleAccess");
            PUBLIC_IDENTIFIERS.add("JavaLangRefAccess");
            PUBLIC_IDENTIFIERS.add("JavaLangReflectAccess");
            PUBLIC_IDENTIFIERS.add("JavaMethod");
            PUBLIC_IDENTIFIERS.add("JavaMethodProfile$ProfiledMethod");
            PUBLIC_IDENTIFIERS.add("JavaNetHttpCookieAccess");
            PUBLIC_IDENTIFIERS.add("JavaNetInetAddressAccess");
            PUBLIC_IDENTIFIERS.add("JavaNetUriAccess");
            PUBLIC_IDENTIFIERS.add("JavaNetURLAccess");
            PUBLIC_IDENTIFIERS.add("JavaNioAccess");
            PUBLIC_IDENTIFIERS.add("JavaObjectInputFilterAccess");
            PUBLIC_IDENTIFIERS.add("JavaObjectInputStreamAccess");
            PUBLIC_IDENTIFIERS.add("JavaObjectInputStreamReadString");
            PUBLIC_IDENTIFIERS.add("JavapFileManager");
            PUBLIC_IDENTIFIERS.add("JavapTask");
            PUBLIC_IDENTIFIERS.add("JavapTask$BadArgs");
            PUBLIC_IDENTIFIERS.add("JavapTask$ClassFileInfo");
            PUBLIC_IDENTIFIERS.add("JavaRuntimeURLConnection");
            PUBLIC_IDENTIFIERS.add("JavaScriptScanner");
            PUBLIC_IDENTIFIERS.add("JavaScriptScanner$Fault");
            PUBLIC_IDENTIFIERS.add("JavaSecurityAccess");
            PUBLIC_IDENTIFIERS.add("JavaSecurityAccess$ProtectionDomainCache");
            PUBLIC_IDENTIFIERS.add("JavaSecurityPropertiesAccess");
            PUBLIC_IDENTIFIERS.add("JavaSecuritySignatureAccess");
            PUBLIC_IDENTIFIERS.add("JavaSecuritySpecAccess");
            PUBLIC_IDENTIFIERS.add("JavaShellToolBuilder");
            PUBLIC_IDENTIFIERS.add("JavaStackTraceAction");
            PUBLIC_IDENTIFIERS.add("JavaStackTracePanel");
            PUBLIC_IDENTIFIERS.add("JavaThread");
            PUBLIC_IDENTIFIERS.add("JavaThreadFactory");
            PUBLIC_IDENTIFIERS.add("JavaThreadPDAccess");
            PUBLIC_IDENTIFIERS.add("JavaThreadsPanel");
            PUBLIC_IDENTIFIERS.add("JavaThreadState");
            PUBLIC_IDENTIFIERS.add("JavaTimeDateTimePatternImpl");
            PUBLIC_IDENTIFIERS.add("JavaTimeDateTimePatternProvider");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_ar");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_ar_JO");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_ar_LB");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_ar_SY");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_be");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_bg");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_ca");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_cs");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_da");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_de");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_de_AT");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_el");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_en");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_en_AU");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_en_CA");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_en_GB");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_en_IE");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_en_IN");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_en_MT");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_en_NZ");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_en_SG");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_en_ZA");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_es");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_es_AR");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_es_BO");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_es_CL");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_es_CO");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_es_CR");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_es_DO");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_es_EC");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_es_GT");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_es_HN");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_es_MX");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_es_PA");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_es_PE");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_es_PR");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_es_PY");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_es_US");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_es_UY");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_es_VE");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_et");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_fi");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_fr");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_fr_BE");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_fr_CA");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_fr_CH");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_ga");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_he");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_hi_IN");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_hr");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_hu");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_id");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_is");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_it");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_it_CH");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_ja");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_ko");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_lt");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_lv");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_mk");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_ms");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_mt");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_nl");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_nl_BE");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_no");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_pl");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementaryProvider");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_pt");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_pt_PT");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_ro");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_ru");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_sk");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_sl");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_sq");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_sr");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_sr_BA");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_sr_Latn");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_sv");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_th");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_tr");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_uk");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_vi");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_zh");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_zh_HK");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_zh_SG");
            PUBLIC_IDENTIFIERS.add("JavaTimeSupplementary_zh_TW");
            PUBLIC_IDENTIFIERS.add("JavaTokenizer");
            PUBLIC_IDENTIFIERS.add("JavaTokenizer$BasicComment");
            PUBLIC_IDENTIFIERS.add("JavaType");
            PUBLIC_IDENTIFIERS.add("JavaTypeProfile$ProfiledType");
            PUBLIC_IDENTIFIERS.add("JavaUtilCollectionAccess");
            PUBLIC_IDENTIFIERS.add("JavaUtilConcurrentFJPAccess");
            PUBLIC_IDENTIFIERS.add("JavaUtilConcurrentTLRAccess");
            PUBLIC_IDENTIFIERS.add("JavaUtilJarAccess");
            PUBLIC_IDENTIFIERS.add("JavaUtilResourceBundleAccess");
            PUBLIC_IDENTIFIERS.add("JavaUtilZipFileAccess");
            PUBLIC_IDENTIFIERS.add("JavaValue");
            PUBLIC_IDENTIFIERS.add("JavaVFrame");
            PUBLIC_IDENTIFIERS.add("JavaxCryptoSealedObjectAccess");
            PUBLIC_IDENTIFIERS.add("JavaxCryptoSpecAccess");
            PUBLIC_IDENTIFIERS.add("JavaxSecurityAuthKerberosAccess");
            PUBLIC_IDENTIFIERS.add("JAXPConstants");
            PUBLIC_IDENTIFIERS.add("JAXPExtensionsProvider");
            PUBLIC_IDENTIFIERS.add("JAXPPrefixResolver");
            PUBLIC_IDENTIFIERS.add("JAXPVariableStack");
            PUBLIC_IDENTIFIERS.add("JBooleanField");
            PUBLIC_IDENTIFIERS.add("JButton");
            PUBLIC_IDENTIFIERS.add("JButton$AccessibleJButton");
            PUBLIC_IDENTIFIERS.add("JByteField");
            PUBLIC_IDENTIFIERS.add("JCDiagnostic");
            PUBLIC_IDENTIFIERS.add("JCDiagnostic$DiagnosticInfo");
            PUBLIC_IDENTIFIERS.add("JCDiagnostic$DiagnosticPosition");
            PUBLIC_IDENTIFIERS.add("JCDiagnostic$Factory");
            PUBLIC_IDENTIFIERS.add("JCDiagnostic$MultilineDiagnostic");
            PUBLIC_IDENTIFIERS.add("JCDiagnostic$SimpleDiagnosticPosition");
            PUBLIC_IDENTIFIERS.add("JCEMapper");
            PUBLIC_IDENTIFIERS.add("JCEMapper$Algorithm");
            PUBLIC_IDENTIFIERS.add("JCharField");
            PUBLIC_IDENTIFIERS.add("JCheckBox");
            PUBLIC_IDENTIFIERS.add("JCheckBox$AccessibleJCheckBox");
            PUBLIC_IDENTIFIERS.add("JCheckBoxMenuItem");
            PUBLIC_IDENTIFIERS.add("JCheckBoxMenuItem$AccessibleJCheckBoxMenuItem");
            PUBLIC_IDENTIFIERS.add("JCmd");
            PUBLIC_IDENTIFIERS.add("JColorChooser");
            PUBLIC_IDENTIFIERS.add("JColorChooser$AccessibleJColorChooser");
            PUBLIC_IDENTIFIERS.add("JComboBox");
            PUBLIC_IDENTIFIERS.add("JComboBox$AccessibleJComboBox");
            PUBLIC_IDENTIFIERS.add("JComboBox$KeySelectionManager");
            PUBLIC_IDENTIFIERS.add("JComponent");
            PUBLIC_IDENTIFIERS.add("JComponent$AccessibleJComponent");
            PUBLIC_IDENTIFIERS.add("JComponent$AccessibleJComponent$AccessibleContainerHandler");
            PUBLIC_IDENTIFIERS.add("JComponent$AccessibleJComponent$AccessibleFocusHandler");
            PUBLIC_IDENTIFIERS.add("JConsole");
            PUBLIC_IDENTIFIERS.add("JConsoleContext");
            PUBLIC_IDENTIFIERS.add("JConsolePlugin");
            PUBLIC_IDENTIFIERS.add("JCTree");
            PUBLIC_IDENTIFIERS.add("JCTree$Factory");
            PUBLIC_IDENTIFIERS.add("JCTree$JCAnnotatedType");
            PUBLIC_IDENTIFIERS.add("JCTree$JCAnnotation");
            PUBLIC_IDENTIFIERS.add("JCTree$JCArrayAccess");
            PUBLIC_IDENTIFIERS.add("JCTree$JCArrayTypeTree");
            PUBLIC_IDENTIFIERS.add("JCTree$JCAssert");
            PUBLIC_IDENTIFIERS.add("JCTree$JCAssign");
            PUBLIC_IDENTIFIERS.add("JCTree$JCAssignOp");
            PUBLIC_IDENTIFIERS.add("JCTree$JCBinary");
            PUBLIC_IDENTIFIERS.add("JCTree$JCBindingPattern");
            PUBLIC_IDENTIFIERS.add("JCTree$JCBlock");
            PUBLIC_IDENTIFIERS.add("JCTree$JCBreak");
            PUBLIC_IDENTIFIERS.add("JCTree$JCCase");
            PUBLIC_IDENTIFIERS.add("JCTree$JCCaseLabel");
            PUBLIC_IDENTIFIERS.add("JCTree$JCCatch");
            PUBLIC_IDENTIFIERS.add("JCTree$JCClassDecl");
            PUBLIC_IDENTIFIERS.add("JCTree$JCCompilationUnit");
            PUBLIC_IDENTIFIERS.add("JCTree$JCConditional");
            PUBLIC_IDENTIFIERS.add("JCTree$JCConstantCaseLabel");
            PUBLIC_IDENTIFIERS.add("JCTree$JCContinue");
            PUBLIC_IDENTIFIERS.add("JCTree$JCDefaultCaseLabel");
            PUBLIC_IDENTIFIERS.add("JCTree$JCDirective");
            PUBLIC_IDENTIFIERS.add("JCTree$JCDoWhileLoop");
            PUBLIC_IDENTIFIERS.add("JCTree$JCEnhancedForLoop");
            PUBLIC_IDENTIFIERS.add("JCTree$JCErroneous");
            PUBLIC_IDENTIFIERS.add("JCTree$JCExports");
            PUBLIC_IDENTIFIERS.add("JCTree$JCExpression");
            PUBLIC_IDENTIFIERS.add("JCTree$JCExpressionStatement");
            PUBLIC_IDENTIFIERS.add("JCTree$JCFieldAccess");
            PUBLIC_IDENTIFIERS.add("JCTree$JCForLoop");
            PUBLIC_IDENTIFIERS.add("JCTree$JCFunctionalExpression");
            PUBLIC_IDENTIFIERS.add("JCTree$JCIdent");
            PUBLIC_IDENTIFIERS.add("JCTree$JCIf");
            PUBLIC_IDENTIFIERS.add("JCTree$JCImport");
            PUBLIC_IDENTIFIERS.add("JCTree$JCInstanceOf");
            PUBLIC_IDENTIFIERS.add("JCTree$JCLabeledStatement");
            PUBLIC_IDENTIFIERS.add("JCTree$JCLambda");
            PUBLIC_IDENTIFIERS.add("JCTree$JCLiteral");
            PUBLIC_IDENTIFIERS.add("JCTree$JCMemberReference");
            PUBLIC_IDENTIFIERS.add("JCTree$JCMethodDecl");
            PUBLIC_IDENTIFIERS.add("JCTree$JCMethodInvocation");
            PUBLIC_IDENTIFIERS.add("JCTree$JCModifiers");
            PUBLIC_IDENTIFIERS.add("JCTree$JCModuleDecl");
            PUBLIC_IDENTIFIERS.add("JCTree$JCNewArray");
            PUBLIC_IDENTIFIERS.add("JCTree$JCNewClass");
            PUBLIC_IDENTIFIERS.add("JCTree$JCOpens");
            PUBLIC_IDENTIFIERS.add("JCTree$JCOperatorExpression");
            PUBLIC_IDENTIFIERS.add("JCTree$JCPackageDecl");
            PUBLIC_IDENTIFIERS.add("JCTree$JCParens");
            PUBLIC_IDENTIFIERS.add("JCTree$JCParenthesizedPattern");
            PUBLIC_IDENTIFIERS.add("JCTree$JCPattern");
            PUBLIC_IDENTIFIERS.add("JCTree$JCPatternCaseLabel");
            PUBLIC_IDENTIFIERS.add("JCTree$JCPolyExpression");
            PUBLIC_IDENTIFIERS.add("JCTree$JCPrimitiveTypeTree");
            PUBLIC_IDENTIFIERS.add("JCTree$JCProvides");
            PUBLIC_IDENTIFIERS.add("JCTree$JCRecordPattern");
            PUBLIC_IDENTIFIERS.add("JCTree$JCRequires");
            PUBLIC_IDENTIFIERS.add("JCTree$JCReturn");
            PUBLIC_IDENTIFIERS.add("JCTree$JCSkip");
            PUBLIC_IDENTIFIERS.add("JCTree$JCStatement");
            PUBLIC_IDENTIFIERS.add("JCTree$JCSwitch");
            PUBLIC_IDENTIFIERS.add("JCTree$JCSwitchExpression");
            PUBLIC_IDENTIFIERS.add("JCTree$JCSynchronized");
            PUBLIC_IDENTIFIERS.add("JCTree$JCThrow");
            PUBLIC_IDENTIFIERS.add("JCTree$JCTry");
            PUBLIC_IDENTIFIERS.add("JCTree$JCTypeApply");
            PUBLIC_IDENTIFIERS.add("JCTree$JCTypeCast");
            PUBLIC_IDENTIFIERS.add("JCTree$JCTypeIntersection");
            PUBLIC_IDENTIFIERS.add("JCTree$JCTypeParameter");
            PUBLIC_IDENTIFIERS.add("JCTree$JCTypeUnion");
            PUBLIC_IDENTIFIERS.add("JCTree$JCUnary");
            PUBLIC_IDENTIFIERS.add("JCTree$JCUses");
            PUBLIC_IDENTIFIERS.add("JCTree$JCVariableDecl");
            PUBLIC_IDENTIFIERS.add("JCTree$JCWhileLoop");
            PUBLIC_IDENTIFIERS.add("JCTree$JCWildcard");
            PUBLIC_IDENTIFIERS.add("JCTree$JCYield");
            PUBLIC_IDENTIFIERS.add("JCTree$LetExpr");
            PUBLIC_IDENTIFIERS.add("JCTree$TypeBoundKind");
            PUBLIC_IDENTIFIERS.add("JCTree$Visitor");
            PUBLIC_IDENTIFIERS.add("JdbcRowSet");
            PUBLIC_IDENTIFIERS.add("JdbcRowSetImpl");
            PUBLIC_IDENTIFIERS.add("JdbcRowSetResourceBundle");
            PUBLIC_IDENTIFIERS.add("JdepsConfiguration");
            PUBLIC_IDENTIFIERS.add("JdepsConfiguration$Builder");
            PUBLIC_IDENTIFIERS.add("JdepsFilter");
            PUBLIC_IDENTIFIERS.add("JdepsFilter$Builder");
            PUBLIC_IDENTIFIERS.add("JdepsWriter");
            PUBLIC_IDENTIFIERS.add("JDesktopPane");
            PUBLIC_IDENTIFIERS.add("JDesktopPane$AccessibleJDesktopPane");
            PUBLIC_IDENTIFIERS.add("JDialog");
            PUBLIC_IDENTIFIERS.add("JDialog$AccessibleJDialog");
            PUBLIC_IDENTIFIERS.add("JdiDefaultExecutionControl");
            PUBLIC_IDENTIFIERS.add("JdiExecutionControl");
            PUBLIC_IDENTIFIERS.add("JdiExecutionControlProvider");
            PUBLIC_IDENTIFIERS.add("JdiInitiator");
            PUBLIC_IDENTIFIERS.add("JdkConsole");
            PUBLIC_IDENTIFIERS.add("JdkConsoleProvider");
            PUBLIC_IDENTIFIERS.add("JdkConsoleProviderImpl");
            PUBLIC_IDENTIFIERS.add("JdkJfrConsumer");
            PUBLIC_IDENTIFIERS.add("JDKPlatformProvider");
            PUBLIC_IDENTIFIERS.add("JDKSettingControl");
            PUBLIC_IDENTIFIERS.add("JdkXmlFeatures");
            PUBLIC_IDENTIFIERS.add("JdkXmlUtils");
            PUBLIC_IDENTIFIERS.add("JDKXPathFactory");
            PUBLIC_IDENTIFIERS.add("JDoubleField");
            PUBLIC_IDENTIFIERS.add("JdpGenericPacket");
            PUBLIC_IDENTIFIERS.add("JdpPacket");
            PUBLIC_IDENTIFIERS.add("JEditorPane");
            PUBLIC_IDENTIFIERS.add("JEditorPane$AccessibleJEditorPane");
            PUBLIC_IDENTIFIERS.add("JEditorPane$AccessibleJEditorPaneHTML");
            PUBLIC_IDENTIFIERS.add("JEditorPane$JEditorPaneAccessibleHypertextSupport");
            PUBLIC_IDENTIFIERS.add("JEditorPane$JEditorPaneAccessibleHypertextSupport$HTMLLink");
            PUBLIC_IDENTIFIERS.add("JFileChooser");
            PUBLIC_IDENTIFIERS.add("JFileChooser$AccessibleJFileChooser");
            PUBLIC_IDENTIFIERS.add("JFloatField");
            PUBLIC_IDENTIFIERS.add("JFormattedTextField");
            PUBLIC_IDENTIFIERS.add("JFormattedTextField$AbstractFormatter");
            PUBLIC_IDENTIFIERS.add("JFormattedTextField$AbstractFormatterFactory");
            PUBLIC_IDENTIFIERS.add("JFrame");
            PUBLIC_IDENTIFIERS.add("JFrame$AccessibleJFrame");
            PUBLIC_IDENTIFIERS.add("JFrameWrapper");
            PUBLIC_IDENTIFIERS.add("JgssExtender");
            PUBLIC_IDENTIFIERS.add("JInfo");
            PUBLIC_IDENTIFIERS.add("JInternalFrame");
            PUBLIC_IDENTIFIERS.add("JInternalFrame$AccessibleJInternalFrame");
            PUBLIC_IDENTIFIERS.add("JInternalFrame$JDesktopIcon");
            PUBLIC_IDENTIFIERS.add("JInternalFrame$JDesktopIcon$AccessibleJDesktopIcon");
            PUBLIC_IDENTIFIERS.add("JInternalFrameWrapper");
            PUBLIC_IDENTIFIERS.add("JIntField");
            PUBLIC_IDENTIFIERS.add("JISAutoDetect");
            PUBLIC_IDENTIFIERS.add("JIS_X_0201");
            PUBLIC_IDENTIFIERS.add("JIS_X_0208");
            PUBLIC_IDENTIFIERS.add("JIS_X_0208_MS5022X");
            PUBLIC_IDENTIFIERS.add("JIS_X_0208_MS932");
            PUBLIC_IDENTIFIERS.add("JIS_X_0208_Solaris");
            PUBLIC_IDENTIFIERS.add("JIS_X_0212");
            PUBLIC_IDENTIFIERS.add("JIS_X_0212_MS5022X");
            PUBLIC_IDENTIFIERS.add("JIS_X_0212_Solaris");
            PUBLIC_IDENTIFIERS.add("JLabel");
            PUBLIC_IDENTIFIERS.add("JLabel$AccessibleJLabel");
            PUBLIC_IDENTIFIERS.add("JLayeredPane");
            PUBLIC_IDENTIFIERS.add("JLayeredPane$AccessibleJLayeredPane");
            PUBLIC_IDENTIFIERS.add("JlinkTask");
            PUBLIC_IDENTIFIERS.add("JList");
            PUBLIC_IDENTIFIERS.add("JList$AccessibleJList");
            PUBLIC_IDENTIFIERS.add("JList$AccessibleJList$AccessibleJListChild");
            PUBLIC_IDENTIFIERS.add("JLongField");
            PUBLIC_IDENTIFIERS.add("JMap");
            PUBLIC_IDENTIFIERS.add("JMenu");
            PUBLIC_IDENTIFIERS.add("JMenu$AccessibleJMenu");
            PUBLIC_IDENTIFIERS.add("JMenu$WinListener");
            PUBLIC_IDENTIFIERS.add("JMenuBar");
            PUBLIC_IDENTIFIERS.add("JMenuBar$AccessibleJMenuBar");
            PUBLIC_IDENTIFIERS.add("JMenuItem");
            PUBLIC_IDENTIFIERS.add("JMenuItem$AccessibleJMenuItem");
            PUBLIC_IDENTIFIERS.add("JMException");
            PUBLIC_IDENTIFIERS.add("JmodArchive");
            PUBLIC_IDENTIFIERS.add("JmodArchive$JmodEntry");
            PUBLIC_IDENTIFIERS.add("JmodFile");
            PUBLIC_IDENTIFIERS.add("JmodFile$Entry");
            PUBLIC_IDENTIFIERS.add("JmodTask");
            PUBLIC_IDENTIFIERS.add("JMRuntimeException");
            PUBLIC_IDENTIFIERS.add("JMX");
            PUBLIC_IDENTIFIERS.add("JMXAddressable");
            PUBLIC_IDENTIFIERS.add("JMXAuthenticator");
            PUBLIC_IDENTIFIERS.add("JMXConnectionNotification");
            PUBLIC_IDENTIFIERS.add("JMXConnector");
            PUBLIC_IDENTIFIERS.add("JMXConnectorFactory");
            PUBLIC_IDENTIFIERS.add("JMXConnectorProvider");
            PUBLIC_IDENTIFIERS.add("JMXConnectorServer");
            PUBLIC_IDENTIFIERS.add("JMXConnectorServerFactory");
            PUBLIC_IDENTIFIERS.add("JMXConnectorServerMBean");
            PUBLIC_IDENTIFIERS.add("JMXConnectorServerProvider");
            PUBLIC_IDENTIFIERS.add("JmxMBeanServerBuilder");
            PUBLIC_IDENTIFIERS.add("JMXPrincipal");
            PUBLIC_IDENTIFIERS.add("JmxProperties");
            PUBLIC_IDENTIFIERS.add("JMXProviderException");
            PUBLIC_IDENTIFIERS.add("JMXServerErrorException");
            PUBLIC_IDENTIFIERS.add("JMXServiceURL");
            PUBLIC_IDENTIFIERS.add("JMXSubjectDomainCombiner");
            PUBLIC_IDENTIFIERS.add("JnaSupport");
            PUBLIC_IDENTIFIERS.add("JndiLoginModule");
            PUBLIC_IDENTIFIERS.add("JNIHandleBlock");
            PUBLIC_IDENTIFIERS.add("JNIHandles");
            PUBLIC_IDENTIFIERS.add("JNITypeParser");
            PUBLIC_IDENTIFIERS.add("JNIWriter");
            PUBLIC_IDENTIFIERS.add("JobMediaSheets");
            PUBLIC_IDENTIFIERS.add("JobSheets");
            PUBLIC_IDENTIFIERS.add("JobState");
            PUBLIC_IDENTIFIERS.add("JobStateReason");
            PUBLIC_IDENTIFIERS.add("Johab");
            PUBLIC_IDENTIFIERS.add("Joinable");
            PUBLIC_IDENTIFIERS.add("JoinRowSet");
            PUBLIC_IDENTIFIERS.add("JoinRowSetImpl");
            PUBLIC_IDENTIFIERS.add("JOptionPane");
            PUBLIC_IDENTIFIERS.add("JOptionPane$AccessibleJOptionPane");
            PUBLIC_IDENTIFIERS.add("JPackageToolProvider");
            PUBLIC_IDENTIFIERS.add("JPanel");
            PUBLIC_IDENTIFIERS.add("JPanel$AccessibleJPanel");
            PUBLIC_IDENTIFIERS.add("JPasswordField");
            PUBLIC_IDENTIFIERS.add("JPasswordField$AccessibleJPasswordField");
            PUBLIC_IDENTIFIERS.add("jpeg");
            PUBLIC_IDENTIFIERS.add("JPEG");
            PUBLIC_IDENTIFIERS.add("JPEGHuffmanTable");
            PUBLIC_IDENTIFIERS.add("JPEGImageDecoder");
            PUBLIC_IDENTIFIERS.add("JPEGImageMetadataFormat");
            PUBLIC_IDENTIFIERS.add("JPEGImageMetadataFormatResources");
            PUBLIC_IDENTIFIERS.add("JPEGImageReader");
            PUBLIC_IDENTIFIERS.add("JPEGImageReaderResources");
            PUBLIC_IDENTIFIERS.add("JPEGImageReaderSpi");
            PUBLIC_IDENTIFIERS.add("JPEGImageReadParam");
            PUBLIC_IDENTIFIERS.add("JPEGImageWriteParam");
            PUBLIC_IDENTIFIERS.add("JPEGImageWriter");
            PUBLIC_IDENTIFIERS.add("JPEGImageWriterResources");
            PUBLIC_IDENTIFIERS.add("JPEGImageWriterSpi");
            PUBLIC_IDENTIFIERS.add("JPEGMetadata");
            PUBLIC_IDENTIFIERS.add("JPEGQTable");
            PUBLIC_IDENTIFIERS.add("JPEGStreamMetadataFormat");
            PUBLIC_IDENTIFIERS.add("JPEGStreamMetadataFormatResources");
            PUBLIC_IDENTIFIERS.add("JPopupMenu");
            PUBLIC_IDENTIFIERS.add("JPopupMenu$AccessibleJPopupMenu");
            PUBLIC_IDENTIFIERS.add("JPopupMenu$Separator");
            PUBLIC_IDENTIFIERS.add("JProgressBar");
            PUBLIC_IDENTIFIERS.add("JProgressBar$AccessibleJProgressBar");
            PUBLIC_IDENTIFIERS.add("Jps");
            PUBLIC_IDENTIFIERS.add("JRadioButton");
            PUBLIC_IDENTIFIERS.add("JRadioButton$AccessibleJRadioButton");
            PUBLIC_IDENTIFIERS.add("JRadioButtonMenuItem");
            PUBLIC_IDENTIFIERS.add("JRadioButtonMenuItem$AccessibleJRadioButtonMenuItem");
            PUBLIC_IDENTIFIERS.add("JRELocaleConstants");
            PUBLIC_IDENTIFIERS.add("JRELocaleProviderAdapter");
            PUBLIC_IDENTIFIERS.add("JRootPane");
            PUBLIC_IDENTIFIERS.add("JRootPane$AccessibleJRootPane");
            PUBLIC_IDENTIFIERS.add("JRootPane$RootLayout");
            PUBLIC_IDENTIFIERS.add("JRTIndex");
            PUBLIC_IDENTIFIERS.add("JRTIndex$CtSym");
            PUBLIC_IDENTIFIERS.add("JScrollBar");
            PUBLIC_IDENTIFIERS.add("JScrollBar$AccessibleJScrollBar");
            PUBLIC_IDENTIFIERS.add("JScrollPane");
            PUBLIC_IDENTIFIERS.add("JScrollPane$AccessibleJScrollPane");
            PUBLIC_IDENTIFIERS.add("JScrollPane$ScrollBar");
            PUBLIC_IDENTIFIERS.add("JSeparator");
            PUBLIC_IDENTIFIERS.add("JSeparator$AccessibleJSeparator");
            PUBLIC_IDENTIFIERS.add("JSException");
            PUBLIC_IDENTIFIERS.add("JShell");
            PUBLIC_IDENTIFIERS.add("JShell$Builder");
            PUBLIC_IDENTIFIERS.add("JShell$Subscription");
            PUBLIC_IDENTIFIERS.add("JShellException");
            PUBLIC_IDENTIFIERS.add("JShellTool");
            PUBLIC_IDENTIFIERS.add("JShellToolBuilder");
            PUBLIC_IDENTIFIERS.add("JShellToolProvider");
            PUBLIC_IDENTIFIERS.add("JShortField");
            PUBLIC_IDENTIFIERS.add("JSlider");
            PUBLIC_IDENTIFIERS.add("JSlider$AccessibleJSlider");
            PUBLIC_IDENTIFIERS.add("JSnap");
            PUBLIC_IDENTIFIERS.add("JSObject");
            PUBLIC_IDENTIFIERS.add("JSpinner");
            PUBLIC_IDENTIFIERS.add("JSpinner$AccessibleJSpinner");
            PUBLIC_IDENTIFIERS.add("JSpinner$DateEditor");
            PUBLIC_IDENTIFIERS.add("JSpinner$DefaultEditor");
            PUBLIC_IDENTIFIERS.add("JSpinner$ListEditor");
            PUBLIC_IDENTIFIERS.add("JSpinner$NumberEditor");
            PUBLIC_IDENTIFIERS.add("JSplitPane");
            PUBLIC_IDENTIFIERS.add("JSplitPane$AccessibleJSplitPane");
            PUBLIC_IDENTIFIERS.add("JSR");
            PUBLIC_IDENTIFIERS.add("JSRInlinerAdapter");
            PUBLIC_IDENTIFIERS.add("JsrInstruction");
            PUBLIC_IDENTIFIERS.add("JSR_W");
            PUBLIC_IDENTIFIERS.add("JStack");
            PUBLIC_IDENTIFIERS.add("Jstat");
            PUBLIC_IDENTIFIERS.add("Jstatd");
            PUBLIC_IDENTIFIERS.add("JStatLogger");
            PUBLIC_IDENTIFIERS.add("JTabbedPane");
            PUBLIC_IDENTIFIERS.add("JTabbedPane$AccessibleJTabbedPane");
            PUBLIC_IDENTIFIERS.add("JTabbedPane$ModelListener");
            PUBLIC_IDENTIFIERS.add("JTable");
            PUBLIC_IDENTIFIERS.add("JTable$AccessibleJTable");
            PUBLIC_IDENTIFIERS.add("JTable$AccessibleJTable$AccessibleJTableCell");
            PUBLIC_IDENTIFIERS.add("JTable$AccessibleJTable$AccessibleJTableModelChange");
            PUBLIC_IDENTIFIERS.add("JTableHeader");
            PUBLIC_IDENTIFIERS.add("JTableHeader$AccessibleJTableHeader");
            PUBLIC_IDENTIFIERS.add("JTableHeader$AccessibleJTableHeader$AccessibleJTableHeaderEntry");
            PUBLIC_IDENTIFIERS.add("JTextArea");
            PUBLIC_IDENTIFIERS.add("JTextArea$AccessibleJTextArea");
            PUBLIC_IDENTIFIERS.add("JTextComponent");
            PUBLIC_IDENTIFIERS.add("JTextComponent$AccessibleJTextComponent");
            PUBLIC_IDENTIFIERS.add("JTextComponent$KeyBinding");
            PUBLIC_IDENTIFIERS.add("JTextField");
            PUBLIC_IDENTIFIERS.add("JTextField$AccessibleJTextField");
            PUBLIC_IDENTIFIERS.add("JTextPane");
            PUBLIC_IDENTIFIERS.add("JToggleButton");
            PUBLIC_IDENTIFIERS.add("JToggleButton$AccessibleJToggleButton");
            PUBLIC_IDENTIFIERS.add("JToggleButton$ToggleButtonModel");
            PUBLIC_IDENTIFIERS.add("JToolBar");
            PUBLIC_IDENTIFIERS.add("JToolBar$AccessibleJToolBar");
            PUBLIC_IDENTIFIERS.add("JToolBar$Separator");
            PUBLIC_IDENTIFIERS.add("JToolTip");
            PUBLIC_IDENTIFIERS.add("JToolTip$AccessibleJToolTip");
            PUBLIC_IDENTIFIERS.add("JTree");
            PUBLIC_IDENTIFIERS.add("JTree$AccessibleJTree");
            PUBLIC_IDENTIFIERS.add("JTree$AccessibleJTree$AccessibleJTreeNode");
            PUBLIC_IDENTIFIERS.add("JTree$DynamicUtilTreeNode");
            PUBLIC_IDENTIFIERS.add("JTree$EmptySelectionModel");
            PUBLIC_IDENTIFIERS.add("JTree$TreeModelHandler");
            PUBLIC_IDENTIFIERS.add("JTree$TreeSelectionRedirector");
            PUBLIC_IDENTIFIERS.add("JTreeTable");
            PUBLIC_IDENTIFIERS.add("JTreeTable$TreeTableCellEditor");
            PUBLIC_IDENTIFIERS.add("JTreeTable$TreeTableCellRenderer");
            PUBLIC_IDENTIFIERS.add("JulianCalendar");
            PUBLIC_IDENTIFIERS.add("JumpData");
            PUBLIC_IDENTIFIERS.add("JumpInsnNode");
            PUBLIC_IDENTIFIERS.add("JViewport");
            PUBLIC_IDENTIFIERS.add("JViewport$AccessibleJViewport");
            PUBLIC_IDENTIFIERS.add("JViewport$ViewListener");
            PUBLIC_IDENTIFIERS.add("JVMCI");
            PUBLIC_IDENTIFIERS.add("JVMCIBackend");
            PUBLIC_IDENTIFIERS.add("JVMCICompiler");
            PUBLIC_IDENTIFIERS.add("JVMCICompilerFactory");
            PUBLIC_IDENTIFIERS.add("JVMCIError");
            PUBLIC_IDENTIFIERS.add("JVMCIPermission");
            PUBLIC_IDENTIFIERS.add("JVMCIRuntime");
            PUBLIC_IDENTIFIERS.add("JVMCIServiceLocator");
            PUBLIC_IDENTIFIERS.add("JVMDebugger");
            PUBLIC_IDENTIFIERS.add("JVMDIClassStatus");
            PUBLIC_IDENTIFIERS.add("JVMState");
            PUBLIC_IDENTIFIERS.add("JvmtiAgentThread");
            PUBLIC_IDENTIFIERS.add("JvmtiExport");
            PUBLIC_IDENTIFIERS.add("JvmtiMountTransition");
            PUBLIC_IDENTIFIERS.add("JWebServer");
            PUBLIC_IDENTIFIERS.add("JWindow");
            PUBLIC_IDENTIFIERS.add("JWindow$AccessibleJWindow");
        }
        return PUBLIC_IDENTIFIERS;
    }
}
