package edu.umd.cs.findbugs.detect.publicidentifiers;

import static edu.umd.cs.findbugs.detect.publicidentifiers.PublicIdentifiers.PUBLIC_IDENTIFIERS;

/**
 * Utility class to load the public identifiers from D to E
 */
class LoadPublicIdentifiersDE {
    public static void load() {
        PUBLIC_IDENTIFIERS.add("D2F");
        PUBLIC_IDENTIFIERS.add("D2I");
        PUBLIC_IDENTIFIERS.add("D2L");
        PUBLIC_IDENTIFIERS.add("DADD");
        PUBLIC_IDENTIFIERS.add("DALOAD");
        PUBLIC_IDENTIFIERS.add("DASTORE");
        PUBLIC_IDENTIFIERS.add("Data");
        PUBLIC_IDENTIFIERS.add("DataAmount");
        PUBLIC_IDENTIFIERS.add("DatabaseMetaData");
        PUBLIC_IDENTIFIERS.add("DataBuffer");
        PUBLIC_IDENTIFIERS.add("DataBufferNative");
        PUBLIC_IDENTIFIERS.add("DataDirectory");
        PUBLIC_IDENTIFIERS.add("DataFlavor");
        PUBLIC_IDENTIFIERS.add("DataFlavorUtil");
        PUBLIC_IDENTIFIERS.add("DataFlavorUtil$RMI");
        PUBLIC_IDENTIFIERS.add("DataFormatException");
        PUBLIC_IDENTIFIERS.add("DataFrame");
        PUBLIC_IDENTIFIERS.add("DatagramChannel");
        PUBLIC_IDENTIFIERS.add("DatagramSocket");
        PUBLIC_IDENTIFIERS.add("DatagramSocketAdaptor");
        PUBLIC_IDENTIFIERS.add("DatagramSocketImpl");
        PUBLIC_IDENTIFIERS.add("DatagramSocketImplFactory");
        PUBLIC_IDENTIFIERS.add("DataInput");
        PUBLIC_IDENTIFIERS.add("DataInputStream");
        PUBLIC_IDENTIFIERS.add("DataLayout");
        PUBLIC_IDENTIFIERS.add("DataLine");
        PUBLIC_IDENTIFIERS.add("DataLine$Info");
        PUBLIC_IDENTIFIERS.add("DataOutput");
        PUBLIC_IDENTIFIERS.add("DataOutputStream");
        PUBLIC_IDENTIFIERS.add("DataSource");
        PUBLIC_IDENTIFIERS.add("DataTransferer");
        PUBLIC_IDENTIFIERS.add("DataTransferer$ReencodingInputStream");
        PUBLIC_IDENTIFIERS.add("DataTruncation");
        PUBLIC_IDENTIFIERS.add("DatatypeConfigurationException");
        PUBLIC_IDENTIFIERS.add("DatatypeException");
        PUBLIC_IDENTIFIERS.add("DatatypeFactory");
        PUBLIC_IDENTIFIERS.add("DatatypeFactoryImpl");
        PUBLIC_IDENTIFIERS.add("DatatypeMessageFormatter");
        PUBLIC_IDENTIFIERS.add("DatatypeValidator");
        PUBLIC_IDENTIFIERS.add("Date");
        PUBLIC_IDENTIFIERS.add("DateConverter");
        PUBLIC_IDENTIFIERS.add("DateDV");
        PUBLIC_IDENTIFIERS.add("DateFormat");
        PUBLIC_IDENTIFIERS.add("DateFormat$Field");
        PUBLIC_IDENTIFIERS.add("DateFormatProvider");
        PUBLIC_IDENTIFIERS.add("DateFormatProviderImpl");
        PUBLIC_IDENTIFIERS.add("DateFormatSymbols");
        PUBLIC_IDENTIFIERS.add("DateFormatSymbolsProvider");
        PUBLIC_IDENTIFIERS.add("DateFormatSymbolsProviderImpl");
        PUBLIC_IDENTIFIERS.add("DateFormatter");
        PUBLIC_IDENTIFIERS.add("DateTimeDV");
        PUBLIC_IDENTIFIERS.add("DateTimeException");
        PUBLIC_IDENTIFIERS.add("DateTimeParseException");
        PUBLIC_IDENTIFIERS.add("DateTimeSyntax");
        PUBLIC_IDENTIFIERS.add("DayDV");
        PUBLIC_IDENTIFIERS.add("DCMPG");
        PUBLIC_IDENTIFIERS.add("DCMPL");
        PUBLIC_IDENTIFIERS.add("DCONST");
        PUBLIC_IDENTIFIERS.add("DCTree");
        PUBLIC_IDENTIFIERS.add("DCTree$DCAttribute");
        PUBLIC_IDENTIFIERS.add("DCTree$DCAuthor");
        PUBLIC_IDENTIFIERS.add("DCTree$DCBlockTag");
        PUBLIC_IDENTIFIERS.add("DCTree$DCComment");
        PUBLIC_IDENTIFIERS.add("DCTree$DCDeprecated");
        PUBLIC_IDENTIFIERS.add("DCTree$DCDocComment");
        PUBLIC_IDENTIFIERS.add("DCTree$DCDocRoot");
        PUBLIC_IDENTIFIERS.add("DCTree$DCDocType");
        PUBLIC_IDENTIFIERS.add("DCTree$DCEndElement");
        PUBLIC_IDENTIFIERS.add("DCTree$DCEndPosTree");
        PUBLIC_IDENTIFIERS.add("DCTree$DCEntity");
        PUBLIC_IDENTIFIERS.add("DCTree$DCErroneous");
        PUBLIC_IDENTIFIERS.add("DCTree$DCHidden");
        PUBLIC_IDENTIFIERS.add("DCTree$DCIdentifier");
        PUBLIC_IDENTIFIERS.add("DCTree$DCIndex");
        PUBLIC_IDENTIFIERS.add("DCTree$DCInheritDoc");
        PUBLIC_IDENTIFIERS.add("DCTree$DCInlineTag");
        PUBLIC_IDENTIFIERS.add("DCTree$DCLink");
        PUBLIC_IDENTIFIERS.add("DCTree$DCLiteral");
        PUBLIC_IDENTIFIERS.add("DCTree$DCParam");
        PUBLIC_IDENTIFIERS.add("DCTree$DCProvides");
        PUBLIC_IDENTIFIERS.add("DCTree$DCReference");
        PUBLIC_IDENTIFIERS.add("DCTree$DCReturn");
        PUBLIC_IDENTIFIERS.add("DCTree$DCSee");
        PUBLIC_IDENTIFIERS.add("DCTree$DCSerial");
        PUBLIC_IDENTIFIERS.add("DCTree$DCSerialData");
        PUBLIC_IDENTIFIERS.add("DCTree$DCSerialField");
        PUBLIC_IDENTIFIERS.add("DCTree$DCSince");
        PUBLIC_IDENTIFIERS.add("DCTree$DCSnippet");
        PUBLIC_IDENTIFIERS.add("DCTree$DCSpec");
        PUBLIC_IDENTIFIERS.add("DCTree$DCStartElement");
        PUBLIC_IDENTIFIERS.add("DCTree$DCSummary");
        PUBLIC_IDENTIFIERS.add("DCTree$DCSystemProperty");
        PUBLIC_IDENTIFIERS.add("DCTree$DCText");
        PUBLIC_IDENTIFIERS.add("DCTree$DCThrows");
        PUBLIC_IDENTIFIERS.add("DCTree$DCUnknownBlockTag");
        PUBLIC_IDENTIFIERS.add("DCTree$DCUnknownInlineTag");
        PUBLIC_IDENTIFIERS.add("DCTree$DCUses");
        PUBLIC_IDENTIFIERS.add("DCTree$DCValue");
        PUBLIC_IDENTIFIERS.add("DCTree$DCVersion");
        PUBLIC_IDENTIFIERS.add("DDIV");
        PUBLIC_IDENTIFIERS.add("DeadlockDetectionPanel");
        PUBLIC_IDENTIFIERS.add("DeadlockDetector");
        PUBLIC_IDENTIFIERS.add("Debug");
        PUBLIC_IDENTIFIERS.add("DebugDirectory");
        PUBLIC_IDENTIFIERS.add("DebugDirectoryEntry");
        PUBLIC_IDENTIFIERS.add("DebugEvent");
        PUBLIC_IDENTIFIERS.add("DebugEvent$Type");
        PUBLIC_IDENTIFIERS.add("Debugger");
        PUBLIC_IDENTIFIERS.add("DebuggerBase");
        PUBLIC_IDENTIFIERS.add("DebuggerConsolePanel");
        PUBLIC_IDENTIFIERS.add("DebuggerException");
        PUBLIC_IDENTIFIERS.add("DebuggerUtilities");
        PUBLIC_IDENTIFIERS.add("DebugGraphics");
        PUBLIC_IDENTIFIERS.add("DebugInfoReadStream");
        PUBLIC_IDENTIFIERS.add("DebugInformationRecorder");
        PUBLIC_IDENTIFIERS.add("DebugServer");
        PUBLIC_IDENTIFIERS.add("DebugTypes");
        PUBLIC_IDENTIFIERS.add("DebugVC50");
        PUBLIC_IDENTIFIERS.add("DebugVC50MemberAttributes");
        PUBLIC_IDENTIFIERS.add("DebugVC50ReservedTypes");
        PUBLIC_IDENTIFIERS.add("DebugVC50SegDesc");
        PUBLIC_IDENTIFIERS.add("DebugVC50SegDescEnums");
        PUBLIC_IDENTIFIERS.add("DebugVC50SegInfo");
        PUBLIC_IDENTIFIERS.add("DebugVC50SrcModFileDesc");
        PUBLIC_IDENTIFIERS.add("DebugVC50SrcModLineNumberMap");
        PUBLIC_IDENTIFIERS.add("DebugVC50SSAlignSym");
        PUBLIC_IDENTIFIERS.add("DebugVC50SSFileIndex");
        PUBLIC_IDENTIFIERS.add("DebugVC50SSGlobalPub");
        PUBLIC_IDENTIFIERS.add("DebugVC50SSGlobalSym");
        PUBLIC_IDENTIFIERS.add("DebugVC50SSGlobalTypes");
        PUBLIC_IDENTIFIERS.add("DebugVC50SSLibraries");
        PUBLIC_IDENTIFIERS.add("DebugVC50SSModule");
        PUBLIC_IDENTIFIERS.add("DebugVC50SSMPC");
        PUBLIC_IDENTIFIERS.add("DebugVC50SSOffsetMap16");
        PUBLIC_IDENTIFIERS.add("DebugVC50SSOffsetMap32");
        PUBLIC_IDENTIFIERS.add("DebugVC50SSPreComp");
        PUBLIC_IDENTIFIERS.add("DebugVC50SSPublic");
        PUBLIC_IDENTIFIERS.add("DebugVC50SSPublicSym");
        PUBLIC_IDENTIFIERS.add("DebugVC50SSSegMap");
        PUBLIC_IDENTIFIERS.add("DebugVC50SSSegName");
        PUBLIC_IDENTIFIERS.add("DebugVC50SSSrcLnSeg");
        PUBLIC_IDENTIFIERS.add("DebugVC50SSSrcModule");
        PUBLIC_IDENTIFIERS.add("DebugVC50SSStaticSym");
        PUBLIC_IDENTIFIERS.add("DebugVC50SSSymbolBase");
        PUBLIC_IDENTIFIERS.add("DebugVC50SSSymbols");
        PUBLIC_IDENTIFIERS.add("DebugVC50SSTypes");
        PUBLIC_IDENTIFIERS.add("DebugVC50Subsection");
        PUBLIC_IDENTIFIERS.add("DebugVC50SubsectionDirectory");
        PUBLIC_IDENTIFIERS.add("DebugVC50SubsectionTypes");
        PUBLIC_IDENTIFIERS.add("DebugVC50SymbolEnums");
        PUBLIC_IDENTIFIERS.add("DebugVC50SymbolIterator");
        PUBLIC_IDENTIFIERS.add("DebugVC50SymbolTypes");
        PUBLIC_IDENTIFIERS.add("DebugVC50TypeEnums");
        PUBLIC_IDENTIFIERS.add("DebugVC50TypeIterator");
        PUBLIC_IDENTIFIERS.add("DebugVC50TypeLeafIndices");
        PUBLIC_IDENTIFIERS.add("DebugVC50WrongNumericTypeException");
        PUBLIC_IDENTIFIERS.add("DebugVC50X86RegisterEnums");
        PUBLIC_IDENTIFIERS.add("DecimalDV");
        PUBLIC_IDENTIFIERS.add("DecimalFormat");
        PUBLIC_IDENTIFIERS.add("DecimalFormatSymbols");
        PUBLIC_IDENTIFIERS.add("DecimalFormatSymbolsProvider");
        PUBLIC_IDENTIFIERS.add("DecimalFormatSymbolsProviderImpl");
        PUBLIC_IDENTIFIERS.add("DeclarationSnippet");
        PUBLIC_IDENTIFIERS.add("DeclaredType");
        PUBLIC_IDENTIFIERS.add("DeclHandler");
        PUBLIC_IDENTIFIERS.add("DecodingCallback");
        PUBLIC_IDENTIFIERS.add("DeconstructionPatternTree");
        PUBLIC_IDENTIFIERS.add("Decoration");
        PUBLIC_IDENTIFIERS.add("Decoration$Label");
        PUBLIC_IDENTIFIERS.add("DeepNodeListImpl");
        PUBLIC_IDENTIFIERS.add("DefaultAsynchronousChannelProvider");
        PUBLIC_IDENTIFIERS.add("DefaultAttribute");
        PUBLIC_IDENTIFIERS.add("DefaultBoundedRangeModel");
        PUBLIC_IDENTIFIERS.add("DefaultButtonModel");
        PUBLIC_IDENTIFIERS.add("DefaultCaret");
        PUBLIC_IDENTIFIERS.add("DefaultCaseLabelTree");
        PUBLIC_IDENTIFIERS.add("DefaultCellEditor");
        PUBLIC_IDENTIFIERS.add("DefaultCellEditor$EditorDelegate");
        PUBLIC_IDENTIFIERS.add("DefaultColorSelectionModel");
        PUBLIC_IDENTIFIERS.add("DefaultComboBoxModel");
        PUBLIC_IDENTIFIERS.add("DefaultDesktopManager");
        PUBLIC_IDENTIFIERS.add("DefaultDisposerRecord");
        PUBLIC_IDENTIFIERS.add("DefaultDocument");
        PUBLIC_IDENTIFIERS.add("DefaultEditorKit");
        PUBLIC_IDENTIFIERS.add("DefaultEditorKit$BeepAction");
        PUBLIC_IDENTIFIERS.add("DefaultEditorKit$CopyAction");
        PUBLIC_IDENTIFIERS.add("DefaultEditorKit$CutAction");
        PUBLIC_IDENTIFIERS.add("DefaultEditorKit$DefaultKeyTypedAction");
        PUBLIC_IDENTIFIERS.add("DefaultEditorKit$InsertBreakAction");
        PUBLIC_IDENTIFIERS.add("DefaultEditorKit$InsertContentAction");
        PUBLIC_IDENTIFIERS.add("DefaultEditorKit$InsertTabAction");
        PUBLIC_IDENTIFIERS.add("DefaultEditorKit$PasteAction");
        PUBLIC_IDENTIFIERS.add("DefaultElement");
        PUBLIC_IDENTIFIERS.add("DefaultErrorHandler");
        PUBLIC_IDENTIFIERS.add("DefaultExpander");
        PUBLIC_IDENTIFIERS.add("DefaultFileSystemProvider");
        PUBLIC_IDENTIFIERS.add("DefaultFileTypeDetector");
        PUBLIC_IDENTIFIERS.add("DefaultFocusManager");
        PUBLIC_IDENTIFIERS.add("DefaultFocusTraversalPolicy");
        PUBLIC_IDENTIFIERS.add("DefaultFormatter");
        PUBLIC_IDENTIFIERS.add("DefaultFormatterFactory");
        PUBLIC_IDENTIFIERS.add("DefaultFtpClientProvider");
        PUBLIC_IDENTIFIERS.add("DefaultHandler");
        PUBLIC_IDENTIFIERS.add("DefaultHandler2");
        PUBLIC_IDENTIFIERS.add("DefaultHeapVisitor");
        PUBLIC_IDENTIFIERS.add("DefaultHighlighter");
        PUBLIC_IDENTIFIERS.add("DefaultHighlighter$DefaultHighlightPainter");
        PUBLIC_IDENTIFIERS.add("DefaultHistory");
        PUBLIC_IDENTIFIERS.add("DefaultHistory$EntryImpl");
        PUBLIC_IDENTIFIERS.add("DefaultHttpServerProvider");
        PUBLIC_IDENTIFIERS.add("DefaultInternalObjectFilter");
        PUBLIC_IDENTIFIERS.add("DefaultKeyboardFocusManager");
        PUBLIC_IDENTIFIERS.add("DefaultLayoutStyle");
        PUBLIC_IDENTIFIERS.add("DefaultLdapDnsProvider");
        PUBLIC_IDENTIFIERS.add("DefaultListCellRenderer");
        PUBLIC_IDENTIFIERS.add("DefaultListCellRenderer$UIResource");
        PUBLIC_IDENTIFIERS.add("DefaultListModel");
        PUBLIC_IDENTIFIERS.add("DefaultListSelectionModel");
        PUBLIC_IDENTIFIERS.add("DefaultLoaderRepository");
        PUBLIC_IDENTIFIERS.add("DefaultLoggerFinder");
        PUBLIC_IDENTIFIERS.add("DefaultLookup");
        PUBLIC_IDENTIFIERS.add("DefaultMBeanServerInterceptor");
        PUBLIC_IDENTIFIERS.add("DefaultMenuLayout");
        PUBLIC_IDENTIFIERS.add("DefaultMetadataVisitor");
        PUBLIC_IDENTIFIERS.add("DefaultMetalTheme");
        PUBLIC_IDENTIFIERS.add("DefaultMutableTreeNode");
        PUBLIC_IDENTIFIERS.add("DefaultMXBeanMappingFactory");
        PUBLIC_IDENTIFIERS.add("DefaultNode");
        PUBLIC_IDENTIFIERS.add("DefaultObjectVisitor");
        PUBLIC_IDENTIFIERS.add("DefaultOopVisitor");
        PUBLIC_IDENTIFIERS.add("DefaultParser");
        PUBLIC_IDENTIFIERS.add("DefaultParser$ArgumentList");
        PUBLIC_IDENTIFIERS.add("DefaultPersistenceDelegate");
        PUBLIC_IDENTIFIERS.add("DefaultProxySelector");
        PUBLIC_IDENTIFIERS.add("DefaultResponseControlFactory");
        PUBLIC_IDENTIFIERS.add("DefaultRowSorter");
        PUBLIC_IDENTIFIERS.add("DefaultRowSorter$ModelWrapper");
        PUBLIC_IDENTIFIERS.add("DefaultSelectorProvider");
        PUBLIC_IDENTIFIERS.add("DefaultSingleSelectionModel");
        PUBLIC_IDENTIFIERS.add("DefaultStripDebugPlugin$NativePluginFactory");
        PUBLIC_IDENTIFIERS.add("DefaultStyledDocument");
        PUBLIC_IDENTIFIERS.add("DefaultStyledDocument$AttributeUndoableEdit");
        PUBLIC_IDENTIFIERS.add("DefaultStyledDocument$ElementBuffer");
        PUBLIC_IDENTIFIERS.add("DefaultStyledDocument$ElementSpec");
        PUBLIC_IDENTIFIERS.add("DefaultStyledDocument$SectionElement");
        PUBLIC_IDENTIFIERS.add("DefaultSynthStyle");
        PUBLIC_IDENTIFIERS.add("DefaultSynthStyle$StateInfo");
        PUBLIC_IDENTIFIERS.add("DefaultTableCellHeaderRenderer");
        PUBLIC_IDENTIFIERS.add("DefaultTableCellRenderer");
        PUBLIC_IDENTIFIERS.add("DefaultTableCellRenderer$UIResource");
        PUBLIC_IDENTIFIERS.add("DefaultTableColumnModel");
        PUBLIC_IDENTIFIERS.add("DefaultTableModel");
        PUBLIC_IDENTIFIERS.add("DefaultText");
        PUBLIC_IDENTIFIERS.add("DefaultTextUI");
        PUBLIC_IDENTIFIERS.add("DefaultTreeCellEditor");
        PUBLIC_IDENTIFIERS.add("DefaultTreeCellEditor$DefaultTextField");
        PUBLIC_IDENTIFIERS.add("DefaultTreeCellEditor$EditorContainer");
        PUBLIC_IDENTIFIERS.add("DefaultTreeCellRenderer");
        PUBLIC_IDENTIFIERS.add("DefaultTreeModel");
        PUBLIC_IDENTIFIERS.add("DefaultTreeSelectionModel");
        PUBLIC_IDENTIFIERS.add("DefaultXMLDocumentHandler");
        PUBLIC_IDENTIFIERS.add("DeferredAttr");
        PUBLIC_IDENTIFIERS.add("DeferredAttr$DeferredType");
        PUBLIC_IDENTIFIERS.add("DeferredAttr$RecoveryDeferredTypeMap");
        PUBLIC_IDENTIFIERS.add("DeferredCDATASectionImpl");
        PUBLIC_IDENTIFIERS.add("DeferredCommentImpl");
        PUBLIC_IDENTIFIERS.add("DeferredCompletionFailureHandler");
        PUBLIC_IDENTIFIERS.add("DeferredCompletionFailureHandler$Handler");
        PUBLIC_IDENTIFIERS.add("DeferredDocumentImpl");
        PUBLIC_IDENTIFIERS.add("DeferredDocumentTypeImpl");
        PUBLIC_IDENTIFIERS.add("DeferredDOMImplementationImpl");
        PUBLIC_IDENTIFIERS.add("DeferredElementDefinitionImpl");
        PUBLIC_IDENTIFIERS.add("DeferredElementImpl");
        PUBLIC_IDENTIFIERS.add("DeferredElementNSImpl");
        PUBLIC_IDENTIFIERS.add("DeferredEntityImpl");
        PUBLIC_IDENTIFIERS.add("DeferredEntityReferenceImpl");
        PUBLIC_IDENTIFIERS.add("DeferredLintHandler");
        PUBLIC_IDENTIFIERS.add("DeferredLintHandler$LintLogger");
        PUBLIC_IDENTIFIERS.add("DeferredNode");
        PUBLIC_IDENTIFIERS.add("DeferredNotationImpl");
        PUBLIC_IDENTIFIERS.add("DeferredProcessingInstructionImpl");
        PUBLIC_IDENTIFIERS.add("DeferredTextImpl");
        PUBLIC_IDENTIFIERS.add("DefinedBy");
        PUBLIC_IDENTIFIERS.add("Deflater");
        PUBLIC_IDENTIFIERS.add("DeflaterInputStream");
        PUBLIC_IDENTIFIERS.add("DeflaterOutputStream");
        PUBLIC_IDENTIFIERS.add("DefNewGeneration");
        PUBLIC_IDENTIFIERS.add("Delayed");
        PUBLIC_IDENTIFIERS.add("DelayQueue");
        PUBLIC_IDENTIFIERS.add("DelegatableDecoder");
        PUBLIC_IDENTIFIERS.add("DelegateAction");
        PUBLIC_IDENTIFIERS.add("DelegateHttpsURLConnection");
        PUBLIC_IDENTIFIERS.add("DelegatingHttpExchange");
        PUBLIC_IDENTIFIERS.add("DelegatingJavaFileManager");
        PUBLIC_IDENTIFIERS.add("DeltaCRLIndicatorExtension");
        PUBLIC_IDENTIFIERS.add("DeoptimizationBlob");
        PUBLIC_IDENTIFIERS.add("Dependencies");
        PUBLIC_IDENTIFIERS.add("Dependencies$ClassFileError");
        PUBLIC_IDENTIFIERS.add("Dependencies$ClassFileNotFoundException");
        PUBLIC_IDENTIFIERS.add("Dependencies$ClassFileReader");
        PUBLIC_IDENTIFIERS.add("Dependencies$GraphDependencies");
        PUBLIC_IDENTIFIERS.add("Dependencies$GraphDependencies$CompletionNode");
        PUBLIC_IDENTIFIERS.add("Dependencies$GraphDependencies$Node");
        PUBLIC_IDENTIFIERS.add("Dependencies$Recorder");
        PUBLIC_IDENTIFIERS.add("Dependency");
        PUBLIC_IDENTIFIERS.add("Dependency$Filter");
        PUBLIC_IDENTIFIERS.add("Dependency$Finder");
        PUBLIC_IDENTIFIERS.add("Dependency$Location");
        PUBLIC_IDENTIFIERS.add("DeployParams");
        PUBLIC_IDENTIFIERS.add("DeprData");
        PUBLIC_IDENTIFIERS.add("DeprDB");
        PUBLIC_IDENTIFIERS.add("Deprecated");
        PUBLIC_IDENTIFIERS.add("DeprecatedAPIListBuilder");
        PUBLIC_IDENTIFIERS.add("Deprecated_attribute");
        PUBLIC_IDENTIFIERS.add("DeprecatedListWriter");
        PUBLIC_IDENTIFIERS.add("DeprecatedTaglet");
        PUBLIC_IDENTIFIERS.add("DeprecatedTree");
        PUBLIC_IDENTIFIERS.add("DepsAnalyzer");
        PUBLIC_IDENTIFIERS.add("DepsAnalyzer$Node");
        PUBLIC_IDENTIFIERS.add("Depth");
        PUBLIC_IDENTIFIERS.add("Deque");
        PUBLIC_IDENTIFIERS.add("DEREncodedKeyValue");
        PUBLIC_IDENTIFIERS.add("DEREncodedKeyValueResolver");
        PUBLIC_IDENTIFIERS.add("DerEncoder");
        PUBLIC_IDENTIFIERS.add("DerInputStream");
        PUBLIC_IDENTIFIERS.add("DerValue");
        PUBLIC_IDENTIFIERS.add("Des3");
        PUBLIC_IDENTIFIERS.add("Des3DkCrypto");
        PUBLIC_IDENTIFIERS.add("DesCbcCrcEType");
        PUBLIC_IDENTIFIERS.add("DescendantIterator");
        PUBLIC_IDENTIFIERS.add("DescendingVisitor");
        PUBLIC_IDENTIFIERS.add("Description");
        PUBLIC_IDENTIFIERS.add("Descriptor");
        PUBLIC_IDENTIFIERS.add("Descriptor$InvalidDescriptor");
        PUBLIC_IDENTIFIERS.add("DescriptorAccess");
        PUBLIC_IDENTIFIERS.add("DescriptorCache");
        PUBLIC_IDENTIFIERS.add("DescriptorException");
        PUBLIC_IDENTIFIERS.add("DescriptorKey");
        PUBLIC_IDENTIFIERS.add("DescriptorRead");
        PUBLIC_IDENTIFIERS.add("DescriptorSupport");
        PUBLIC_IDENTIFIERS.add("DESedeCipher");
        PUBLIC_IDENTIFIERS.add("DESedeKeySpec");
        PUBLIC_IDENTIFIERS.add("DeserializationChecker");
        PUBLIC_IDENTIFIERS.add("DesignMode");
        PUBLIC_IDENTIFIERS.add("DESKeySpec");
        PUBLIC_IDENTIFIERS.add("Desktop");
        PUBLIC_IDENTIFIERS.add("DesktopDatatransferService");
        PUBLIC_IDENTIFIERS.add("DesktopDatatransferServiceImpl");
        PUBLIC_IDENTIFIERS.add("DesktopIconUI");
        PUBLIC_IDENTIFIERS.add("DesktopManager");
        PUBLIC_IDENTIFIERS.add("DesktopPaneUI");
        PUBLIC_IDENTIFIERS.add("DesktopPeer");
        PUBLIC_IDENTIFIERS.add("DesktopProperty");
        PUBLIC_IDENTIFIERS.add("DesMacCksumType");
        PUBLIC_IDENTIFIERS.add("DesMacKCksumType");
        PUBLIC_IDENTIFIERS.add("Destroyable");
        PUBLIC_IDENTIFIERS.add("DestroyFailedException");
        PUBLIC_IDENTIFIERS.add("DestSurfaceProvider");
        PUBLIC_IDENTIFIERS.add("DFAContentModel");
        PUBLIC_IDENTIFIERS.add("DflCache");
        PUBLIC_IDENTIFIERS.add("DGC");
        PUBLIC_IDENTIFIERS.add("DGCAckHandler");
        PUBLIC_IDENTIFIERS.add("DHGenParameterSpec");
        PUBLIC_IDENTIFIERS.add("DHKey");
        PUBLIC_IDENTIFIERS.add("DHParameterSpec");
        PUBLIC_IDENTIFIERS.add("DHPrivateKey");
        PUBLIC_IDENTIFIERS.add("DHPrivateKeySpec");
        PUBLIC_IDENTIFIERS.add("DHPublicKey");
        PUBLIC_IDENTIFIERS.add("DHPublicKeySpec");
        PUBLIC_IDENTIFIERS.add("Diag");
        PUBLIC_IDENTIFIERS.add("Diagnostic");
        PUBLIC_IDENTIFIERS.add("DiagnosticCommandImpl");
        PUBLIC_IDENTIFIERS.add("DiagnosticCommandMBean");
        PUBLIC_IDENTIFIERS.add("DiagnosticFormatter");
        PUBLIC_IDENTIFIERS.add("DiagnosticFormatter$Configuration");
        PUBLIC_IDENTIFIERS.add("DiagnosticListener");
        PUBLIC_IDENTIFIERS.add("DiagnosticSource");
        PUBLIC_IDENTIFIERS.add("Dialog");
        PUBLIC_IDENTIFIERS.add("Dialog$AccessibleAWTDialog");
        PUBLIC_IDENTIFIERS.add("DialogOwnerAccessor");
        PUBLIC_IDENTIFIERS.add("DialogPeer");
        PUBLIC_IDENTIFIERS.add("Dictionary");
        PUBLIC_IDENTIFIERS.add("DictionaryBasedBreakIterator");
        PUBLIC_IDENTIFIERS.add("DiffHelper");
        PUBLIC_IDENTIFIERS.add("DiffHelper$Diff");
        PUBLIC_IDENTIFIERS.add("DigesterOutputStream");
        PUBLIC_IDENTIFIERS.add("DigestException");
        PUBLIC_IDENTIFIERS.add("DigestInputStream");
        PUBLIC_IDENTIFIERS.add("DigestMethod");
        PUBLIC_IDENTIFIERS.add("DigestMethodParameterSpec");
        PUBLIC_IDENTIFIERS.add("DigestOutputStream");
        PUBLIC_IDENTIFIERS.add("Dimension");
        PUBLIC_IDENTIFIERS.add("Dimension2D");
        PUBLIC_IDENTIFIERS.add("DimensionUIResource");
        PUBLIC_IDENTIFIERS.add("DirArchive");
        PUBLIC_IDENTIFIERS.add("DirContext");
        PUBLIC_IDENTIFIERS.add("DirectBuffer");
        PUBLIC_IDENTIFIERS.add("DirectColorModel");
        PUBLIC_IDENTIFIERS.add("DirectExecutionControl");
        PUBLIC_IDENTIFIERS.add("Directive");
        PUBLIC_IDENTIFIERS.add("Directive$ExportsDirective");
        PUBLIC_IDENTIFIERS.add("Directive$OpensDirective");
        PUBLIC_IDENTIFIERS.add("Directive$ProvidesDirective");
        PUBLIC_IDENTIFIERS.add("Directive$RequiresDirective");
        PUBLIC_IDENTIFIERS.add("Directive$UsesDirective");
        PUBLIC_IDENTIFIERS.add("DirectiveTree");
        PUBLIC_IDENTIFIERS.add("DirectMethodHandleDesc");
        PUBLIC_IDENTIFIERS.add("DirectoryManager");
        PUBLIC_IDENTIFIERS.add("DirectoryNotEmptyException");
        PUBLIC_IDENTIFIERS.add("DirectoryStream");
        PUBLIC_IDENTIFIERS.add("DirectoryStream$Filter");
        PUBLIC_IDENTIFIERS.add("DirObjectFactory");
        PUBLIC_IDENTIFIERS.add("DirSearch");
        PUBLIC_IDENTIFIERS.add("DirStateFactory");
        PUBLIC_IDENTIFIERS.add("DirStateFactory$Result");
        PUBLIC_IDENTIFIERS.add("DirtyRegion");
        PUBLIC_IDENTIFIERS.add("DisabledAlgorithmConstraints");
        PUBLIC_IDENTIFIERS.add("Disassembler");
        PUBLIC_IDENTIFIERS.add("DisassemblerTool");
        PUBLIC_IDENTIFIERS.add("DisassemblerTool$DisassemblerTask");
        PUBLIC_IDENTIFIERS.add("Dispatcher");
        PUBLIC_IDENTIFIERS.add("DispatcherWrapper");
        PUBLIC_IDENTIFIERS.add("Display");
        PUBLIC_IDENTIFIERS.add("DisplayChangedListener");
        PUBLIC_IDENTIFIERS.add("Disposer");
        PUBLIC_IDENTIFIERS.add("Disposer$PollDisposable");
        PUBLIC_IDENTIFIERS.add("DisposerRecord");
        PUBLIC_IDENTIFIERS.add("DisposerTarget");
        PUBLIC_IDENTIFIERS.add("DistributionPoint");
        PUBLIC_IDENTIFIERS.add("DistributionPointFetcher");
        PUBLIC_IDENTIFIERS.add("DistributionPointName");
        PUBLIC_IDENTIFIERS.add("Div");
        PUBLIC_IDENTIFIERS.add("DkCrypto");
        PUBLIC_IDENTIFIERS.add("DLL");
        PUBLIC_IDENTIFIERS.add("DLLCharacteristics");
        PUBLIC_IDENTIFIERS.add("DLOAD");
        PUBLIC_IDENTIFIERS.add("DMUL");
        PUBLIC_IDENTIFIERS.add("DNEG");
        PUBLIC_IDENTIFIERS.add("DnsClient");
        PUBLIC_IDENTIFIERS.add("DnsContext");
        PUBLIC_IDENTIFIERS.add("DnsContextFactory");
        PUBLIC_IDENTIFIERS.add("DNSName");
        PUBLIC_IDENTIFIERS.add("DnsUrl");
        PUBLIC_IDENTIFIERS.add("dnsURLContext");
        PUBLIC_IDENTIFIERS.add("dnsURLContextFactory");
        PUBLIC_IDENTIFIERS.add("Doc");
        PUBLIC_IDENTIFIERS.add("DocAttribute");
        PUBLIC_IDENTIFIERS.add("DocAttributeSet");
        PUBLIC_IDENTIFIERS.add("DocCommentParser");
        PUBLIC_IDENTIFIERS.add("DocCommentTable");
        PUBLIC_IDENTIFIERS.add("DocCommentTree");
        PUBLIC_IDENTIFIERS.add("DocEnvImpl");
        PUBLIC_IDENTIFIERS.add("DocFile");
        PUBLIC_IDENTIFIERS.add("DocFileElement");
        PUBLIC_IDENTIFIERS.add("DocFileFactory");
        PUBLIC_IDENTIFIERS.add("DocFileIOException");
        PUBLIC_IDENTIFIERS.add("DocFilesHandler");
        PUBLIC_IDENTIFIERS.add("DocFilesHandlerImpl");
        PUBLIC_IDENTIFIERS.add("DocFinder");
        PUBLIC_IDENTIFIERS.add("DocFinder$Criterion");
        PUBLIC_IDENTIFIERS.add("DocFinder$Result");
        PUBLIC_IDENTIFIERS.add("DocFinder$Result$Conclude");
        PUBLIC_IDENTIFIERS.add("DocFinder$Result$Continue");
        PUBLIC_IDENTIFIERS.add("DocFinder$Result$Skip");
        PUBLIC_IDENTIFIERS.add("DocFlavor");
        PUBLIC_IDENTIFIERS.add("DocFlavor$BYTE_ARRAY");
        PUBLIC_IDENTIFIERS.add("DocFlavor$CHAR_ARRAY");
        PUBLIC_IDENTIFIERS.add("DocFlavor$INPUT_STREAM");
        PUBLIC_IDENTIFIERS.add("DocFlavor$READER");
        PUBLIC_IDENTIFIERS.add("DocFlavor$SERVICE_FORMATTED");
        PUBLIC_IDENTIFIERS.add("DocFlavor$STRING");
        PUBLIC_IDENTIFIERS.add("DocFlavor$URL");
        PUBLIC_IDENTIFIERS.add("Doclet");
        PUBLIC_IDENTIFIERS.add("Doclet$Option");
        PUBLIC_IDENTIFIERS.add("DocletConstants");
        PUBLIC_IDENTIFIERS.add("DocletElement");
        PUBLIC_IDENTIFIERS.add("DocletEnvironment");
        PUBLIC_IDENTIFIERS.add("DocletException");
        PUBLIC_IDENTIFIERS.add("DocLink");
        PUBLIC_IDENTIFIERS.add("DocLint");
        PUBLIC_IDENTIFIERS.add("DocLint$BadArgs");
        PUBLIC_IDENTIFIERS.add("DocPath");
        PUBLIC_IDENTIFIERS.add("DocPaths");
        PUBLIC_IDENTIFIERS.add("DocPretty");
        PUBLIC_IDENTIFIERS.add("DocPrintJob");
        PUBLIC_IDENTIFIERS.add("DocRootTaglet");
        PUBLIC_IDENTIFIERS.add("DocRootTree");
        PUBLIC_IDENTIFIERS.add("DocSourcePositions");
        PUBLIC_IDENTIFIERS.add("DocTree");
        PUBLIC_IDENTIFIERS.add("DocTreeFactory");
        PUBLIC_IDENTIFIERS.add("DocTreeMaker");
        PUBLIC_IDENTIFIERS.add("DocTreePath");
        PUBLIC_IDENTIFIERS.add("DocTreePathScanner");
        PUBLIC_IDENTIFIERS.add("DocTrees");
        PUBLIC_IDENTIFIERS.add("DocTreeScanner");
        PUBLIC_IDENTIFIERS.add("DocTreeVisitor");
        PUBLIC_IDENTIFIERS.add("DocTypeTree");
        PUBLIC_IDENTIFIERS.add("Document");
        PUBLIC_IDENTIFIERS.add("DocumentationTool");
        PUBLIC_IDENTIFIERS.add("DocumentationTool$DocumentationTask");
        PUBLIC_IDENTIFIERS.add("DocumentBuilder");
        PUBLIC_IDENTIFIERS.add("DocumentBuilderFactory");
        PUBLIC_IDENTIFIERS.add("DocumentBuilderFactoryImpl");
        PUBLIC_IDENTIFIERS.add("DocumentBuilderImpl");
        PUBLIC_IDENTIFIERS.add("DocumentCSS");
        PUBLIC_IDENTIFIERS.add("Documented");
        PUBLIC_IDENTIFIERS.add("DocumentEvent");
        PUBLIC_IDENTIFIERS.add("DocumentEvent$ElementChange");
        PUBLIC_IDENTIFIERS.add("DocumentFilter");
        PUBLIC_IDENTIFIERS.add("DocumentFilter$FilterBypass");
        PUBLIC_IDENTIFIERS.add("DocumentFragment");
        PUBLIC_IDENTIFIERS.add("DocumentFragmentImpl");
        PUBLIC_IDENTIFIERS.add("DocumentHandler");
        PUBLIC_IDENTIFIERS.add("DocumentImpl");
        PUBLIC_IDENTIFIERS.add("DocumentListener");
        PUBLIC_IDENTIFIERS.add("DocumentParser");
        PUBLIC_IDENTIFIERS.add("DocumentPropertiesUI");
        PUBLIC_IDENTIFIERS.add("DocumentRange");
        PUBLIC_IDENTIFIERS.add("DocumentStyle");
        PUBLIC_IDENTIFIERS.add("DocumentTraversal");
        PUBLIC_IDENTIFIERS.add("DocumentType");
        PUBLIC_IDENTIFIERS.add("DocumentTypeImpl");
        PUBLIC_IDENTIFIERS.add("DocumentView");
        PUBLIC_IDENTIFIERS.add("DOM");
        PUBLIC_IDENTIFIERS.add("DOM2DTM");
        PUBLIC_IDENTIFIERS.add("DOM2DTM$CharacterNodeHandler");
        PUBLIC_IDENTIFIERS.add("DOM2DTMdefaultNamespaceDeclarationNode");
        PUBLIC_IDENTIFIERS.add("DOM2SAX");
        PUBLIC_IDENTIFIERS.add("DOM2TO");
        PUBLIC_IDENTIFIERS.add("DOM3Serializer");
        PUBLIC_IDENTIFIERS.add("DomainCombiner");
        PUBLIC_IDENTIFIERS.add("DOMBuilder");
        PUBLIC_IDENTIFIERS.add("DOMCache");
        PUBLIC_IDENTIFIERS.add("DOMCanonicalizationMethod");
        PUBLIC_IDENTIFIERS.add("DOMConfiguration");
        PUBLIC_IDENTIFIERS.add("DOMConfigurationImpl");
        PUBLIC_IDENTIFIERS.add("DOMCryptoContext");
        PUBLIC_IDENTIFIERS.add("DOMDigestMethod");
        PUBLIC_IDENTIFIERS.add("DOMEnhancedForDTM");
        PUBLIC_IDENTIFIERS.add("DOMEntityResolverWrapper");
        PUBLIC_IDENTIFIERS.add("DOMError");
        PUBLIC_IDENTIFIERS.add("DOMErrorHandler");
        PUBLIC_IDENTIFIERS.add("DOMErrorHandlerWrapper");
        PUBLIC_IDENTIFIERS.add("DOMErrorImpl");
        PUBLIC_IDENTIFIERS.add("DOMException");
        PUBLIC_IDENTIFIERS.add("DOMHMACSignatureMethod");
        PUBLIC_IDENTIFIERS.add("DOMImplementation");
        PUBLIC_IDENTIFIERS.add("DOMImplementationCSS");
        PUBLIC_IDENTIFIERS.add("DOMImplementationImpl");
        PUBLIC_IDENTIFIERS.add("DOMImplementationList");
        PUBLIC_IDENTIFIERS.add("DOMImplementationListImpl");
        PUBLIC_IDENTIFIERS.add("DOMImplementationLS");
        PUBLIC_IDENTIFIERS.add("DOMImplementationSource");
        PUBLIC_IDENTIFIERS.add("DOMImplementationSourceImpl");
        PUBLIC_IDENTIFIERS.add("DOMInputImpl");
        PUBLIC_IDENTIFIERS.add("DOMKeyValue");
        PUBLIC_IDENTIFIERS.add("DOMLocator");
        PUBLIC_IDENTIFIERS.add("DOMLocatorImpl");
        PUBLIC_IDENTIFIERS.add("DOMMessageFormatter");
        PUBLIC_IDENTIFIERS.add("DOMNamespaceContext");
        PUBLIC_IDENTIFIERS.add("DOMNormalizer");
        PUBLIC_IDENTIFIERS.add("DOMOutputImpl");
        PUBLIC_IDENTIFIERS.add("DOMParser");
        PUBLIC_IDENTIFIERS.add("DOMParserImpl");
        PUBLIC_IDENTIFIERS.add("DOMResult");
        PUBLIC_IDENTIFIERS.add("DOMRSAPSSSignatureMethod");
        PUBLIC_IDENTIFIERS.add("DOMSerializer");
        PUBLIC_IDENTIFIERS.add("DOMSerializerImpl");
        PUBLIC_IDENTIFIERS.add("DOMSignatureMethod");
        PUBLIC_IDENTIFIERS.add("DOMSignContext");
        PUBLIC_IDENTIFIERS.add("DOMSource");
        PUBLIC_IDENTIFIERS.add("DOMStringList");
        PUBLIC_IDENTIFIERS.add("DOMStringListImpl");
        PUBLIC_IDENTIFIERS.add("DOMStructure");
        PUBLIC_IDENTIFIERS.add("DOMSubTreeData");
        PUBLIC_IDENTIFIERS.add("DOMTransform");
        PUBLIC_IDENTIFIERS.add("DOMURIReference");
        PUBLIC_IDENTIFIERS.add("DOMUtil");
        PUBLIC_IDENTIFIERS.add("DOMValidateContext");
        PUBLIC_IDENTIFIERS.add("DOMWSFilter");
        PUBLIC_IDENTIFIERS.add("DOMXMLSignature$DOMSignatureValue");
        PUBLIC_IDENTIFIERS.add("DOMXSImplementationSourceImpl");
        PUBLIC_IDENTIFIERS.add("DontInline");
        PUBLIC_IDENTIFIERS.add("DosFileAttributes");
        PUBLIC_IDENTIFIERS.add("DosFileAttributeView");
        PUBLIC_IDENTIFIERS.add("DoubleAccumulator");
        PUBLIC_IDENTIFIERS.add("DoubleAdder");
        PUBLIC_IDENTIFIERS.add("DoubleBinaryOperator");
        PUBLIC_IDENTIFIERS.add("DoubleBuffer");
        PUBLIC_IDENTIFIERS.add("DoubleByte");
        PUBLIC_IDENTIFIERS.add("DoubleByte$Decoder");
        PUBLIC_IDENTIFIERS.add("DoubleByte$Decoder_DBCSONLY");
        PUBLIC_IDENTIFIERS.add("DoubleByte$Decoder_EBCDIC");
        PUBLIC_IDENTIFIERS.add("DoubleByte$Decoder_EUC_SIM");
        PUBLIC_IDENTIFIERS.add("DoubleByte$Encoder");
        PUBLIC_IDENTIFIERS.add("DoubleByte$Encoder_DBCSONLY");
        PUBLIC_IDENTIFIERS.add("DoubleByte$Encoder_EBCDIC");
        PUBLIC_IDENTIFIERS.add("DoubleByte$Encoder_EUC_SIM");
        PUBLIC_IDENTIFIERS.add("DoubleByteEncoder");
        PUBLIC_IDENTIFIERS.add("DoubleConsts");
        PUBLIC_IDENTIFIERS.add("DoubleConsumer");
        PUBLIC_IDENTIFIERS.add("DoubleDV");
        PUBLIC_IDENTIFIERS.add("DoubleEditor");
        PUBLIC_IDENTIFIERS.add("DoubleField");
        PUBLIC_IDENTIFIERS.add("DoubleFunction");
        PUBLIC_IDENTIFIERS.add("DoublePredicate");
        PUBLIC_IDENTIFIERS.add("DoubleSignature");
        PUBLIC_IDENTIFIERS.add("DoubleStream");
        PUBLIC_IDENTIFIERS.add("DoubleStream$Builder");
        PUBLIC_IDENTIFIERS.add("DoubleStream$DoubleMapMultiConsumer");
        PUBLIC_IDENTIFIERS.add("DoubleSummaryStatistics");
        PUBLIC_IDENTIFIERS.add("DoubleSupplier");
        PUBLIC_IDENTIFIERS.add("DoubleToIntFunction");
        PUBLIC_IDENTIFIERS.add("DoubleToLongFunction");
        PUBLIC_IDENTIFIERS.add("DoubleTreeNodeAdapter");
        PUBLIC_IDENTIFIERS.add("DoubleType");
        PUBLIC_IDENTIFIERS.add("DoubleTypeImpl");
        PUBLIC_IDENTIFIERS.add("DoubleUnaryOperator");
        PUBLIC_IDENTIFIERS.add("DoubleValue");
        PUBLIC_IDENTIFIERS.add("DoubleValueImpl");
        PUBLIC_IDENTIFIERS.add("DoubleVector");
        PUBLIC_IDENTIFIERS.add("DoWhileLoopTree");
        PUBLIC_IDENTIFIERS.add("DowncallLinker");
        PUBLIC_IDENTIFIERS.add("DPathConsumer2D");
        PUBLIC_IDENTIFIERS.add("DraconianErrorHandler");
        PUBLIC_IDENTIFIERS.add("DragGestureEvent");
        PUBLIC_IDENTIFIERS.add("DragGestureListener");
        PUBLIC_IDENTIFIERS.add("DragGestureRecognizer");
        PUBLIC_IDENTIFIERS.add("DragRecognitionSupport$BeforeDrag");
        PUBLIC_IDENTIFIERS.add("DragSource");
        PUBLIC_IDENTIFIERS.add("DragSourceAdapter");
        PUBLIC_IDENTIFIERS.add("DragSourceContext");
        PUBLIC_IDENTIFIERS.add("DragSourceContextPeer");
        PUBLIC_IDENTIFIERS.add("DragSourceContextWrapper");
        PUBLIC_IDENTIFIERS.add("DragSourceDragEvent");
        PUBLIC_IDENTIFIERS.add("DragSourceDropEvent");
        PUBLIC_IDENTIFIERS.add("DragSourceEvent");
        PUBLIC_IDENTIFIERS.add("DragSourceListener");
        PUBLIC_IDENTIFIERS.add("DragSourceMotionListener");
        PUBLIC_IDENTIFIERS.add("DrawGlyphList");
        PUBLIC_IDENTIFIERS.add("DrawGlyphListAA");
        PUBLIC_IDENTIFIERS.add("DrawGlyphListAA$General");
        PUBLIC_IDENTIFIERS.add("DrawGlyphListColor");
        PUBLIC_IDENTIFIERS.add("DrawGlyphListLCD");
        PUBLIC_IDENTIFIERS.add("DrawImage");
        PUBLIC_IDENTIFIERS.add("DrawImagePipe");
        PUBLIC_IDENTIFIERS.add("DrawLine");
        PUBLIC_IDENTIFIERS.add("DrawParallelogram");
        PUBLIC_IDENTIFIERS.add("DrawPath");
        PUBLIC_IDENTIFIERS.add("DrawPolygons");
        PUBLIC_IDENTIFIERS.add("DrawRect");
        PUBLIC_IDENTIFIERS.add("DrbgParameters");
        PUBLIC_IDENTIFIERS.add("DREM");
        PUBLIC_IDENTIFIERS.add("DRETURN");
        PUBLIC_IDENTIFIERS.add("Driver");
        PUBLIC_IDENTIFIERS.add("DriverAction");
        PUBLIC_IDENTIFIERS.add("DriverManager");
        PUBLIC_IDENTIFIERS.add("DriverPropertyInfo");
        PUBLIC_IDENTIFIERS.add("DropTarget");
        PUBLIC_IDENTIFIERS.add("DropTarget$DropTargetAutoScroller");
        PUBLIC_IDENTIFIERS.add("DropTargetAdapter");
        PUBLIC_IDENTIFIERS.add("DropTargetContext$TransferableProxy");
        PUBLIC_IDENTIFIERS.add("DropTargetContextPeer");
        PUBLIC_IDENTIFIERS.add("DropTargetContextWrapper");
        PUBLIC_IDENTIFIERS.add("DropTargetDragEvent");
        PUBLIC_IDENTIFIERS.add("DropTargetDropEvent");
        PUBLIC_IDENTIFIERS.add("DropTargetEvent");
        PUBLIC_IDENTIFIERS.add("DropTargetListener");
        PUBLIC_IDENTIFIERS.add("DropTargetPeer");
        PUBLIC_IDENTIFIERS.add("DSAKey");
        PUBLIC_IDENTIFIERS.add("DSAKeyFactory");
        PUBLIC_IDENTIFIERS.add("DSAKeyPairGenerator");
        PUBLIC_IDENTIFIERS.add("DSAKeyValue");
        PUBLIC_IDENTIFIERS.add("DSAKeyValueResolver");
        PUBLIC_IDENTIFIERS.add("DSAParameterGenerator");
        PUBLIC_IDENTIFIERS.add("DSAParameters");
        PUBLIC_IDENTIFIERS.add("DSAParameterSpec");
        PUBLIC_IDENTIFIERS.add("DSAParams");
        PUBLIC_IDENTIFIERS.add("DSAPrivateKey");
        PUBLIC_IDENTIFIERS.add("DSAPrivateKeySpec");
        PUBLIC_IDENTIFIERS.add("DSAPublicKey");
        PUBLIC_IDENTIFIERS.add("DSAPublicKeySpec");
        PUBLIC_IDENTIFIERS.add("DSO");
        PUBLIC_IDENTIFIERS.add("DSTORE");
        PUBLIC_IDENTIFIERS.add("DSUB");
        PUBLIC_IDENTIFIERS.add("DTD");
        PUBLIC_IDENTIFIERS.add("DTDConfiguration");
        PUBLIC_IDENTIFIERS.add("DTDConstants");
        PUBLIC_IDENTIFIERS.add("DTDDVFactory");
        PUBLIC_IDENTIFIERS.add("DTDDVFactoryImpl");
        PUBLIC_IDENTIFIERS.add("DTDEvent");
        PUBLIC_IDENTIFIERS.add("DTDGrammar");
        PUBLIC_IDENTIFIERS.add("DTDGrammarBucket");
        PUBLIC_IDENTIFIERS.add("DTDGrammarUtil");
        PUBLIC_IDENTIFIERS.add("DTDHandler");
        PUBLIC_IDENTIFIERS.add("DTDParser");
        PUBLIC_IDENTIFIERS.add("DTM");
        PUBLIC_IDENTIFIERS.add("DTMAxisIterator");
        PUBLIC_IDENTIFIERS.add("DTMAxisIteratorBase");
        PUBLIC_IDENTIFIERS.add("DTMAxisIterNodeList");
        PUBLIC_IDENTIFIERS.add("DTMAxisTraverser");
        PUBLIC_IDENTIFIERS.add("DTMChildIterNodeList");
        PUBLIC_IDENTIFIERS.add("DTMDefaultBase");
        PUBLIC_IDENTIFIERS.add("DTMDefaultBaseIterators");
        PUBLIC_IDENTIFIERS.add("DTMDefaultBaseIterators$AncestorIterator");
        PUBLIC_IDENTIFIERS.add("DTMDefaultBaseIterators$DescendantIterator");
        PUBLIC_IDENTIFIERS.add("DTMDefaultBaseIterators$FollowingIterator");
        PUBLIC_IDENTIFIERS.add("DTMDefaultBaseIterators$FollowingSiblingIterator");
        PUBLIC_IDENTIFIERS.add("DTMDefaultBaseIterators$InternalAxisIteratorBase");
        PUBLIC_IDENTIFIERS.add("DTMDefaultBaseIterators$NamespaceIterator");
        PUBLIC_IDENTIFIERS.add("DTMDefaultBaseIterators$NthDescendantIterator");
        PUBLIC_IDENTIFIERS.add("DTMDefaultBaseIterators$PrecedingIterator");
        PUBLIC_IDENTIFIERS.add("DTMDefaultBaseIterators$PrecedingSiblingIterator");
        PUBLIC_IDENTIFIERS.add("DTMDefaultBaseIterators$RootIterator");
        PUBLIC_IDENTIFIERS.add("DTMDefaultBaseIterators$SingletonIterator");
        PUBLIC_IDENTIFIERS.add("DTMDefaultBaseIterators$TypedNamespaceIterator");
        PUBLIC_IDENTIFIERS.add("DTMDefaultBaseIterators$TypedRootIterator");
        PUBLIC_IDENTIFIERS.add("DTMDefaultBaseTraversers");
        PUBLIC_IDENTIFIERS.add("DTMDocumentImpl");
        PUBLIC_IDENTIFIERS.add("DTMDOMException");
        PUBLIC_IDENTIFIERS.add("DTMException");
        PUBLIC_IDENTIFIERS.add("DTMFilter");
        PUBLIC_IDENTIFIERS.add("DTMIterator");
        PUBLIC_IDENTIFIERS.add("DTMManager");
        PUBLIC_IDENTIFIERS.add("DTMManagerDefault");
        PUBLIC_IDENTIFIERS.add("DTMNamedNodeMap");
        PUBLIC_IDENTIFIERS.add("DTMNamedNodeMap$DTMException");
        PUBLIC_IDENTIFIERS.add("DTMNodeIterator");
        PUBLIC_IDENTIFIERS.add("DTMNodeList");
        PUBLIC_IDENTIFIERS.add("DTMNodeListBase");
        PUBLIC_IDENTIFIERS.add("DTMNodeProxy");
        PUBLIC_IDENTIFIERS.add("DTMSafeStringPool");
        PUBLIC_IDENTIFIERS.add("DTMStringPool");
        PUBLIC_IDENTIFIERS.add("DTMTreeWalker");
        PUBLIC_IDENTIFIERS.add("DTMWSFilter");
        PUBLIC_IDENTIFIERS.add("DumbTerminal");
        PUBLIC_IDENTIFIERS.add("DummyDebugger");
        PUBLIC_IDENTIFIERS.add("DummyEvent");
        PUBLIC_IDENTIFIERS.add("DummyScope");
        PUBLIC_IDENTIFIERS.add("DummySymbolFinder");
        PUBLIC_IDENTIFIERS.add("DumpExports");
        PUBLIC_IDENTIFIERS.add("DUP");
        PUBLIC_IDENTIFIERS.add("DUP2");
        PUBLIC_IDENTIFIERS.add("DUP2_X1");
        PUBLIC_IDENTIFIERS.add("DUP2_X2");
        PUBLIC_IDENTIFIERS.add("DuplicateFormatFlagsException");
        PUBLIC_IDENTIFIERS.add("DuplicateRequestException");
        PUBLIC_IDENTIFIERS.add("DUP_X1");
        PUBLIC_IDENTIFIERS.add("DUP_X2");
        PUBLIC_IDENTIFIERS.add("Duration");
        PUBLIC_IDENTIFIERS.add("DurationDV");
        PUBLIC_IDENTIFIERS.add("DVFactoryException");
        PUBLIC_IDENTIFIERS.add("DwarfParser");
        PUBLIC_IDENTIFIERS.add("DynamicCallSiteDesc");
        PUBLIC_IDENTIFIERS.add("DynamicConstantDesc");
        PUBLIC_IDENTIFIERS.add("DynamicMBean");
        PUBLIC_IDENTIFIERS.add("DynamicMBean2");
        PUBLIC_IDENTIFIERS.add("ECDSAOperations");
        PUBLIC_IDENTIFIERS.add("ECDSAOperations$Nonce");
        PUBLIC_IDENTIFIERS.add("ECDSAOperations$Seed");
        PUBLIC_IDENTIFIERS.add("ECDSAUtils$ECCurveDefinition");
        PUBLIC_IDENTIFIERS.add("ECField");
        PUBLIC_IDENTIFIERS.add("ECFieldF2m");
        PUBLIC_IDENTIFIERS.add("ECFieldFp");
        PUBLIC_IDENTIFIERS.add("ECGenParameterSpec");
        PUBLIC_IDENTIFIERS.add("ECKey");
        PUBLIC_IDENTIFIERS.add("ECKeySizeParameterSpec");
        PUBLIC_IDENTIFIERS.add("ECKeyValue");
        PUBLIC_IDENTIFIERS.add("ECKeyValueResolver");
        PUBLIC_IDENTIFIERS.add("ECOperations");
        PUBLIC_IDENTIFIERS.add("ECParameterSpec");
        PUBLIC_IDENTIFIERS.add("ECPoint");
        PUBLIC_IDENTIFIERS.add("ECPrivateKey");
        PUBLIC_IDENTIFIERS.add("ECPrivateKeySpec");
        PUBLIC_IDENTIFIERS.add("ECPublicKey");
        PUBLIC_IDENTIFIERS.add("ECPublicKeySpec");
        PUBLIC_IDENTIFIERS.add("Ed25519Operations");
        PUBLIC_IDENTIFIERS.add("Ed448Operations");
        PUBLIC_IDENTIFIERS.add("EdDSAAlgorithmParameters");
        PUBLIC_IDENTIFIERS.add("EdDSAKeyFactory");
        PUBLIC_IDENTIFIERS.add("EdDSAKeyFactory$Ed25519");
        PUBLIC_IDENTIFIERS.add("EdDSAKeyFactory$Ed448");
        PUBLIC_IDENTIFIERS.add("EdDSAKeyPairGenerator");
        PUBLIC_IDENTIFIERS.add("EdDSAKeyPairGenerator$Ed25519");
        PUBLIC_IDENTIFIERS.add("EdDSAKeyPairGenerator$Ed448");
        PUBLIC_IDENTIFIERS.add("EdDSAOperations");
        PUBLIC_IDENTIFIERS.add("EdDSAParameters");
        PUBLIC_IDENTIFIERS.add("EdDSAParameters$Digester");
        PUBLIC_IDENTIFIERS.add("EdDSAParameters$DigesterFactory");
        PUBLIC_IDENTIFIERS.add("EdDSAParameterSpec");
        PUBLIC_IDENTIFIERS.add("EdDSASignature");
        PUBLIC_IDENTIFIERS.add("EdDSASignature$Ed25519");
        PUBLIC_IDENTIFIERS.add("EdDSASignature$Ed448");
        PUBLIC_IDENTIFIERS.add("EdECKey");
        PUBLIC_IDENTIFIERS.add("EdECOperations");
        PUBLIC_IDENTIFIERS.add("EdECPrivateKey");
        PUBLIC_IDENTIFIERS.add("EdECPublicKey");
        PUBLIC_IDENTIFIERS.add("EDIPartyName");
        PUBLIC_IDENTIFIERS.add("EditableAtEndDocument");
        PUBLIC_IDENTIFIERS.add("Editor");
        PUBLIC_IDENTIFIERS.add("EditorCommands");
        PUBLIC_IDENTIFIERS.add("EditorFactory");
        PUBLIC_IDENTIFIERS.add("EditorKit");
        PUBLIC_IDENTIFIERS.add("EditPadProvider");
        PUBLIC_IDENTIFIERS.add("Effect$ArrayCache");
        PUBLIC_IDENTIFIERS.add("Element");
        PUBLIC_IDENTIFIERS.add("ElementCSSInlineStyle");
        PUBLIC_IDENTIFIERS.add("ElementDefinitionImpl");
        PUBLIC_IDENTIFIERS.add("ElementFilter");
        PUBLIC_IDENTIFIERS.add("ElementHandler");
        PUBLIC_IDENTIFIERS.add("ElementImpl");
        PUBLIC_IDENTIFIERS.add("ElementIterator");
        PUBLIC_IDENTIFIERS.add("ElementKindVisitor14");
        PUBLIC_IDENTIFIERS.add("ElementKindVisitor6");
        PUBLIC_IDENTIFIERS.add("ElementKindVisitor7");
        PUBLIC_IDENTIFIERS.add("ElementKindVisitor8");
        PUBLIC_IDENTIFIERS.add("ElementKindVisitor9");
        PUBLIC_IDENTIFIERS.add("ElementListWriter");
        PUBLIC_IDENTIFIERS.add("ElementNSImpl");
        PUBLIC_IDENTIFIERS.add("ElementProxy");
        PUBLIC_IDENTIFIERS.add("ElementPSVI");
        PUBLIC_IDENTIFIERS.add("ElementPSVImpl");
        PUBLIC_IDENTIFIERS.add("Elements");
        PUBLIC_IDENTIFIERS.add("ElementScanner14");
        PUBLIC_IDENTIFIERS.add("ElementScanner6");
        PUBLIC_IDENTIFIERS.add("ElementScanner7");
        PUBLIC_IDENTIFIERS.add("ElementScanner8");
        PUBLIC_IDENTIFIERS.add("ElementScanner9");
        PUBLIC_IDENTIFIERS.add("ElementsTable");
        PUBLIC_IDENTIFIERS.add("ElementState");
        PUBLIC_IDENTIFIERS.add("ElementTraversal");
        PUBLIC_IDENTIFIERS.add("ElementValue");
        PUBLIC_IDENTIFIERS.add("ElementValueGen");
        PUBLIC_IDENTIFIERS.add("ElementValuePair");
        PUBLIC_IDENTIFIERS.add("ElementValuePairGen");
        PUBLIC_IDENTIFIERS.add("ElementVisitor");
        PUBLIC_IDENTIFIERS.add("ELFException");
        PUBLIC_IDENTIFIERS.add("ELFFile");
        PUBLIC_IDENTIFIERS.add("ELFFileParser");
        PUBLIC_IDENTIFIERS.add("ELFHashTable");
        PUBLIC_IDENTIFIERS.add("ELFHeader");
        PUBLIC_IDENTIFIERS.add("ELFProgramHeader");
        PUBLIC_IDENTIFIERS.add("ELFSectionHeader");
        PUBLIC_IDENTIFIERS.add("ELFStringTable");
        PUBLIC_IDENTIFIERS.add("ELFSymbol");
        PUBLIC_IDENTIFIERS.add("Ellipse2D");
        PUBLIC_IDENTIFIERS.add("Ellipse2D$Double");
        PUBLIC_IDENTIFIERS.add("Ellipse2D$Float");
        PUBLIC_IDENTIFIERS.add("EllipticCurve");
        PUBLIC_IDENTIFIERS.add("EmbeddedFrame");
        PUBLIC_IDENTIFIERS.add("Empty");
        PUBLIC_IDENTIFIERS.add("EmptyBorder");
        PUBLIC_IDENTIFIERS.add("EmptySerializer");
        PUBLIC_IDENTIFIERS.add("EmptyStackException");
        PUBLIC_IDENTIFIERS.add("EmptyStatementTree");
        PUBLIC_IDENTIFIERS.add("EmptyVisitor");
        PUBLIC_IDENTIFIERS.add("Enabled");
        PUBLIC_IDENTIFIERS.add("EncAPRepPart");
        PUBLIC_IDENTIFIERS.add("EncASRepPart");
        PUBLIC_IDENTIFIERS.add("EncKDCRepPart");
        PUBLIC_IDENTIFIERS.add("EncKrbCredPart");
        PUBLIC_IDENTIFIERS.add("EnclosingMethod");
        PUBLIC_IDENTIFIERS.add("EnclosingMethod_attribute");
        PUBLIC_IDENTIFIERS.add("EncodedKeySpec");
        PUBLIC_IDENTIFIERS.add("EncodedSpeculationReason");
        PUBLIC_IDENTIFIERS.add("Encoder");
        PUBLIC_IDENTIFIERS.add("EncodingInfo");
        PUBLIC_IDENTIFIERS.add("EncodingMap");
        PUBLIC_IDENTIFIERS.add("EncryptedData");
        PUBLIC_IDENTIFIERS.add("EncryptedPrivateKeyInfo");
        PUBLIC_IDENTIFIERS.add("EncryptionKey");
        PUBLIC_IDENTIFIERS.add("EncTGSRepPart");
        PUBLIC_IDENTIFIERS.add("EncTicketPart");
        PUBLIC_IDENTIFIERS.add("EndDocument");
        PUBLIC_IDENTIFIERS.add("EndDocumentEvent");
        PUBLIC_IDENTIFIERS.add("EndElement");
        PUBLIC_IDENTIFIERS.add("EndElementEvent");
        PUBLIC_IDENTIFIERS.add("EndElementTree");
        PUBLIC_IDENTIFIERS.add("EndOfFileException");
        PUBLIC_IDENTIFIERS.add("Endpoint");
        PUBLIC_IDENTIFIERS.add("EndPosTable");
        PUBLIC_IDENTIFIERS.add("EnhancedForLoopTree");
        PUBLIC_IDENTIFIERS.add("Enter");
        PUBLIC_IDENTIFIERS.add("Entity");
        PUBLIC_IDENTIFIERS.add("Entity$ExternalEntity");
        PUBLIC_IDENTIFIERS.add("Entity$InternalEntity");
        PUBLIC_IDENTIFIERS.add("Entity$ScannedEntity");
        PUBLIC_IDENTIFIERS.add("ENTITYDatatypeValidator");
        PUBLIC_IDENTIFIERS.add("EntityDeclaration");
        PUBLIC_IDENTIFIERS.add("EntityDeclarationImpl");
        PUBLIC_IDENTIFIERS.add("EntityDV");
        PUBLIC_IDENTIFIERS.add("EntityImpl");
        PUBLIC_IDENTIFIERS.add("EntityReference");
        PUBLIC_IDENTIFIERS.add("EntityReferenceEvent");
        PUBLIC_IDENTIFIERS.add("EntityReferenceImpl");
        PUBLIC_IDENTIFIERS.add("EntityResolver");
        PUBLIC_IDENTIFIERS.add("EntityResolver2");
        PUBLIC_IDENTIFIERS.add("EntityResolver2Wrapper");
        PUBLIC_IDENTIFIERS.add("EntityResolverWrapper");
        PUBLIC_IDENTIFIERS.add("EntityState");
        PUBLIC_IDENTIFIERS.add("EntityTree");
        PUBLIC_IDENTIFIERS.add("EntropySource");
        PUBLIC_IDENTIFIERS.add("Enum");
        PUBLIC_IDENTIFIERS.add("EnumCompleter");
        PUBLIC_IDENTIFIERS.add("EnumConstantBuilder");
        PUBLIC_IDENTIFIERS.add("EnumConstantNotPresentException");
        PUBLIC_IDENTIFIERS.add("EnumConstantNotPresentExceptionProxy");
        PUBLIC_IDENTIFIERS.add("EnumConstantWriter");
        PUBLIC_IDENTIFIERS.add("EnumConstantWriterImpl");
        PUBLIC_IDENTIFIERS.add("EnumControl");
        PUBLIC_IDENTIFIERS.add("EnumControl$Type");
        PUBLIC_IDENTIFIERS.add("EnumConverter");
        PUBLIC_IDENTIFIERS.add("EnumElementValue");
        PUBLIC_IDENTIFIERS.add("EnumElementValueGen");
        PUBLIC_IDENTIFIERS.add("Enumeration");
        PUBLIC_IDENTIFIERS.add("EnumMap");
        PUBLIC_IDENTIFIERS.add("EnumSet");
        PUBLIC_IDENTIFIERS.add("EnumSyntax");
        PUBLIC_IDENTIFIERS.add("EnumType");
        PUBLIC_IDENTIFIERS.add("Env");
        PUBLIC_IDENTIFIERS.add("EnvHelp");
        PUBLIC_IDENTIFIERS.add("EnvUtils");
        PUBLIC_IDENTIFIERS.add("EOFError");
        PUBLIC_IDENTIFIERS.add("EOFException");
        PUBLIC_IDENTIFIERS.add("EPollSelectorProvider");
        PUBLIC_IDENTIFIERS.add("EpsilonHeap");
        PUBLIC_IDENTIFIERS.add("Equals");
        PUBLIC_IDENTIFIERS.add("Era");
        PUBLIC_IDENTIFIERS.add("ErroneousSnippet");
        PUBLIC_IDENTIFIERS.add("ErroneousTree");
        PUBLIC_IDENTIFIERS.add("Error");
        PUBLIC_IDENTIFIERS.add("ErrorFrame");
        PUBLIC_IDENTIFIERS.add("ErrorHandler");
        PUBLIC_IDENTIFIERS.add("ErrorHandlerAdaptor");
        PUBLIC_IDENTIFIERS.add("ErrorHandlerProxy");
        PUBLIC_IDENTIFIERS.add("ErrorHandlerWrapper");
        PUBLIC_IDENTIFIERS.add("ErrorListener");
        PUBLIC_IDENTIFIERS.add("ErrorManager");
        PUBLIC_IDENTIFIERS.add("ErrorMessages");
        PUBLIC_IDENTIFIERS.add("ErrorMessages_de");
        PUBLIC_IDENTIFIERS.add("ErrorMessages_ja");
        PUBLIC_IDENTIFIERS.add("ErrorMessages_zh_CN");
        PUBLIC_IDENTIFIERS.add("ErrorType");
        PUBLIC_IDENTIFIERS.add("EtchedBorder");
        PUBLIC_IDENTIFIERS.add("EType");
        PUBLIC_IDENTIFIERS.add("ETypeInfo");
        PUBLIC_IDENTIFIERS.add("ETypeInfo2");
        PUBLIC_IDENTIFIERS.add("EUC_CN");
        PUBLIC_IDENTIFIERS.add("EUC_JP");
        PUBLIC_IDENTIFIERS.add("EUC_JP_LINUX");
        PUBLIC_IDENTIFIERS.add("EUC_JP_Open");
        PUBLIC_IDENTIFIERS.add("EUC_KR");
        PUBLIC_IDENTIFIERS.add("EUC_TW");
        PUBLIC_IDENTIFIERS.add("EUC_TW$Decoder");
        PUBLIC_IDENTIFIERS.add("EUC_TW$Encoder");
        PUBLIC_IDENTIFIERS.add("EvalException");
        PUBLIC_IDENTIFIERS.add("Event");
        PUBLIC_IDENTIFIERS.add("Event$Reporter");
        PUBLIC_IDENTIFIERS.add("EventByteStream");
        PUBLIC_IDENTIFIERS.add("EventContext");
        PUBLIC_IDENTIFIERS.add("EventDirContext");
        PUBLIC_IDENTIFIERS.add("EventException");
        PUBLIC_IDENTIFIERS.add("EventFilter");
        PUBLIC_IDENTIFIERS.add("EventFilterSupport");
        PUBLIC_IDENTIFIERS.add("EventHandler");
        PUBLIC_IDENTIFIERS.add("EventID");
        PUBLIC_IDENTIFIERS.add("EventImpl");
        PUBLIC_IDENTIFIERS.add("EventIterator");
        PUBLIC_IDENTIFIERS.add("EventListener");
        PUBLIC_IDENTIFIERS.add("EventListenerList");
        PUBLIC_IDENTIFIERS.add("EventListenerProxy");
        PUBLIC_IDENTIFIERS.add("EventObject");
        PUBLIC_IDENTIFIERS.add("EventProvider");
        PUBLIC_IDENTIFIERS.add("EventProvider$CompilationEvent");
        PUBLIC_IDENTIFIERS.add("EventProvider$CompilerFailureEvent");
        PUBLIC_IDENTIFIERS.add("EventProvider$InstantEvent");
        PUBLIC_IDENTIFIERS.add("EventProvider$TimedEvent");
        PUBLIC_IDENTIFIERS.add("EventQueue");
        PUBLIC_IDENTIFIERS.add("EventQueueImpl");
        PUBLIC_IDENTIFIERS.add("EventQueueItem");
        PUBLIC_IDENTIFIERS.add("EventQueueMonitor");
        PUBLIC_IDENTIFIERS.add("EventReaderDelegate");
        PUBLIC_IDENTIFIERS.add("EventRequest");
        PUBLIC_IDENTIFIERS.add("EventRequestManager");
        PUBLIC_IDENTIFIERS.add("EventSet");
        PUBLIC_IDENTIFIERS.add("EventSetDescriptor");
        PUBLIC_IDENTIFIERS.add("EventSetImpl");
        PUBLIC_IDENTIFIERS.add("EventSetImpl$Itr");
        PUBLIC_IDENTIFIERS.add("EventSettings");
        PUBLIC_IDENTIFIERS.add("EventSettingsModifier");
        PUBLIC_IDENTIFIERS.add("EventStream");
        PUBLIC_IDENTIFIERS.add("EventTarget");
        PUBLIC_IDENTIFIERS.add("Exception");
        PUBLIC_IDENTIFIERS.add("ExceptionBlob");
        PUBLIC_IDENTIFIERS.add("ExceptionEvent");
        PUBLIC_IDENTIFIERS.add("ExceptionInInitializerError");
        PUBLIC_IDENTIFIERS.add("ExceptionListener");
        PUBLIC_IDENTIFIERS.add("ExceptionProxy");
        PUBLIC_IDENTIFIERS.add("ExceptionRequest");
        PUBLIC_IDENTIFIERS.add("Exceptions_attribute");
        PUBLIC_IDENTIFIERS.add("ExceptionTableElement");
        PUBLIC_IDENTIFIERS.add("ExceptionThrower");
        PUBLIC_IDENTIFIERS.add("Exchanger");
        PUBLIC_IDENTIFIERS.add("ExecPty");
        PUBLIC_IDENTIFIERS.add("Executable");
        PUBLIC_IDENTIFIERS.add("ExecutableElement");
        PUBLIC_IDENTIFIERS.add("ExecutableImage");
        PUBLIC_IDENTIFIERS.add("ExecutableType");
        PUBLIC_IDENTIFIERS.add("ExecutionControl");
        PUBLIC_IDENTIFIERS.add("ExecutionControl$ClassInstallException");
        PUBLIC_IDENTIFIERS.add("ExecutionControl$EngineTerminationException");
        PUBLIC_IDENTIFIERS.add("ExecutionControl$ExecutionControlException");
        PUBLIC_IDENTIFIERS.add("ExecutionControl$InternalException");
        PUBLIC_IDENTIFIERS.add("ExecutionControl$NotImplementedException");
        PUBLIC_IDENTIFIERS.add("ExecutionControl$ResolutionException");
        PUBLIC_IDENTIFIERS.add("ExecutionControl$RunException");
        PUBLIC_IDENTIFIERS.add("ExecutionControl$StoppedException");
        PUBLIC_IDENTIFIERS.add("ExecutionControl$UserException");
        PUBLIC_IDENTIFIERS.add("ExecutionControlProvider");
        PUBLIC_IDENTIFIERS.add("ExecutionEnv");
        PUBLIC_IDENTIFIERS.add("ExecutionException");
        PUBLIC_IDENTIFIERS.add("Executor");
        PUBLIC_IDENTIFIERS.add("ExecutorCompletionService");
        PUBLIC_IDENTIFIERS.add("Executors");
        PUBLIC_IDENTIFIERS.add("ExecutorService");
        PUBLIC_IDENTIFIERS.add("ExemptionMechanism");
        PUBLIC_IDENTIFIERS.add("ExemptionMechanismException");
        PUBLIC_IDENTIFIERS.add("ExemptionMechanismSpi");
        PUBLIC_IDENTIFIERS.add("ExitAction");
        PUBLIC_IDENTIFIERS.add("ExpandedNameTable");
        PUBLIC_IDENTIFIERS.add("Expander");
        PUBLIC_IDENTIFIERS.add("ExpandVetoException");
        PUBLIC_IDENTIFIERS.add("Experimental");
        PUBLIC_IDENTIFIERS.add("ExportDirectoryTable");
        PUBLIC_IDENTIFIERS.add("ExportException");
        PUBLIC_IDENTIFIERS.add("ExportsTree");
        PUBLIC_IDENTIFIERS.add("Expression");
        PUBLIC_IDENTIFIERS.add("ExpressionContext");
        PUBLIC_IDENTIFIERS.add("ExpressionExecuter");
        PUBLIC_IDENTIFIERS.add("ExpressionNode");
        PUBLIC_IDENTIFIERS.add("ExpressionOwner");
        PUBLIC_IDENTIFIERS.add("ExpressionParser");
        PUBLIC_IDENTIFIERS.add("ExpressionParser$GetFrame");
        PUBLIC_IDENTIFIERS.add("ExpressionParserConstants");
        PUBLIC_IDENTIFIERS.add("ExpressionParserTokenManager");
        PUBLIC_IDENTIFIERS.add("ExpressionResolver");
        PUBLIC_IDENTIFIERS.add("ExpressionSnippet");
        PUBLIC_IDENTIFIERS.add("ExpressionStatementTree");
        PUBLIC_IDENTIFIERS.add("ExpressionToTypeInfo$ExpressionInfo");
        PUBLIC_IDENTIFIERS.add("ExpressionTree");
        PUBLIC_IDENTIFIERS.add("ExsltBase");
        PUBLIC_IDENTIFIERS.add("ExsltCommon");
        PUBLIC_IDENTIFIERS.add("ExsltDatetime");
        PUBLIC_IDENTIFIERS.add("ExsltDynamic");
        PUBLIC_IDENTIFIERS.add("ExsltMath");
        PUBLIC_IDENTIFIERS.add("ExsltSets");
        PUBLIC_IDENTIFIERS.add("ExsltStrings");
        PUBLIC_IDENTIFIERS.add("ExtendedBufferCapabilities");
        PUBLIC_IDENTIFIERS.add("ExtendedCharsets");
        PUBLIC_IDENTIFIERS.add("ExtendedGSSContext");
        PUBLIC_IDENTIFIERS.add("ExtendedGSSCredential");
        PUBLIC_IDENTIFIERS.add("ExtendedHomogeneousPoint");
        PUBLIC_IDENTIFIERS.add("ExtendedHomogeneousPoint$Immutable");
        PUBLIC_IDENTIFIERS.add("ExtendedHomogeneousPoint$Mutable");
        PUBLIC_IDENTIFIERS.add("ExtendedKeyCodes");
        PUBLIC_IDENTIFIERS.add("ExtendedKeyUsageExtension");
        PUBLIC_IDENTIFIERS.add("ExtendedMapMode");
        PUBLIC_IDENTIFIERS.add("ExtendedRequest");
        PUBLIC_IDENTIFIERS.add("ExtendedResponse");
        PUBLIC_IDENTIFIERS.add("ExtendedSAX");
        PUBLIC_IDENTIFIERS.add("ExtendedSchemaDVFactoryImpl");
        PUBLIC_IDENTIFIERS.add("ExtendedSocketOptions");
        PUBLIC_IDENTIFIERS.add("ExtendedSSLSession");
        PUBLIC_IDENTIFIERS.add("ExtendedTextLabel");
        PUBLIC_IDENTIFIERS.add("Extension");
        PUBLIC_IDENTIFIERS.add("Extensions");
        PUBLIC_IDENTIFIERS.add("ExtensionsProvider");
        PUBLIC_IDENTIFIERS.add("Extern");
        PUBLIC_IDENTIFIERS.add("ExternalEditor");
        PUBLIC_IDENTIFIERS.add("Externalizable");
        PUBLIC_IDENTIFIERS.add("ExternalSpecsWriter");
        PUBLIC_IDENTIFIERS.add("ExternalSubsetResolver");
        PUBLIC_IDENTIFIERS.add("ExternalTerminal");
        PUBLIC_IDENTIFIERS.add("ExternalVFrame");
    }
}
